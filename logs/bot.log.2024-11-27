{"asctime": "2024-11-27 05:55:47", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 05:55:48", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 05:55:48", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 05:55:49", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 05:56:26", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:28", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:28", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:28", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:28", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:28", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: en", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:28", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: English", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:28", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/start'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:28", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: start with args: (<handlers.BotHandlers object at 0x00000233779E0740>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 2, 56, 26, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=6, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2253, supergroup_chat_created=False, text='/start'), update_id=881193494), <telegram.ext._callbackcontext.CallbackContext object at 0x000002331D037230>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:28", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: start with result: <coroutine object BotHandlers.start at 0x000002337FDA2D60>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:28", "name": "handlers", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:29", "name": "handlers", "levelname": "INFO", "message": "Sent welcome message to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:29", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:33", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:33", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:33", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: English", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:33", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/language'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:33", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: language with args: (<handlers.BotHandlers object at 0x00000233779E0740>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 2, 56, 33, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=9, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2255, supergroup_chat_created=False, text='/language'), update_id=881193495), <telegram.ext._callbackcontext.CallbackContext object at 0x000002331D0356A0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:33", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: language with result: <coroutine object BotHandlers.language at 0x000002331D078D00>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:34", "name": "handlers", "levelname": "INFO", "message": "Prompted language selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:34", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:36", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:36", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:36", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: English", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:36", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_language:Russian'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:36", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_language with args: (<handlers.BotHandlers object at 0x00000233779E0740>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_language:Russian', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), id='1051116658863615894', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 2, 56, 33, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2256, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_language:English', text='English'),), (InlineKeyboardButton(callback_data='set_language:Russian', text='\u0420\u0443\u0441\u0441\u043a\u0438\u0439'),), (InlineKeyboardButton(callback_data='set_language:Indonesian', text='Indone... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:36", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_language with result: <coroutine object BotHandlers.set_language at 0x000002337FDA30F0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:36", "name": "handlers", "levelname": "DEBUG", "message": "Updated language to 'Russian' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:36", "name": "handlers", "levelname": "INFO", "message": "User_id=244732168 set language to 'Russian'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:36", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:40", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:40", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:40", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:40", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/status'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:40", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: status with args: (<handlers.BotHandlers object at 0x00000233779E0740>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 2, 56, 40, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=7, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2258, supergroup_chat_created=False, text='/status'), update_id=881193497), <telegram.ext._callbackcontext.CallbackContext object at 0x000002331D037850>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:40", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: status with result: <coroutine object BotHandlers.status at 0x000002337D33B610>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:40", "name": "handlers", "levelname": "INFO", "message": "Provided status to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:40", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:44", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:44", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:44", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:44", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:44", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x00000233779E0740>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 2, 56, 43, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2260, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193498), <telegram.ext._callbackcontext.CallbackContext object at 0x000002331D035010>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:44", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x000002337FD9B520>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:44", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:44", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:46", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:46", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:46", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:46", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:46", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x00000233779E0740>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), id='1051116661716769291', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 2, 56, 44, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2261, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations'),... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:46", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x000002337FC5F5E0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:46", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:46", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:46", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x000002331D096B10>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:46", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:46", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x000002331D096B10>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:46", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:46", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:47", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:47", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:47", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:47", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:47", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:47", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:47", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:52", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:52", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:52", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:52", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/status'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:52", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: status with args: (<handlers.BotHandlers object at 0x00000233779E0740>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 2, 56, 51, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=7, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2263, supergroup_chat_created=False, text='/status'), update_id=881193500), <telegram.ext._callbackcontext.CallbackContext object at 0x000002331D035010>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:52", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: status with result: <coroutine object BotHandlers.status at 0x000002337D33A260>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:56", "name": "llm_service", "levelname": "INFO", "message": "Empty content on page 7 of document '\u0418\u043d\u0436\u0435\u043d\u0435\u0440\u043d\u043e \u0433\u0435\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0437\u044b\u0441\u043a\u0430\u043d\u0438\u044f_\u0421\u041f 446.1325800.2019 .pdf'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:57", "name": "llm_service", "levelname": "INFO", "message": "Empty content on page 86 of document '\u041d\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0438 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f_\u0421\u041f 20.13330.2016.pdf'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:56:58", "name": "llm_service", "levelname": "INFO", "message": "Empty content on page 1 of document '\u041d\u0435\u0441\u0443\u0449\u0438\u0435_\u0438_\u043e\u0433\u0440\u0430\u0436\u0434\u0430\u044e\u0449\u0438\u0435_\u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438_\u0421\u041f_70_13330_2012.pdf'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:57:02", "name": "handlers", "levelname": "INFO", "message": "Provided status to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:57:02", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:58:05", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:58:05", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:58:05", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:58:05", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u043a\u0430\u043a\u0430\u044f \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043e\u0442 \u0441\u043d\u0435\u0433\u0430 \u0434\u043b\u044f \u0434\u043e\u043c\u0430 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u043e\u0431\u043b\u0430\u0441\u0442\u0438'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:58:05", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x00000233779E0740>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 2, 58, 5, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2265, supergroup_chat_created=False, text='\u043a\u0430\u043a\u0430\u044f \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043e\u0442 \u0441\u043d\u0435\u0433\u0430 \u0434\u043b\u044f \u0434\u043e\u043c\u0430 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u043e\u0431\u043b\u0430\u0441\u0442\u0438'), update_id=881193501), <telegram.ext._callbackcontext.CallbackContext object at 0x000002331D5F80C0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:58:05", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x000002331D0A4E50>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:58:05", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='b0b647dd-f2ab-4f87-9b05-423742948b37' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:58:05", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='b0b647dd-f2ab-4f87-9b05-423742948b37'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:58:05", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:58:05", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x000002331D096B10>, '\u043a\u0430\u043a\u0430\u044f \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043e\u0442 \u0441\u043d\u0435\u0433\u0430 \u0434\u043b\u044f \u0434\u043e\u043c\u0430 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u043e\u0431\u043b\u0430\u0441\u0442\u0438'), kwargs: {'chat_history': [HumanMessage(content='\u043a\u0430\u043a\u0430\u044f \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043e\u0442 \u0441\u043d\u0435\u0433\u0430 \u0434\u043b\u044f \u0434\u043e\u043c\u0430 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u043e\u0431\u043b\u0430\u0441\u0442\u0438', additional_kwargs={}, response_metadata={}), HumanMessage(content='How much cost the construction of 1m2 of Villas in Bali', additional_kwargs={}, response_metadata={}), AIMessage(content=\"The cost of constructing 1 square meter of a villa in Bali can vary significantly depending on several factors, including the location, design complexity, quality of materials, and the contractor you choose. However, as a general guideline:\\n\\n1. <b>Standard Quality Construction</b>: For a basic villa with standard finishes, the cost typically ranges from approximately USD 500 to USD 800 per square meter.\\n\\n2. <b>Mid-Range Quality Construction</b>: For a villa with mid-range finishes and some custom features, the cost can range from USD... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:58:05", "name": "llm_service", "levelname": "DEBUG", "message": "Retriever created from vector store.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:58:05", "name": "llm_service", "levelname": "DEBUG", "message": "History-aware retriever created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:58:05", "name": "llm_service", "levelname": "DEBUG", "message": "Prompt template for QA chain created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:58:06", "name": "llm_service", "levelname": "DEBUG", "message": "Question-answering chain created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:58:06", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieval-Augmented Generation (RAG) chain created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:58:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\u043a\u0430\u043a\u0430\u044f \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043e\u0442 \u0441\u043d\u0435\u0433\u0430 \u0434\u043b\u044f \u0434\u043e\u043c\u0430 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u043e\u0431\u043b\u0430\u0441\u0442\u0438', 'role': 'user'}, {'content': 'How much cost the construction of 1m2 of Villas in Bali', 'role': 'user'}, {'content': \"The cost of constructing 1 square meter of a villa in Bali can vary significantly depending on several factors, including the location, design complexity, quality of materials, and the contractor you choose. However, as a general guideline:\\n\\n1. <b>Standard Quality Construction</b>: For a basic villa with standard finishes, the cost typically ranges from approximately USD 500 to USD 800 per square meter.\\n\\n2. <b>Mid-Range Quality Construction</b>: For a villa with mid-range finishes and some custom features, the cost can range from USD 800 to USD 1,200 per square meter.\\n\\n3. <b>High-End Quality Construction</b>: For luxury villas with high-end finishes, custom designs, and premium materials, th... [TRUNCATED]", "taskName": null}
{"asctime": "2024-11-27 05:58:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": null}
{"asctime": "2024-11-27 05:58:08", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 02:58:07 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '503'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '794790'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '390ms'), ('x-request-id', 'req_fadb9cddc0d860244513809cd615794b'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=OKryp4RMBYXJAlOCpxMgdyaA0ZbJrPFARG3dZM9IV3g-1732676287-1.0.1.1-EF7PovQDKsR0nvhiScxqyPQ5YjlTiQmgpZTvCXhzEhW_SJG2fTgyjFbJXMrCnE.cQK4W3TI5jhFIcF3arn66Tw; path=/; expires=Wed, 27-... [TRUNCATED]", "taskName": null}
{"asctime": "2024-11-27 05:58:08", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_fadb9cddc0d860244513809cd615794b", "taskName": null}
{"asctime": "2024-11-27 05:58:08", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002337D387560>, 'json_data': {'input': [[1, 63385, 2865, 8670, 369, 20658, 14016, 304, 23223, 5654, 14640, 1]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": null}
{"asctime": "2024-11-27 05:58:08", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": null}
{"asctime": "2024-11-27 05:58:09", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 02:58:09 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '117'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999987'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_c54f11ef8f421b52a0d3673ebb727815'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=qfwn7f3m5F5mam3a87VnEFzAopS.AG3bAJ.1tiJbrcQ-1732676289-1.0.1.1-4ejDi6J5j42TBslAfo7tJPieaFZC3lUWk1Qbg... [TRUNCATED]", "taskName": null}
{"asctime": "2024-11-27 05:58:09", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_c54f11ef8f421b52a0d3673ebb727815", "taskName": null}
{"asctime": "2024-11-27 05:58:09", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"You are a project assistant from the consultant side on design and construction projects. If you don't know the answer, say that you don't know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 05:58:05. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u041f 20.13330.2016\\n\u0414\u043b\u044f \u043f\u043e\u043a\u0440\u044b\u0442\u0438\u0439 \u0441 \u0443\u043a\u043b\u043e\u043d\u0430\u043c\u0438 \u043e\u0442 12 \u0434\u043e 20 % \u043e\u0434\u043d\u043e\u043f\u0440\u043e\u043b\u0435\u0442\u043d\u044b\u0445 \u0438 \u043c\u043d\u043e\u0433\u043e\u043f\u0440\u043e\u043b\u0435\u0442\u043d\u044b\u0445 \u0437\u0434\u0430\u043d\u0438\u0439 \u0431\u0435\u0437 \u0444\u043e\u043d\u0430\u0440\u0435\u0439, \\n\u043f\u0440\u043e\u0435\u043a\u0442\u0438\u0440\u0443\u0435\u043c\u044b\u0445 \u043d\u0430 \u043c\u0435\u0441\u0442\u043d\u043e\u0441\u0442\u0438 \u0442\u0438\u043f\u043e\u0432 \u0410 \u0438\u043b\u0438 \u0412 (\u0441\u043c. \u0441\u0445\u0435\u043c\u044b \u0411.1 \u0438 \u0411.5 \u043f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0411), \u0441\u0435= 0,85.\\n10.8 \u0414\u043b\u044f \u043a\u0443\u043f\u043e\u043b\u044c\u043d\u044b\u0445 ... [TRUNCATED]", "taskName": null}
{"asctime": "2024-11-27 05:58:09", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": null}
{"asctime": "2024-11-27 05:58:14", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 02:58:14 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '3947', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '790555', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '708ms', 'x-request-id': 'req_b98166c190deaca5b43bc9466c04baba', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e8edad98b102dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": null}
{"asctime": "2024-11-27 05:58:14", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_b98166c190deaca5b43bc9466c04baba", "taskName": null}
{"asctime": "2024-11-27 05:58:14", "name": "llm_service", "levelname": "DEBUG", "message": "RAG chain invoked with user prompt.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:58:14", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity ratio: 0.4444444444444444", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:58:14", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity threshold met. References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:58:14", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0414\u043b\u044f \u041c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u0441\u043d\u0435\u0433\u043e\u0432\u0430\u044f \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u043d\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u0430\u043c\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u044e\u0442 \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u0440\u0435\u0433\u0438\u043e\u043d\u0430. \u0421\u043e\u0433\u043b\u0430\u0441\u043d\u043e \u0440\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u043c \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u043d\u043e\u0440\u043c\u0430\u043c, \u041c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c \u043e\u0431\u044b\u0447\u043d\u043e \u043f\u043e\u043f\u0430\u0434\u0430\u0435\u0442 \u0432 \u0437\u043e\u043d\u0443 \u0441 \u043d\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u043e\u0439 \u0441\u043d\u0435\u0433\u043e\u0432\u043e\u0439 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u043e\u0439 \u0432 \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u0445 180 \u043a\u0433/\u043c\u00b2. \u041e\u0434\u043d\u0430\u043a\u043e \u0442\u043e\u0447\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043c\u043e\u0436\u0435\u0442 \u0432\u0430\u0440\u044c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043c\u0435\u0441\u0442\u043e\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u0439.\\n\\n\u041f\u0440\u0438 \u043f\u0440\u043e\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 \u0437\u0434\u0430\u043d\u0438\u0439 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c \u0432\u0435\u043b\u0438\u0447\u0438\u043d\u0443 \u0441\u043d\u0435\u0433\u043e\u0432\u043e\u0439 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0438, \u0447\u0442\u043e\u0431\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c \u0438 \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u043e\u0441\u0442\u044c \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438. \u042d\u0442\u043e \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432 \u0441\u0435\u0431\u044f \u0440\u0430\u0441\u0447\u0435\u0442 \u043d\u0435\u0441\u0443\u0449\u0435\u0439 \u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u0438 \u043a\u0440\u044b\u0448\u0438 \u0438 \u0434\u0440\u0443\u0433\u0438\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0437\u0434\u0430\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u043f\u043e\u0434\u0432\u0435\u0440\u0433\u0430\u0442\u044c\u0441\u044f \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044e \u0441\u043d\u0435\u0433\u0430.\\n\\n\u0414\u043b\u044f \u0431\u043e\u043b\u0435\u0435 \u0442\u043e\u0447\u043d\u043e\u0433\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0441\u043d\u0435\u0433\u043e\u0432\u043e\u0439 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0434\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u044c\u0441\u044f \u043a \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u044d\u043a\u0441\u043f\u0435\u0440\u0442\u0430\u043c \u0438\u043b\u0438 \u0438\u043d\u0436\u0435\u043d\u0435\u0440\u0430\u043c, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u0443\u0447\u0435\u0441\u0442\u044c \u0432\u0441\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0444\u0430\u043a\u0442\u043e\u0440\u044b \u0438 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0435 \u043d\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u0430\u043c.\\n\\n------------------\\nReferences:\\n\u041d\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0438 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f_\u0421\u041f 20.13330.2016.pdf, pages: 2, 3, 1... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:58:14", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:58:14", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:58:15", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='b0b647dd-f2ab-4f87-9b05-423742948b37'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 05:58:15", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:41:09", "name": "root", "levelname": "ERROR", "message": "Exception while handling an update:", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-558"}
{"asctime": "2024-11-27 06:48:37", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 06:48:39", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 06:48:39", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 06:48:39", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 06:48:52", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:48:52", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:48:53", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:48:54", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:48:54", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:48:54", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:48:54", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:48:54", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: en", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:48:54", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:48:54", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/status'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:48:54", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: status with args: (<handlers.BotHandlers object at 0x0000020182495550>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 3, 48, 52, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=7, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2267, supergroup_chat_created=False, text='/status'), update_id=881193502), <telegram.ext._callbackcontext.CallbackContext object at 0x00000201A7B9CE50>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:48:54", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: status with result: <coroutine object BotHandlers.status at 0x0000020187F32110>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:48:55", "name": "handlers", "levelname": "INFO", "message": "Provided status to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:48:55", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:48:58", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:48:58", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:48:58", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:48:58", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:48:58", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x0000020182495550>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 3, 48, 57, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2269, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193503), <telegram.ext._callbackcontext.CallbackContext object at 0x00000201A7B9E040>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:48:58", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x00000201A7967880>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:48:58", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:48:58", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:03", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:03", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:03", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:03", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:Indonesian Regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:03", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x0000020182495550>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:Indonesian Regulations', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), id='1051116661422875673', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 3, 48, 58, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2270, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations'... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:03", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x00000201A6857740>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:03", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\indonesian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:03", "name": "handlers", "levelname": "DEBUG", "message": "Found 18 valid files in folder_path='E:\\knowledge_base\\indonesian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:03", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x00000201A7C19490>, 'E:\\\\knowledge_base\\\\indonesian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:03", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\indonesian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:03", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x00000201A7C19490>, 'E:\\\\knowledge_base\\\\indonesian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:03", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:03", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:03", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:04", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\indonesian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:04", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:04", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\indonesian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:04", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:04", "name": "handlers", "levelname": "INFO", "message": "Knowledge base 'Indonesian Regulations' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:04", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:56", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:56", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:56", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:56", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u043a\u0430\u043a\u0430\u044f \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043e\u0442 \u0432\u0435\u0442\u0440\u0430 \u043d\u0430 \u0411\u0430\u043b\u0438'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:56", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x0000020182495550>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 3, 49, 56, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2272, supergroup_chat_created=False, text='\u043a\u0430\u043a\u0430\u044f \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043e\u0442 \u0432\u0435\u0442\u0440\u0430 \u043d\u0430 \u0411\u0430\u043b\u0438'), update_id=881193505), <telegram.ext._callbackcontext.CallbackContext object at 0x00000201A7B9E040>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:56", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x00000201A7C0C9A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:56", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='eccc02ac-ec60-4e25-aae0-d72603e70674' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:57", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='eccc02ac-ec60-4e25-aae0-d72603e70674'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:57", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:57", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x00000201A7C19490>, '\u043a\u0430\u043a\u0430\u044f \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043e\u0442 \u0432\u0435\u0442\u0440\u0430 \u043d\u0430 \u0411\u0430\u043b\u0438'), kwargs: {'chat_history': [HumanMessage(content='\u043a\u0430\u043a\u0430\u044f \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043e\u0442 \u0432\u0435\u0442\u0440\u0430 \u043d\u0430 \u0411\u0430\u043b\u0438', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043a\u0430\u043a\u0430\u044f \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043e\u0442 \u0441\u043d\u0435\u0433\u0430 \u0434\u043b\u044f \u0434\u043e\u043c\u0430 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u043e\u0431\u043b\u0430\u0441\u0442\u0438', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0414\u043b\u044f \u041c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u0441\u043d\u0435\u0433\u043e\u0432\u0430\u044f \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u043d\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u0430\u043c\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u044e\u0442 \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u0440\u0435\u0433\u0438\u043e\u043d\u0430. \u0421\u043e\u0433\u043b\u0430\u0441\u043d\u043e \u0440\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u043c \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u043d\u043e\u0440\u043c\u0430\u043c, \u041c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c \u043e\u0431\u044b\u0447\u043d\u043e \u043f\u043e\u043f\u0430\u0434\u0430\u0435\u0442 \u0432 \u0437\u043e\u043d\u0443 \u0441 \u043d\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u043e\u0439 \u0441\u043d\u0435\u0433\u043e\u0432\u043e\u0439 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u043e\u0439 \u0432 \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u0445 180 \u043a\u0433/\u043c\u00b2. \u041e\u0434\u043d\u0430\u043a\u043e \u0442\u043e\u0447\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043c\u043e\u0436\u0435\u0442 \u0432\u0430\u0440\u044c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043c\u0435\u0441\u0442\u043e\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u0439.\\n\\n\u041f\u0440\u0438 \u043f\u0440\u043e\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 \u0437\u0434\u0430\u043d\u0438\u0439 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c \u0432\u0435\u043b\u0438\u0447\u0438\u043d\u0443 \u0441\u043d\u0435\u0433\u043e\u0432\u043e\u0439 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0438, \u0447\u0442\u043e\u0431\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c \u0438 \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u043e\u0441\u0442\u044c \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438. \u042d\u0442\u043e \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432 \u0441\u0435\u0431\u044f \u0440\u0430\u0441\u0447\u0435\u0442 \u043d\u0435\u0441\u0443\u0449\u0435\u0439 \u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u0438 \u043a\u0440\u044b\u0448\u0438 \u0438 \u0434\u0440\u0443\u0433\u0438\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0437\u0434\u0430\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:57", "name": "llm_service", "levelname": "DEBUG", "message": "Retriever created from vector store.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:57", "name": "llm_service", "levelname": "DEBUG", "message": "History-aware retriever created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:57", "name": "llm_service", "levelname": "DEBUG", "message": "Prompt template for QA chain created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:57", "name": "llm_service", "levelname": "DEBUG", "message": "Question-answering chain created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:57", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieval-Augmented Generation (RAG) chain created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:49:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\u043a\u0430\u043a\u0430\u044f \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043e\u0442 \u0432\u0435\u0442\u0440\u0430 \u043d\u0430 \u0411\u0430\u043b\u0438', 'role': 'user'}, {'content': '\u043a\u0430\u043a\u0430\u044f \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043e\u0442 \u0441\u043d\u0435\u0433\u0430 \u0434\u043b\u044f \u0434\u043e\u043c\u0430 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0433\u043e \u043e\u0431\u043b\u0430\u0441\u0442\u0438', 'role': 'user'}, {'content': '\u0414\u043b\u044f \u041c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u0441\u043d\u0435\u0433\u043e\u0432\u0430\u044f \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u0432 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0438\u0438 \u0441 \u043d\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u0430\u043c\u0438, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u044e\u0442 \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u0440\u0435\u0433\u0438\u043e\u043d\u0430. \u0421\u043e\u0433\u043b\u0430\u0441\u043d\u043e \u0440\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u043c \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u043d\u043e\u0440\u043c\u0430\u043c, \u041c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u0430\u044f \u043e\u0431\u043b\u0430\u0441\u0442\u044c \u043e\u0431\u044b\u0447\u043d\u043e \u043f\u043e\u043f\u0430\u0434\u0430\u0435\u0442 \u0432 \u0437\u043e\u043d\u0443 \u0441 \u043d\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u043e\u0439 \u0441\u043d\u0435\u0433\u043e\u0432\u043e\u0439 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u043e\u0439 \u0432 \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u0445 180 \u043a\u0433/\u043c\u00b2. \u041e\u0434\u043d\u0430\u043a\u043e \u0442\u043e\u0447\u043d\u043e\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043c\u043e\u0436\u0435\u0442 \u0432\u0430\u0440\u044c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043c\u0435\u0441\u0442\u043e\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u0439.\\n\\n\u041f\u0440\u0438 \u043f\u0440\u043e\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 \u0437\u0434\u0430\u043d\u0438\u0439 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c \u0432\u0435\u043b\u0438\u0447\u0438\u043d\u0443 \u0441\u043d\u0435\u0433\u043e\u0432\u043e\u0439 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0438, \u0447\u0442\u043e\u0431\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c \u0438 \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u043e\u0441\u0442\u044c \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438. \u042d\u0442\u043e \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0432 \u0441\u0435\u0431\u044f \u0440\u0430\u0441\u0447\u0435\u0442 \u043d\u0435\u0441\u0443\u0449\u0435\u0439 \u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u0438 \u043a\u0440\u044b\u0448\u0438 \u0438 \u0434\u0440\u0443\u0433\u0438\u0445 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 \u0437\u0434\u0430\u043d\u0438\u044f, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0433\u0443\u0442 \u043f\u043e\u0434\u0432\u0435\u0440\u0433\u0430\u0442\u044c\u0441\u044f \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044e \u0441\u043d\u0435\u0433\u0430.\\n\\n\u0414\u043b\u044f \u0431\u043e\u043b\u0435\u0435 \u0442\u043e\u0447\u043d\u043e\u0433\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0441\u043d\u0435\u0433\u043e\u0432\u043e\u0439 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0434\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u044c\u0441\u044f... [TRUNCATED]", "taskName": null}
{"asctime": "2024-11-27 06:49:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": null}
{"asctime": "2024-11-27 06:50:01", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 03:50:01 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '3972'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '794849'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '386ms'), ('x-request-id', 'req_0ff69cea4cb8593454dfbedb02eaec60'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=iqqmSAULWQOzMBn2QBJyCnx2J.d4TR8Rhv0iVMFhXhs-1732679401-1.0.1.1-S4frnESBueLhN9Niz1L4Bucyj.Tb3j9Aho06U4vcef.iwjQWlA2k.l0IbCzMCTUHafonl6Tm1xqhdD2Elj1vAA; path=/; expires=Wed, 27... [TRUNCATED]", "taskName": null}
{"asctime": "2024-11-27 06:50:01", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_0ff69cea4cb8593454dfbedb02eaec60", "taskName": null}
{"asctime": "2024-11-27 06:50:01", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000020187F87600>, 'json_data': {'input': [[1, 59918, 2865, 10886, 323, 14640, 369, 8246, 304, 64328, 1]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": null}
{"asctime": "2024-11-27 06:50:01", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": null}
{"asctime": "2024-11-27 06:50:02", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 03:50:02 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '105'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999988'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_22569ca29168d2d1b4486d17c27c3222'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=HzqXt2bdqHaFc_lciOS7.OrnC4PUjNwhr_3XESBugGU-1732679402-1.0.1.1-aJuvKKWOXIMsLERq267aN2W4AMGbANCQhag0q... [TRUNCATED]", "taskName": null}
{"asctime": "2024-11-27 06:50:02", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_22569ca29168d2d1b4486d17c27c3222", "taskName": null}
{"asctime": "2024-11-27 06:50:02", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"You are a project assistant from the consultant side on design and construction projects. If you don't know the answer, say that you don't know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 06:49:57. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u201cHak cipta Badan Standardisasi Nasional, copy standar ini dibuat untuk Sub KT 91-01-S4 Bahan, Sain, Struktur & Konstruksi Bangunan, dan tidak untuk dikomersialkan\u201d \\nSNI 1727:2020 \\n201 dari 302 \\n30.1.3   Pembatasan... [TRUNCATED]", "taskName": null}
{"asctime": "2024-11-27 06:50:02", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": null}
{"asctime": "2024-11-27 06:50:05", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 03:50:05 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '3028', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '792355', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '573ms', 'x-request-id': 'req_ef382cffe45131819b50acf5eb4297b8', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e8f26d95878ee30-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": null}
{"asctime": "2024-11-27 06:50:05", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_ef382cffe45131819b50acf5eb4297b8", "taskName": null}
{"asctime": "2024-11-27 06:50:05", "name": "llm_service", "levelname": "DEBUG", "message": "RAG chain invoked with user prompt.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:50:05", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity ratio: 0.0", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:50:05", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity threshold not met. Returning answer without references.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:50:05", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u041d\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043e\u0442 \u0432\u0435\u0442\u0440\u0430 \u043d\u0430 \u0411\u0430\u043b\u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0443\u0441\u043b\u043e\u0432\u0438\u0439 \u0440\u0435\u0433\u0438\u043e\u043d\u0430 \u0438 \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u043d\u043e-\u043d\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u044b\u0445 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0418\u043d\u0434\u043e\u043d\u0435\u0437\u0438\u0438. \u041a\u0430\u043a \u043f\u0440\u0430\u0432\u0438\u043b\u043e, \u0434\u043b\u044f \u043f\u0440\u043e\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0437\u0434\u0430\u043d\u0438\u0439 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b:\\n\\n1. <b>\u0421\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u0432\u0435\u0442\u0440\u0430</b>: \u041e\u0441\u043d\u043e\u0432\u043e\u0439 \u0434\u043b\u044f \u0440\u0430\u0441\u0447\u0435\u0442\u0430 \u0432\u0435\u0442\u0440\u043e\u0432\u043e\u0439 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0441\u043b\u0443\u0436\u0438\u0442 \u0431\u0430\u0437\u043e\u0432\u0430\u044f \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u0432\u0435\u0442\u0440\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043c\u043e\u0436\u0435\u0442 \u0432\u0430\u0440\u044c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043c\u0435\u0441\u0442\u043e\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u043e\u0441\u0442\u0440\u043e\u0432\u0435 \u0438 \u0432\u044b\u0441\u043e\u0442\u044b \u043d\u0430\u0434 \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u043c\u043e\u0440\u044f.\\n\\n2. <b>\u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u043c\u0435\u0441\u0442\u043d\u043e\u0441\u0442\u0438</b>: \u0411\u0430\u043b\u0438 \u0438\u043c\u0435\u0435\u0442 \u0440\u0430\u0437\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u043d\u044b\u0439 \u043b\u0430\u043d\u0434\u0448\u0430\u0444\u0442, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u043f\u0440\u0438\u0431\u0440\u0435\u0436\u043d\u044b\u0435 \u0437\u043e\u043d\u044b \u0438 \u0433\u043e\u0440\u043d\u044b\u0435 \u0440\u0430\u0439\u043e\u043d\u044b, \u0447\u0442\u043e \u0432\u043b\u0438\u044f\u0435\u0442 \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0438. \u0420\u0430\u0437\u043d\u044b\u0435 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u043c\u0435\u0441\u0442\u043d\u043e\u0441\u0442\u0438 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u044e\u0442 \u0432\u043b\u0438\u044f\u043d\u0438\u0435 \u0440\u0435\u043b\u044c\u0435\u0444\u0430 \u0438 \u0440\u0430\u0441\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u0432\u0435\u0442\u0440\u0430.\\n\\n3. <b>\u041a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442\u044b \u0434\u0430\u0432\u043b\u0435\u043d\u0438\u044f</b>: \u0412 \u0440\u0430\u0441\u0447\u0435\u0442\u0435 \u0432\u0435\u0442\u0440\u043e\u0432\u043e\u0439 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u044e\u0442, \u043a\u0430\u043a \u0432\u0435\u0442\u0435\u0440 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0443\u0435\u0442 \u043d\u0430 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438. \u042d\u0442\u0438 \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442\u044b \u0437\u0430\u0432\u0438\u0441\u044f\u0442 \u043e\u0442 \u0444\u043e\u0440\u043c\u044b \u0438 \u0432\u044b\u0441\u043e\u0442\u044b \u0437\u0434\u0430\u043d\u0438\u044f.\\n\\n\u0414\u043b\u044f \u0442\u043e\u0447\u043d\u043e\u0433\u043e \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0432\u0435\u0442\u0440\u043e\u0432\u043e\u0439 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u043e\u0431\u0440\u0430\u0442\u0438\u0442\u044c\u0441\u044f \u043a \u043c\u0435\u0441\u0442\u043d\u044b\u043c \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c \u043d\u043e\u0440\u043c\u0430... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:50:05", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:50:06", "name": "handlers", "levelname": "INFO", "message": "Sent response to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:50:06", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='eccc02ac-ec60-4e25-aae0-d72603e70674'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:50:06", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:50:34", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:50:34", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:50:34", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:50:34", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/status'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:50:34", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: status with args: (<handlers.BotHandlers object at 0x0000020182495550>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 3, 50, 34, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=7, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2274, supergroup_chat_created=False, text='/status'), update_id=881193506), <telegram.ext._callbackcontext.CallbackContext object at 0x00000201A81D9470>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:50:34", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: status with result: <coroutine object BotHandlers.status at 0x0000020187F32260>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:50:35", "name": "llm_service", "levelname": "INFO", "message": "Empty content on page 164 of document 'GUBERNUR BALI PERATURAN DAERAH PROVINSI BALI.pdf'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:50:35", "name": "llm_service", "levelname": "INFO", "message": "Empty content on page 1 of document 'Persyaratan Umum Instalasi Listrik 2000 - SNI 04-0225-2000.pdf'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:50:41", "name": "llm_service", "levelname": "INFO", "message": "Empty content on page 1 of document 'SNI-03-7065-2005-plambing.pdf'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:50:47", "name": "handlers", "levelname": "INFO", "message": "Provided status to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 06:50:47", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:19", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 10:53:20", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 10:53:20", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 10:53:21", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 10:53:31", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:31", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:31", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:32", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:32", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:32", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:32", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:32", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: en", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:32", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:32", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:32", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x0000029639BCB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 7, 53, 31, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2276, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193507), <telegram.ext._callbackcontext.CallbackContext object at 0x000002965F2370E0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:32", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x000002963C0B0CA0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:33", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:33", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:35", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:35", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:35", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:35", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:35", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x0000029639BCB7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), id='1051116658708489793', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 7, 53, 33, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2277, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations'),... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:35", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x000002965DF775E0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:35", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:35", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:35", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x000002965F328E90>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:35", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:35", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x000002965F328E90>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:35", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:35", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:35", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:35", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:35", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:35", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:35", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:36", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:36", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:53", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:53", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:53", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:53", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='Iz chego postroit krishu doma'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:53", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x0000029639BCB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 7, 53, 53, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2279, supergroup_chat_created=False, text='Iz chego postroit krishu doma'), update_id=881193509), <telegram.ext._callbackcontext.CallbackContext object at 0x000002965F2370E0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:53", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x000002965F7804F0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:53", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='9929495e-dd01-4845-9e69-401956ae2882' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:53", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='9929495e-dd01-4845-9e69-401956ae2882'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:53", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:53", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x000002965F328E90>, 'Iz chego postroit krishu doma'), kwargs: {'chat_history': [HumanMessage(content='Iz chego postroit krishu doma', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043a\u0430\u043a\u0430\u044f \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043e\u0442 \u0432\u0435\u0442\u0440\u0430 \u043d\u0430 \u0411\u0430\u043b\u0438', additional_kwargs={}, response_metadata={}), AIMessage(content='\u041d\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043e\u0442 \u0432\u0435\u0442\u0440\u0430 \u043d\u0430 \u0411\u0430\u043b\u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0443\u0441\u043b\u043e\u0432\u0438\u0439 \u0440\u0435\u0433\u0438\u043e\u043d\u0430 \u0438 \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u043d\u043e-\u043d\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u044b\u0445 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0418\u043d\u0434\u043e\u043d\u0435\u0437\u0438\u0438. \u041a\u0430\u043a \u043f\u0440\u0430\u0432\u0438\u043b\u043e, \u0434\u043b\u044f \u043f\u0440\u043e\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0437\u0434\u0430\u043d\u0438\u0439 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b:\\n\\n1. <b>\u0421\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u0432\u0435\u0442\u0440\u0430</b>: \u041e\u0441\u043d\u043e\u0432\u043e\u0439 \u0434\u043b\u044f \u0440\u0430\u0441\u0447\u0435\u0442\u0430 \u0432\u0435\u0442\u0440\u043e\u0432\u043e\u0439 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0441\u043b\u0443\u0436\u0438\u0442 \u0431\u0430\u0437\u043e\u0432\u0430\u044f \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u0432\u0435\u0442\u0440\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043c\u043e\u0436\u0435\u0442 \u0432\u0430\u0440\u044c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043c\u0435\u0441\u0442\u043e\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u043e\u0441\u0442\u0440\u043e\u0432\u0435 \u0438 \u0432\u044b\u0441\u043e\u0442\u044b \u043d\u0430\u0434 \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u043c\u043e\u0440\u044f.\\n\\n2. <b>\u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u043c\u0435\u0441\u0442\u043d\u043e\u0441\u0442\u0438</b>: \u0411\u0430\u043b\u0438 \u0438\u043c\u0435\u0435\u0442 \u0440\u0430\u0437\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u043d\u044b\u0439 \u043b\u0430\u043d\u0434\u0448\u0430\u0444\u0442, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u043f\u0440\u0438\u0431\u0440\u0435\u0436\u043d\u044b\u0435 \u0437\u043e\u043d\u044b \u0438 \u0433\u043e\u0440\u043d\u044b\u0435 \u0440\u0430\u0439\u043e\u043d\u044b, \u0447\u0442\u043e \u0432\u043b\u0438\u044f\u0435\u0442 \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0438. \u0420\u0430\u0437\u043d\u044b\u0435 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u043c\u0435\u0441\u0442\u043d\u043e\u0441\u0442\u0438 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u044e\u0442 \u0432\u043b\u0438\u044f\u043d\u0438\u0435 \u0440\u0435\u043b\u044c\u0435\u0444\u0430 \u0438 \u0440\u0430\u0441\u0442\u0438\u0442\u0435\u043b... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:53", "name": "llm_service", "levelname": "DEBUG", "message": "Retriever created from vector store.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:53", "name": "llm_service", "levelname": "DEBUG", "message": "History-aware retriever created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:53", "name": "llm_service", "levelname": "DEBUG", "message": "Prompt template for QA chain created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:54", "name": "llm_service", "levelname": "DEBUG", "message": "Question-answering chain created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:54", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieval-Augmented Generation (RAG) chain created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:53:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'Iz chego postroit krishu doma', 'role': 'user'}, {'content': '\u043a\u0430\u043a\u0430\u044f \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043e\u0442 \u0432\u0435\u0442\u0440\u0430 \u043d\u0430 \u0411\u0430\u043b\u0438', 'role': 'user'}, {'content': '\u041d\u0430\u0433\u0440\u0443\u0437\u043a\u0430 \u043e\u0442 \u0432\u0435\u0442\u0440\u0430 \u043d\u0430 \u0411\u0430\u043b\u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0443\u0441\u043b\u043e\u0432\u0438\u0439 \u0440\u0435\u0433\u0438\u043e\u043d\u0430 \u0438 \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u043d\u043e-\u043d\u043e\u0440\u043c\u0430\u0442\u0438\u0432\u043d\u044b\u0445 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u043e\u0432 \u0418\u043d\u0434\u043e\u043d\u0435\u0437\u0438\u0438. \u041a\u0430\u043a \u043f\u0440\u0430\u0432\u0438\u043b\u043e, \u0434\u043b\u044f \u043f\u0440\u043e\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0437\u0434\u0430\u043d\u0438\u0439 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b:\\n\\n1. <b>\u0421\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u0432\u0435\u0442\u0440\u0430</b>: \u041e\u0441\u043d\u043e\u0432\u043e\u0439 \u0434\u043b\u044f \u0440\u0430\u0441\u0447\u0435\u0442\u0430 \u0432\u0435\u0442\u0440\u043e\u0432\u043e\u0439 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0441\u043b\u0443\u0436\u0438\u0442 \u0431\u0430\u0437\u043e\u0432\u0430\u044f \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u0432\u0435\u0442\u0440\u0430, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043c\u043e\u0436\u0435\u0442 \u0432\u0430\u0440\u044c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u043c\u0435\u0441\u0442\u043e\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u043d\u0430 \u043e\u0441\u0442\u0440\u043e\u0432\u0435 \u0438 \u0432\u044b\u0441\u043e\u0442\u044b \u043d\u0430\u0434 \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u043c\u043e\u0440\u044f.\\n\\n2. <b>\u041a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u043c\u0435\u0441\u0442\u043d\u043e\u0441\u0442\u0438</b>: \u0411\u0430\u043b\u0438 \u0438\u043c\u0435\u0435\u0442 \u0440\u0430\u0437\u043d\u043e\u043e\u0431\u0440\u0430\u0437\u043d\u044b\u0439 \u043b\u0430\u043d\u0434\u0448\u0430\u0444\u0442, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u043f\u0440\u0438\u0431\u0440\u0435\u0436\u043d\u044b\u0435 \u0437\u043e\u043d\u044b \u0438 \u0433\u043e\u0440\u043d\u044b\u0435 \u0440\u0430\u0439\u043e\u043d\u044b, \u0447\u0442\u043e \u0432\u043b\u0438\u044f\u0435\u0442 \u043d\u0430 \u0440\u0430\u0441\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u0435 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0438. \u0420\u0430\u0437\u043d\u044b\u0435 \u043a\u0430\u0442\u0435\u0433\u043e\u0440\u0438\u0438 \u043c\u0435\u0441\u0442\u043d\u043e\u0441\u0442\u0438 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u044e\u0442 \u0432\u043b\u0438\u044f\u043d\u0438\u0435 \u0440\u0435\u043b\u044c\u0435\u0444\u0430 \u0438 \u0440\u0430\u0441\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u0438 \u043d\u0430 \u0441\u043a\u043e\u0440\u043e\u0441\u0442\u044c \u0432\u0435\u0442\u0440\u0430.\\n\\n3. <b>\u041a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442\u044b \u0434\u0430\u0432\u043b\u0435\u043d\u0438\u044f</b>: \u0412 \u0440\u0430\u0441\u0447\u0435\u0442\u0435 \u0432\u0435\u0442\u0440\u043e\u0432\u043e\u0439 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u044e\u0442, \u043a... [TRUNCATED]", "taskName": null}
{"asctime": "2024-11-27 10:53:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": null}
{"asctime": "2024-11-27 10:53:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 07:53:56 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '1753'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '794935'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '379ms'), ('x-request-id', 'req_9fb95ea95014fc4d07d3909ab38941d7'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=ofl2EUl32_Hr6rOjifOHNwqBhMowmbXQ6410jE7iYco-1732694036-1.0.1.1-r5MuWkxhAoQ3zAmw7rOXESPwLYRqqWWDIJgaVN3M3iuMAkGUfIFReBnsIOOLnmQ1B6LuYsfTJ.k6VMo2wkfKqA; path=/; expires=Wed, 27... [TRUNCATED]", "taskName": null}
{"asctime": "2024-11-27 10:53:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_9fb95ea95014fc4d07d3909ab38941d7", "taskName": null}
{"asctime": "2024-11-27 10:53:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002963F6A7560>, 'json_data': {'input': [[96556, 0, 20817, 389, 279, 10652, 11, 264, 9959, 2778, 3319, 311, 9762, 810, 2038, 1436, 387, 1473, 1, 48297, 7384, 369, 4857, 264, 3838, 15485, 304, 64328, 66078, 14640, 20658, 18200, 8312, 1875, 2028, 3319, 14564, 279, 13650, 315, 15485, 8246, 7384, 11, 66078, 14640, 11, 323, 18200, 8312, 38864, 304, 64328, 11, 902, 1051, 14407, 304, 279, 10652, 13]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": null}
{"asctime": "2024-11-27 10:53:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": null}
{"asctime": "2024-11-27 10:53:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 07:53:57 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '43'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999939'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_781c4f437914e61c2317eccc9a288a99'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=6x9qOzLqPrfsQSge5CLHcVL4i7b2SyMisMqN4VkwHOY-1732694037-1.0.1.1-qNMCjpMAWqcfIQYs0.ZFkjvzLt2zvouLGloaMh... [TRUNCATED]", "taskName": null}
{"asctime": "2024-11-27 10:53:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_781c4f437914e61c2317eccc9a288a99", "taskName": null}
{"asctime": "2024-11-27 10:53:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 10:53:53. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0411 \\n (\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0435)  \\n \\n       \\n \u0422\u0435\u0440\u043c\u0438\u043d\u044b \u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f  \\n\u0411.1 \u0442\u0435\u043f\u043b\u043e\u0432\u0430\u044f \u0437\u0430\u0449\u0438\u0442\u0430 \u0437\u0434\u0430\u043d\u0438\u044f: \u0422\u0435\u043f\u043b\u043e\u0437\u0430\u0449\u0438\u0442\u043d\u044b\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u0441\u043e\u0432\u043e\u043a\u0443\u043f\u043d\u043e\u0441\u0442\u0438 \u043d\u0430\u0440\u0443\u0436\u043d\u044b\u0445 \u0438 \\n\u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0438\u0445 \u043e\u0433\u0440\u0430\u0436\u0434\u0430\u044e\u0449\u0438\u0445 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0439 \u0437\u0434\u0430\u043d\u0438\u044f, \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u044e\u0449\u0438\u0435 \u0437\u0430\u0434\u0430\u043d\u043d\u044b... [TRUNCATED]", "taskName": null}
{"asctime": "2024-11-27 10:53:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": null}
{"asctime": "2024-11-27 10:54:05", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 07:54:05 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '7504', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '789760', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '767ms', 'x-request-id': 'req_d5ad8634b4cf21b6522ab6b0e688c08e', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e908c24c846ee34-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": null}
{"asctime": "2024-11-27 10:54:05", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_d5ad8634b4cf21b6522ab6b0e688c08e", "taskName": null}
{"asctime": "2024-11-27 10:54:05", "name": "llm_service", "levelname": "DEBUG", "message": "RAG chain invoked with user prompt.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:54:05", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity ratio: 0.0", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:54:05", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity threshold not met. Returning answer without references.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:54:05", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0412\u044b\u0431\u043e\u0440 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u0432 \u0434\u043b\u044f \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0430 \u043a\u0440\u044b\u0448\u0438 \u0434\u043e\u043c\u0430 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0444\u0430\u043a\u0442\u043e\u0440\u043e\u0432, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f, \u0431\u044e\u0434\u0436\u0435\u0442, \u0441\u0442\u0438\u043b\u044c \u0434\u043e\u043c\u0430 \u0438 \u043b\u0438\u0447\u043d\u044b\u0435 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0435\u043d\u0438\u044f. \u0412\u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0445 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u0432 \u0434\u043b\u044f \u043a\u0440\u044b\u0448\u0438:\\n\\n1. <b>\u041c\u0435\u0442\u0430\u043b\u043b</b>:\\n\u2022 \u041c\u0435\u0442\u0430\u043b\u043b\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043a\u0440\u043e\u0432\u043b\u044f (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0438\u0437 \u0441\u0442\u0430\u043b\u0438 \u0438\u043b\u0438 \u0430\u043b\u044e\u043c\u0438\u043d\u0438\u044f) \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0439 \u0438 \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u0430 \u043a \u044d\u043a\u0441\u0442\u0440\u0435\u043c\u0430\u043b\u044c\u043d\u044b\u043c \u043f\u043e\u0433\u043e\u0434\u043d\u044b\u043c \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c. \u041e\u043d\u0430 \u0442\u0430\u043a\u0436\u0435 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043b\u0435\u0433\u043a\u0430\u044f \u0438 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430 \u043d\u0430 \u043a\u0440\u044b\u0448\u0430\u0445 \u0441 \u0440\u0430\u0437\u043d\u044b\u043c\u0438 \u043d\u0430\u043a\u043b\u043e\u043d\u0430\u043c\u0438.\\n\\n2. <b>\u0427\u0435\u0440\u0435\u043f\u0438\u0446\u0430</b>:\\n\u2022 \u0413\u043b\u0438\u043d\u044f\u043d\u0430\u044f \u0438\u043b\u0438 \u0431\u0435\u0442\u043e\u043d\u043d\u0430\u044f \u0447\u0435\u0440\u0435\u043f\u0438\u0446\u0430 \u0445\u043e\u0440\u043e\u0448\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f \u0442\u0435\u043f\u043b\u043e\u0433\u043e \u043a\u043b\u0438\u043c\u0430\u0442\u0430 \u0438 \u043e\u0431\u043b\u0430\u0434\u0430\u0435\u0442 \u043e\u0442\u043b\u0438\u0447\u043d\u044b\u043c\u0438 \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u044b\u043c\u0438 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430\u043c\u0438. \u041e\u043d\u0430 \u0442\u0430\u043a\u0436\u0435 \u043f\u0440\u0438\u0434\u0430\u0435\u0442 \u043a\u0440\u044b\u0448\u0435 \u044d\u0441\u0442\u0435\u0442\u0438\u0447\u043d\u044b\u0439 \u0432\u0438\u0434.\\n\\n3. <b>\u0413\u0438\u0431\u043a\u0430\u044f \u0447\u0435\u0440\u0435\u043f\u0438\u0446\u0430 (\u0431\u0438\u0442\u0443\u043c\u043d\u0430\u044f)</b>:\\n\u2022 \u042d\u0442\u043e\u0442 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u0435\u043d \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u0441\u0432\u043e\u0435\u0439 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0441\u0442\u0438 \u0438 \u043f\u0440\u043e\u0441\u0442\u043e\u0442\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438. \u0413\u0438\u0431\u043a\u0430\u044f \u0447\u0435\u0440\u0435\u043f\u0438\u0446\u0430 \u0445\u043e\u0440\u043e\u0448\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f \u0441\u043b\u043e\u0436\u043d\u044b\u0445 \u0444\u043e\u0440\u043c \u043a\u0440\u044b\u0448 \u0438 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u0445\u043e\u0440\u043e\u0448\u0443\u044e \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044e.\\n\\n4. <b>\u0414\u0435\u0440\u0435\u0432\u043e</b>:\\n\u2022 \u0414\u0435\u0440\u0435\u0432\u044f\u043d\u043d\u0430\u044f \u0447\u0435\u0440\u0435\u043f\u0438\u0446\u0430 \u0438\u043b\u0438 \u0433\u043e\u043d\u0442\u044b \u043c\u043e\u0433\u0443\u0442 \u043f\u0440\u0438\u0434\u0430\u0442\u044c \u0434\u043e\u043c\u0443 \u0442\u0440\u0430\u0434\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0438\u043b\u0438 \u0434\u0435\u0440\u0435\u0432\u0435\u043d\u0441\u043a\u0438\u0439 \u0432\u0438\u0434. \u041e\u0434\u043d\u0430\u043a\u043e... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:54:05", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:54:05", "name": "handlers", "levelname": "INFO", "message": "Sent response to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:54:06", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='9929495e-dd01-4845-9e69-401956ae2882'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:54:06", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:54:15", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:54:15", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:54:15", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:54:15", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/status'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:54:15", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: status with args: (<handlers.BotHandlers object at 0x0000029639BCB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 7, 54, 15, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=7, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2281, supergroup_chat_created=False, text='/status'), update_id=881193510), <telegram.ext._callbackcontext.CallbackContext object at 0x000002965F236E40>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:54:15", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: status with result: <coroutine object BotHandlers.status at 0x000002963F65A8F0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:54:19", "name": "llm_service", "levelname": "INFO", "message": "Empty content on page 7 of document '\u0418\u043d\u0436\u0435\u043d\u0435\u0440\u043d\u043e \u0433\u0435\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0437\u044b\u0441\u043a\u0430\u043d\u0438\u044f_\u0421\u041f 446.1325800.2019 .pdf'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:54:20", "name": "llm_service", "levelname": "INFO", "message": "Empty content on page 86 of document '\u041d\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0438 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f_\u0421\u041f 20.13330.2016.pdf'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:54:20", "name": "llm_service", "levelname": "INFO", "message": "Empty content on page 1 of document '\u041d\u0435\u0441\u0443\u0449\u0438\u0435_\u0438_\u043e\u0433\u0440\u0430\u0436\u0434\u0430\u044e\u0449\u0438\u0435_\u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438_\u0421\u041f_70_13330_2012.pdf'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:54:24", "name": "handlers", "levelname": "INFO", "message": "Provided status to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:54:24", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:06", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:06", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:06", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:06", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u043a\u0430\u043a\u043e\u0432\u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:06", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x0000029639BCB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 7, 55, 6, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2283, supergroup_chat_created=False, text='\u043a\u0430\u043a\u043e\u0432\u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430'), update_id=881193511), <telegram.ext._callbackcontext.CallbackContext object at 0x00000296A241F690>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:06", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x000002965F7804F0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:06", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='cad53a24-504d-408b-ac4b-a30e8c91373d' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:06", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='cad53a24-504d-408b-ac4b-a30e8c91373d'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:06", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:06", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x000002965F328E90>, '\u043a\u0430\u043a\u043e\u0432\u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430'), kwargs: {'chat_history': [HumanMessage(content='\u043a\u0430\u043a\u043e\u0432\u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430', additional_kwargs={}, response_metadata={}), HumanMessage(content='Iz chego postroit krishu doma', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0412\u044b\u0431\u043e\u0440 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u0432 \u0434\u043b\u044f \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0430 \u043a\u0440\u044b\u0448\u0438 \u0434\u043e\u043c\u0430 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0444\u0430\u043a\u0442\u043e\u0440\u043e\u0432, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f, \u0431\u044e\u0434\u0436\u0435\u0442, \u0441\u0442\u0438\u043b\u044c \u0434\u043e\u043c\u0430 \u0438 \u043b\u0438\u0447\u043d\u044b\u0435 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0435\u043d\u0438\u044f. \u0412\u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0445 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u0432 \u0434\u043b\u044f \u043a\u0440\u044b\u0448\u0438:\\n\\n1. <b>\u041c\u0435\u0442\u0430\u043b\u043b</b>:\\n\u2022 \u041c\u0435\u0442\u0430\u043b\u043b\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043a\u0440\u043e\u0432\u043b\u044f (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0438\u0437 \u0441\u0442\u0430\u043b\u0438 \u0438\u043b\u0438 \u0430\u043b\u044e\u043c\u0438\u043d\u0438\u044f) \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0439 \u0438 \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u0430 \u043a \u044d\u043a\u0441\u0442\u0440\u0435\u043c\u0430\u043b\u044c\u043d\u044b\u043c \u043f\u043e\u0433\u043e\u0434\u043d\u044b\u043c \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c. \u041e\u043d\u0430 \u0442\u0430\u043a\u0436\u0435 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043b\u0435\u0433\u043a\u0430\u044f \u0438 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430 \u043d\u0430 \u043a\u0440\u044b\u0448\u0430\u0445 \u0441 \u0440\u0430\u0437\u043d\u044b\u043c\u0438 \u043d\u0430\u043a\u043b\u043e\u043d\u0430\u043c\u0438.\\n\\n2. <b>\u0427\u0435\u0440\u0435\u043f\u0438\u0446\u0430</b>:\\n\u2022 \u0413\u043b\u0438\u043d\u044f\u043d\u0430\u044f \u0438\u043b\u0438 \u0431\u0435\u0442\u043e\u043d\u043d\u0430\u044f \u0447\u0435\u0440\u0435\u043f\u0438\u0446\u0430 \u0445\u043e\u0440\u043e\u0448\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f \u0442\u0435\u043f\u043b\u043e\u0433\u043e \u043a\u043b\u0438\u043c\u0430\u0442\u0430 \u0438 \u043e\u0431\u043b\u0430\u0434\u0430\u0435\u0442 \u043e\u0442\u043b\u0438\u0447\u043d\u044b\u043c\u0438 \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u044b\u043c\u0438 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430\u043c\u0438. \u041e... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:06", "name": "llm_service", "levelname": "DEBUG", "message": "Retriever created from vector store.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:06", "name": "llm_service", "levelname": "DEBUG", "message": "History-aware retriever created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:06", "name": "llm_service", "levelname": "DEBUG", "message": "Prompt template for QA chain created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:06", "name": "llm_service", "levelname": "DEBUG", "message": "Question-answering chain created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:06", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieval-Augmented Generation (RAG) chain created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\u043a\u0430\u043a\u043e\u0432\u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430', 'role': 'user'}, {'content': 'Iz chego postroit krishu doma', 'role': 'user'}, {'content': '\u0412\u044b\u0431\u043e\u0440 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u0432 \u0434\u043b\u044f \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0430 \u043a\u0440\u044b\u0448\u0438 \u0434\u043e\u043c\u0430 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0444\u0430\u043a\u0442\u043e\u0440\u043e\u0432, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f, \u0431\u044e\u0434\u0436\u0435\u0442, \u0441\u0442\u0438\u043b\u044c \u0434\u043e\u043c\u0430 \u0438 \u043b\u0438\u0447\u043d\u044b\u0435 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0435\u043d\u0438\u044f. \u0412\u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0445 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u0432 \u0434\u043b\u044f \u043a\u0440\u044b\u0448\u0438:\\n\\n1. <b>\u041c\u0435\u0442\u0430\u043b\u043b</b>:\\n\u2022 \u041c\u0435\u0442\u0430\u043b\u043b\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043a\u0440\u043e\u0432\u043b\u044f (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0438\u0437 \u0441\u0442\u0430\u043b\u0438 \u0438\u043b\u0438 \u0430\u043b\u044e\u043c\u0438\u043d\u0438\u044f) \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0439 \u0438 \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u0430 \u043a \u044d\u043a\u0441\u0442\u0440\u0435\u043c\u0430\u043b\u044c\u043d\u044b\u043c \u043f\u043e\u0433\u043e\u0434\u043d\u044b\u043c \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c. \u041e\u043d\u0430 \u0442\u0430\u043a\u0436\u0435 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u043b\u0435\u0433\u043a\u0430\u044f \u0438 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430 \u043d\u0430 \u043a\u0440\u044b\u0448\u0430\u0445 \u0441 \u0440\u0430\u0437\u043d\u044b\u043c\u0438 \u043d\u0430\u043a\u043b\u043e\u043d\u0430\u043c\u0438.\\n\\n2. <b>\u0427\u0435\u0440\u0435\u043f\u0438\u0446\u0430</b>:\\n\u2022 \u0413\u043b\u0438\u043d\u044f\u043d\u0430\u044f \u0438\u043b\u0438 \u0431\u0435\u0442\u043e\u043d\u043d\u0430\u044f \u0447\u0435\u0440\u0435\u043f\u0438\u0446\u0430 \u0445\u043e\u0440\u043e\u0448\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f \u0442\u0435\u043f\u043b\u043e\u0433\u043e \u043a\u043b\u0438\u043c\u0430\u0442\u0430 \u0438 \u043e\u0431\u043b\u0430\u0434\u0430\u0435\u0442 \u043e\u0442\u043b\u0438\u0447\u043d\u044b\u043c\u0438 \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u044b\u043c\u0438 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430\u043c\u0438. \u041e\u043d\u0430 \u0442\u0430\u043a\u0436\u0435 \u043f\u0440\u0438\u0434\u0430\u0435\u0442 \u043a\u0440\u044b\u0448\u0435 \u044d\u0441\u0442\u0435\u0442\u0438\u0447\u043d\u044b\u0439 \u0432\u0438\u0434.\\n\\n3. <b>\u0413\u0438\u0431\u043a\u0430\u044f \u0447\u0435\u0440\u0435\u043f\u0438\u0446\u0430 (\u0431\u0438\u0442\u0443\u043c\u043d\u0430\u044f)</b>:\\n\u2022 \u042d\u0442\u043e\u0442 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u0435\u043d \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u0441\u0432\u043e\u0435\u0439 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0441\u0442\u0438 \u0438 \u043f\u0440\u043e\u0441\u0442\u043e\u0442\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a... [TRUNCATED]", "taskName": null}
{"asctime": "2024-11-27 10:55:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": null}
{"asctime": "2024-11-27 10:55:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 07:55:07 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '477', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '794644', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '401ms', 'x-request-id': 'req_9070e3edc585ba2b88d35a264725b805', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e908dd5fb9bea82-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": null}
{"asctime": "2024-11-27 10:55:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_9070e3edc585ba2b88d35a264725b805", "taskName": null}
{"asctime": "2024-11-27 10:55:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002963F6CBF60>, 'json_data': {'input': [[1, 51918, 323, 2955, 315, 31741, 27035, 304, 20658, 15316, 304, 64328, 1]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": null}
{"asctime": "2024-11-27 10:55:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": null}
{"asctime": "2024-11-27 10:55:08", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 07:55:08 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '57', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999986', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_3372ff6a60f7b9690169d3419682b952', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e908ddbde18e78f-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": null}
{"asctime": "2024-11-27 10:55:08", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_3372ff6a60f7b9690169d3419682b952", "taskName": null}
{"asctime": "2024-11-27 10:55:08", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"You are a project assistant from the consultant side on design and construction projects. If you don't know the answer, say that you don't know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 10:55:06. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u041f 515.1325800.2022 \\n \\n30 \\n \\n\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0410 \\n\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u044d\u0442\u0430\u043f\u044b \u043f\u0440\u043e\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0430                                 \\n\u0437\u0434\u0430\u043d\u0438\u044f \u0438\u0437 \u043a\u043b\u0435\u0435\u043d\u043e\u0433\u043e \u0431\u0440\u0443\u0441\u0430 \\n\u041d\u043e\u043c\u0435\u0440 \\n\u044d\u0442\u0430\u043f\u0430 \\n\u041d\u0430\u0438\u043c\u0435\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \\n\u0421\u043e\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u0435 \\n1 \\n\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043f\u0440... [TRUNCATED]", "taskName": null}
{"asctime": "2024-11-27 10:55:08", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": null}
{"asctime": "2024-11-27 10:55:16", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 07:55:16 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '8053', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '789810', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '764ms', 'x-request-id': 'req_40836ff075ec62dacaf3afe3b79c840a', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e908ddf6c55ea82-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": null}
{"asctime": "2024-11-27 10:55:16", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_40836ff075ec62dacaf3afe3b79c840a", "taskName": null}
{"asctime": "2024-11-27 10:55:16", "name": "llm_service", "levelname": "DEBUG", "message": "RAG chain invoked with user prompt.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:16", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity ratio: 0.5714285714285714", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:16", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity threshold met. References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:16", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0423\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0443\u0447\u0435\u0442\u0430 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0444\u0430\u043a\u0442\u043e\u0440\u043e\u0432, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0442\u0438\u043f \u0433\u0440\u0443\u043d\u0442\u0430, \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434, \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u0434\u0432\u0430\u043b\u0430 \u0438 \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f. \u0412\u043e\u0442 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u044d\u0442\u0430\u043f\u044b \u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435:\\n\\n1. <b>\u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u044f</b>:\\n\u2022 \u041e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u0434 \u043f\u043e\u043b\u043e\u043c \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u043f\u0440\u043e\u0447\u043d\u044b\u043c \u0438 \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u044b\u043c.\\n\u2022 \u0415\u0441\u043b\u0438 \u0432 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0438 \u0438\u043c\u0435\u044e\u0442\u0441\u044f \u0441\u043b\u0430\u0431\u044b\u0435 \u0438\u043b\u0438 \u0440\u0430\u0441\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0433\u0440\u0443\u043d\u0442\u044b (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0442\u043e\u0440\u0444 \u0438\u043b\u0438 \u0447\u0435\u0440\u043d\u043e\u0437\u0435\u043c), \u0438\u0445 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c \u043d\u0430 \u0431\u043e\u043b\u0435\u0435 \u043f\u043b\u043e\u0442\u043d\u044b\u0435 \u0433\u0440\u0443\u043d\u0442\u044b, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a \u043f\u0435\u0441\u043e\u043a \u0438\u043b\u0438 \u0433\u0440\u0430\u0432\u0438\u0439.\\n\\n2. <b>\u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f</b>:\\n\u2022 \u041e\u0447\u0435\u043d\u044c \u0432\u0430\u0436\u043d\u043e \u043f\u0440\u0435\u0434\u0443\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044e, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0442\u0438\u0442\u044c \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u0435 \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u043e\u0439 \u0432\u043b\u0430\u0433\u0438. \u041e\u0431\u044b\u0447\u043d\u043e \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442 \u0440\u0443\u043b\u043e\u043d\u043d\u044b\u0435 \u0438\u043b\u0438 \u043f\u043b\u0435\u043d\u043e\u0447\u043d\u044b\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b.\\n\u2022 \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0441\u043b\u043e\u0439 \u0443\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043b\u0435\u043d\u043d\u043e\u0435 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u0434 \u0437\u0430\u043b\u0438\u0432\u043a\u043e\u0439 \u0431\u0435\u0442\u043e\u043d\u043d\u043e\u0433\u043e \u0441\u043b\u043e\u044f.\\n\\n3. <b>\u0422\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f</b>:\\n\u2022 \u0412 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u0434\u0432\u0430\u043b\u0430 \u0438 \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0443\u0441\u043b\u043e\u0432\u0438\u0439, \u043c\u043e\u0436\u0435\u0442 \u043f\u043e\u0442\u0440\u0435\u0431\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f. \u041e\u0431\u044b\u0447\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442 \u043d\u0435\u043e\u0440\u0433\u0430\u043d\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0432\u043b\u0430\u0433\u043e\u0441\u0442\u043e\u0439\u043a\u0438\u0435 \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u0438, \u0442\u0430\u043a\u0438... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:16", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:17", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:17", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='cad53a24-504d-408b-ac4b-a30e8c91373d'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:17", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:22", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:22", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:22", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:22", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='get_file:file_2'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:22", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: send_file with args: (<handlers.BotHandlers object at 0x0000029639BCB7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='get_file:file_2', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), id='1051116659913329958', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 7, 55, 17, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=20, offset=223, type=<MessageEntityType.BOLD>), MessageEntity(length=13, offset=470, type=<MessageEntityType.BOLD>), MessageEntity(length=13, offset=742, type=<MessageEntityType.BOLD>), MessageEntity(length=15, offset=1011, type=<MessageEntityType.BOLD>), MessageEntity(length=17, offset=1227, type=<MessageEntityType.BOLD>)), from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, u... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:22", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: send_file with result: <coroutine object BotHandlers.send_file at 0x000002965F309A60>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:23", "name": "handlers", "levelname": "DEBUG", "message": "Initiated async task to send file '\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf' to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:23", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:26", "name": "handlers", "levelname": "INFO", "message": "File '\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf' sent successfully to user_id=244732168.", "taskName": "Task-43"}
{"asctime": "2024-11-27 10:55:50", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:50", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:50", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:50", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:50", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x0000029639BCB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 7, 55, 49, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2286, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193513), <telegram.ext._callbackcontext.CallbackContext object at 0x000002965F90EF20>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:50", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x000002965F2B43A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:51", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:51", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:53", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:53", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:53", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:53", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:ISO Regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:53", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x0000029639BCB7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:ISO Regulations', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), id='1051116659325681518', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 7, 55, 51, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2287, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations'),), (I... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:53", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x000002965F308F60>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:53", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\iso_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:53", "name": "handlers", "levelname": "DEBUG", "message": "Found 5 valid files in folder_path='E:\\knowledge_base\\iso_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:53", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x000002965F328E90>, 'E:\\\\knowledge_base\\\\iso_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:53", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\iso_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:53", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x000002965F328E90>, 'E:\\\\knowledge_base\\\\iso_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:53", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\iso_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:53", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:53", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\iso_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:53", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:53", "name": "handlers", "levelname": "INFO", "message": "Knowledge base 'ISO Regulations' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:55:54", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:02", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:02", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:03", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:03", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='what is BIM Level 2'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:03", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x0000029639BCB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 7, 56, 2, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2289, supergroup_chat_created=False, text='what is BIM Level 2'), update_id=881193515), <telegram.ext._callbackcontext.CallbackContext object at 0x000002965F90DBE0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:03", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x00000296A234EF20>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:03", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='c7aa94aa-69a5-4021-bf55-62b7125b5736' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:03", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='c7aa94aa-69a5-4021-bf55-62b7125b5736'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:03", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:03", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x000002965F328E90>, 'what is BIM Level 2'), kwargs: {'chat_history': [HumanMessage(content='what is BIM Level 2', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043a\u0430\u043a\u043e\u0432\u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0423\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0443\u0447\u0435\u0442\u0430 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0444\u0430\u043a\u0442\u043e\u0440\u043e\u0432, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0442\u0438\u043f \u0433\u0440\u0443\u043d\u0442\u0430, \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434, \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u0434\u0432\u0430\u043b\u0430 \u0438 \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f. \u0412\u043e\u0442 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u044d\u0442\u0430\u043f\u044b \u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435:\\n\\n1. <b>\u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u044f</b>:\\n\u2022 \u041e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u0434 \u043f\u043e\u043b\u043e\u043c \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u043f\u0440\u043e\u0447\u043d\u044b\u043c \u0438 \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u044b\u043c.\\n\u2022 \u0415\u0441\u043b\u0438 \u0432 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0438 \u0438\u043c\u0435\u044e\u0442\u0441\u044f \u0441\u043b\u0430\u0431\u044b\u0435 \u0438\u043b\u0438 \u0440\u0430\u0441\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0433\u0440\u0443\u043d\u0442\u044b (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0442\u043e\u0440\u0444 \u0438\u043b\u0438 \u0447\u0435\u0440\u043d\u043e\u0437\u0435\u043c), \u0438\u0445 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c \u043d\u0430 \u0431\u043e\u043b\u0435\u0435 \u043f\u043b\u043e\u0442\u043d\u044b\u0435 \u0433\u0440\u0443\u043d\u0442\u044b, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a \u043f\u0435\u0441\u043e\u043a \u0438\u043b\u0438 \u0433\u0440\u0430\u0432\u0438\u0439.\\n\\n2. <b>\u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f</b>:\\n\u2022 \u041e\u0447\u0435\u043d\u044c \u0432\u0430\u0436\u043d\u043e \u043f\u0440\u0435\u0434\u0443\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044e, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0442\u0438\u0442\u044c \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u0435 \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u043e\u0439 \u0432\u043b\u0430\u0433\u0438. \u041e\u0431\u044b\u0447\u043d\u043e \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:03", "name": "llm_service", "levelname": "DEBUG", "message": "Retriever created from vector store.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:03", "name": "llm_service", "levelname": "DEBUG", "message": "History-aware retriever created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:03", "name": "llm_service", "levelname": "DEBUG", "message": "Prompt template for QA chain created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:03", "name": "llm_service", "levelname": "DEBUG", "message": "Question-answering chain created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:03", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieval-Augmented Generation (RAG) chain created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:03", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'what is BIM Level 2', 'role': 'user'}, {'content': '\u043a\u0430\u043a\u043e\u0432\u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430', 'role': 'user'}, {'content': '\u0423\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0443\u0447\u0435\u0442\u0430 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0444\u0430\u043a\u0442\u043e\u0440\u043e\u0432, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0442\u0438\u043f \u0433\u0440\u0443\u043d\u0442\u0430, \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434, \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e\u0434\u0432\u0430\u043b\u0430 \u0438 \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f. \u0412\u043e\u0442 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u044d\u0442\u0430\u043f\u044b \u0438 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435:\\n\\n1. <b>\u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u044f</b>:\\n\u2022 \u041e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043e\u0434 \u043f\u043e\u043b\u043e\u043c \u0434\u043e\u043b\u0436\u043d\u043e \u0431\u044b\u0442\u044c \u043f\u0440\u043e\u0447\u043d\u044b\u043c \u0438 \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u044b\u043c.\\n\u2022 \u0415\u0441\u043b\u0438 \u0432 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0438 \u0438\u043c\u0435\u044e\u0442\u0441\u044f \u0441\u043b\u0430\u0431\u044b\u0435 \u0438\u043b\u0438 \u0440\u0430\u0441\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u0433\u0440\u0443\u043d\u0442\u044b (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0442\u043e\u0440\u0444 \u0438\u043b\u0438 \u0447\u0435\u0440\u043d\u043e\u0437\u0435\u043c), \u0438\u0445 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0437\u0430\u043c\u0435\u043d\u0438\u0442\u044c \u043d\u0430 \u0431\u043e\u043b\u0435\u0435 \u043f\u043b\u043e\u0442\u043d\u044b\u0435 \u0433\u0440\u0443\u043d\u0442\u044b, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a \u043f\u0435\u0441\u043e\u043a \u0438\u043b\u0438 \u0433\u0440\u0430\u0432\u0438\u0439.\\n\\n2. <b>\u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f</b>:\\n\u2022 \u041e\u0447\u0435\u043d\u044c \u0432\u0430\u0436\u043d\u043e \u043f\u0440\u0435\u0434\u0443\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044e, \u0447\u0442\u043e\u0431\u044b \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0442\u0438\u0442\u044c \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u0435 \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u043e\u0439 \u0432\u043b\u0430\u0433\u0438. \u041e\u0431\u044b\u0447\u043d\u043e \u0434\u043b\u044f \u044d\u0442\u043e\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442 \u0440\u0443\u043b\u043e\u043d\u043d\u044b\u0435 \u0438\u043b\u0438 \u043f\u043b\u0435\u043d\u043e\u0447\u043d\u044b\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b.\\n\u2022 \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0441\u043b\u043e\u0439 \u0443\u043a\u043b\u0430\u0434\u044b\u0432\u0430\u0435\u0442\u0441\u044f \u043d\u0430 \u043f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043b\u0435\u043d\u043d\u043e\u0435 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0435\u0440\u0435\u0434 \u0437\u0430\u043b\u0438\u0432\u043a\u043e\u0439 \u0431\u0435\u0442\u043e\u043d\u043d\u043e... [TRUNCATED]", "taskName": null}
{"asctime": "2024-11-27 10:56:03", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": null}
{"asctime": "2024-11-27 10:56:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 07:56:06 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '776', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '794760', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '393ms', 'x-request-id': 'req_34a65c1f7794880c11401c2439f744c0', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e908f3e8a219185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": null}
{"asctime": "2024-11-27 10:56:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_34a65c1f7794880c11401c2439f744c0", "taskName": null}
{"asctime": "2024-11-27 10:56:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002965F7C4B80>, 'json_data': {'input': [[64690, 1829, 9580, 220, 17, 7419, 323, 8292, 304, 8246, 7224, 1]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": null}
{"asctime": "2024-11-27 10:56:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": null}
{"asctime": "2024-11-27 10:56:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 07:56:07 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '81', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_45abca62aeb6bbfd2b5f99a8d69ada85', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e908f4b9e1c2dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": null}
{"asctime": "2024-11-27 10:56:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_45abca62aeb6bbfd2b5f99a8d69ada85", "taskName": null}
{"asctime": "2024-11-27 10:56:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"You are a project assistant from the consultant side on design and construction projects. If you don't know the answer, say that you don't know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 10:56:03. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\\ufeff\\nOrganization and digitization of information about \\nbuildings and civil engineering works, including building \\ninformation modelling (BIM)\\xa0\u2014 Information management \\nusing building information modelling\\... [TRUNCATED]", "taskName": null}
{"asctime": "2024-11-27 10:56:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": null}
{"asctime": "2024-11-27 10:56:13", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 07:56:13 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '5351', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '792807', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '539ms', 'x-request-id': 'req_9899b2f3b8b82b4a7a5a998e77ec6fc1', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e908f531b1b9185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": null}
{"asctime": "2024-11-27 10:56:13", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_9899b2f3b8b82b4a7a5a998e77ec6fc1", "taskName": null}
{"asctime": "2024-11-27 10:56:13", "name": "llm_service", "levelname": "DEBUG", "message": "RAG chain invoked with user prompt.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:13", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity ratio: 0.4", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:13", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity threshold met. References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:13", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('BIM Level 2 refers to a specific level of maturity in the adoption and implementation of Building Information Modelling (BIM) processes and standards. It is characterized by the collaborative production of information using standardized processes and shared information models. Here are some key aspects of BIM Level 2:\\n\\n1. <b>Collaborative Work</b>: At BIM Level 2, all parties involved in a project use their own 3D CAD models, but they are not necessarily working on a single, shared model. Instead, collaboration is achieved by sharing information through a common data environment (CDE).\\n\\n2. <b>Standardized Formats</b>: Information is exchanged using standardized formats such as Industry Foundation Classes (IFC) or Construction Operations Building information exchange (COBie), which ensures compatibility and interoperability between different software platforms.\\n\\n3. <b>Discipline-Specific Models</b>: Each discipline (architecture, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:13", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:14", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:14", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='c7aa94aa-69a5-4021-bf55-62b7125b5736'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:14", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:17", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:17", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:17", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:17", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='get_file:file_1'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:17", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: send_file with args: (<handlers.BotHandlers object at 0x0000029639BCB7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='get_file:file_1', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), id='1051116658333860255', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 7, 56, 13, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=18, offset=324, type=<MessageEntityType.BOLD>), MessageEntity(length=20, offset=590, type=<MessageEntityType.BOLD>), MessageEntity(length=26, offset=863, type=<MessageEntityType.BOLD>), MessageEntity(length=19, offset=1122, type=<MessageEntityType.BOLD>), MessageEntity(length=15, offset=1354, type=<MessageEntityType.BOLD>)), from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, u... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:17", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: send_file with result: <coroutine object BotHandlers.send_file at 0x000002965F309A60>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:17", "name": "handlers", "levelname": "INFO", "message": "Download access denied for file 'E:\\knowledge_base\\iso_regulations\\BS_EN-ISO_19650-3_2020_Operational Phases.pdf' to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:56:18", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:38", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 10:59:40", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 10:59:40", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 10:59:40", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 10:59:47", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:47", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:47", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:48", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:48", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:48", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:48", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:48", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: en", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:48", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:48", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/status'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:48", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: status with args: (<handlers.BotHandlers object at 0x0000029E4A79B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 7, 59, 47, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=7, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2292, supergroup_chat_created=False, text='/status'), update_id=881193517), <telegram.ext._callbackcontext.CallbackContext object at 0x0000029E6FE0AEB0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:48", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: status with result: <coroutine object BotHandlers.status at 0x0000029E5021DFC0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:49", "name": "handlers", "levelname": "INFO", "message": "Provided status to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:49", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:52", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:52", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:52", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:52", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:52", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x0000029E4A79B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 7, 59, 52, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2294, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193518), <telegram.ext._callbackcontext.CallbackContext object at 0x0000029E6FE09550>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:52", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x0000029E6FD23BE0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:53", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:53", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:55", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:55", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:56", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:56", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:ISO Regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:56", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x0000029E4A79B7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:ISO Regulations', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), id='1051116658106485409', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 7, 59, 52, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2295, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations'),), (I... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:56", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x0000029E6EB478A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:56", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\iso_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:56", "name": "handlers", "levelname": "DEBUG", "message": "Found 5 valid files in folder_path='E:\\knowledge_base\\iso_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:56", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x0000029E6FEF96A0>, 'E:\\\\knowledge_base\\\\iso_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:56", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\iso_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:56", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x0000029E6FEF96A0>, 'E:\\\\knowledge_base\\\\iso_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:56", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:56", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:56", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:56", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\iso_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:56", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:56", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\iso_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:56", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:56", "name": "handlers", "levelname": "INFO", "message": "Knowledge base 'ISO Regulations' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 10:59:56", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:05", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:05", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:06", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:06", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='what is BIM Level 5'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:06", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x0000029E4A79B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 8, 0, 5, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2297, supergroup_chat_created=False, text='what is BIM Level 5'), update_id=881193520), <telegram.ext._callbackcontext.CallbackContext object at 0x0000029E6FE0B3F0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:06", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x0000029E6FF18680>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:06", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='8cd98b36-fdee-4a00-a8f0-fa0c71425a55' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:06", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='8cd98b36-fdee-4a00-a8f0-fa0c71425a55'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:06", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:06", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x0000029E6FEF96A0>, 'what is BIM Level 5'), kwargs: {'chat_history': [HumanMessage(content='what is BIM Level 5', additional_kwargs={}, response_metadata={}), HumanMessage(content='what is BIM Level 2', additional_kwargs={}, response_metadata={}), AIMessage(content='BIM Level 2 refers to a specific level of maturity in the adoption and implementation of Building Information Modelling (BIM) processes and standards. It is characterized by the collaborative production of information using standardized processes and shared information models. Here are some key aspects of BIM Level 2:\\n\\n1. <b>Collaborative Work</b>: At BIM Level 2, all parties involved in a project use their own 3D CAD models, but they are not necessarily working on a single, shared model. Instead, collaboration is achieved by sharing information through a common data environment (CDE).\\n\\n2. <b>Standardized Formats</b>: Information is exch... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:06", "name": "llm_service", "levelname": "DEBUG", "message": "Retriever created from vector store.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:06", "name": "llm_service", "levelname": "DEBUG", "message": "History-aware retriever created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:06", "name": "llm_service", "levelname": "DEBUG", "message": "Prompt template for QA chain created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:06", "name": "llm_service", "levelname": "DEBUG", "message": "Question-answering chain created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:06", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieval-Augmented Generation (RAG) chain created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'what is BIM Level 5', 'role': 'user'}, {'content': 'what is BIM Level 2', 'role': 'user'}, {'content': 'BIM Level 2 refers to a specific level of maturity in the adoption and implementation of Building Information Modelling (BIM) processes and standards. It is characterized by the collaborative production of information using standardized processes and shared information models. Here are some key aspects of BIM Level 2:\\n\\n1. <b>Collaborative Work</b>: At BIM Level 2, all parties involved in a project use their own 3D CAD models, but they are not necessarily working on a single, shared model. Instead, collaboration is achieved by sharing information through a common data environment (CDE).\\n\\n2. <b>Standardized Formats</b>: Information is exchanged using standardized formats such as Industry Foundation Classes (IFC) or Construction Operations Building information excha... [TRUNCATED]", "taskName": null}
{"asctime": "2024-11-27 11:00:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": null}
{"asctime": "2024-11-27 11:00:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 08:00:07 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '1086'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '795135'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '364ms'), ('x-request-id', 'req_23820cea4713c5daa1ee9e0b6d951912'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=rr30VYFB3wJY8S1p1QcjYGHdJXCNhq0I019yy9FyT7c-1732694407-1.0.1.1-HpKoRXMSHTyV1tnyX28GYamvhDS4B6dvQTbgULypdjAAcCZr1FJEIl2M2piUomheOZgBqOhd6wjKKEGDLVhWEw; path=/; expires=Wed, 27... [TRUNCATED]", "taskName": null}
{"asctime": "2024-11-27 11:00:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_23820cea4713c5daa1ee9e0b6d951912", "taskName": null}
{"asctime": "2024-11-27 11:00:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000029E50273600>, 'json_data': {'input': [[1, 3311, 426, 1829, 48261, 5990, 323, 17931, 2737, 426, 1829, 9580, 220, 20, 1]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": null}
{"asctime": "2024-11-27 11:00:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": null}
{"asctime": "2024-11-27 11:00:08", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 08:00:08 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '122'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999985'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_acbed1917b243137884f309ca7b5be4b'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=5L.TfwUJGrn59jLVl9ThQeJC2Kms8EZoqCU9yiJdCHs-1732694408-1.0.1.1-sAAeWAEMttobEhs9TlCHnICK_ebNIfxpqOxdt... [TRUNCATED]", "taskName": null}
{"asctime": "2024-11-27 11:00:08", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_acbed1917b243137884f309ca7b5be4b", "taskName": null}
{"asctime": "2024-11-27 11:00:08", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 11:00:06. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\\ufeff\\nOrganization and digitization of information about \\nbuildings and civil engineering works, including building \\ninformation modelling (BIM)\\xa0\u2014 Information management \\nusing building information modellin... [TRUNCATED]", "taskName": null}
{"asctime": "2024-11-27 11:00:08", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": null}
{"asctime": "2024-11-27 11:00:17", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 08:00:17 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '8473', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '792460', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '565ms', 'x-request-id': 'req_0f259bdb61a7f5dea8169a9a76d5c15c', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e909534ba40ee20-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": null}
{"asctime": "2024-11-27 11:00:17", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_0f259bdb61a7f5dea8169a9a76d5c15c", "taskName": null}
{"asctime": "2024-11-27 11:00:17", "name": "llm_service", "levelname": "DEBUG", "message": "RAG chain invoked with user prompt.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:17", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity ratio: 0.2", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:17", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity threshold met. References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:17", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('BIM Level 5 is not a formally recognized level within the standard definitions of Building Information Modelling (BIM) maturity levels. Typically, BIM maturity is discussed in terms of Levels 0 through 3:\\n\\n1. <b>BIM Level 0</b>: Represents unmanaged CAD with 2D drawings and no collaboration.\\n\\n2. <b>BIM Level 1</b>: Involves managed CAD in 2D or 3D format with a collaboration tool providing a common data environment (CDE), but models are not shared between project team members.\\n\\n3. <b>BIM Level 2</b>: Characterized by collaborative working with each discipline creating its own 3D model, but not necessarily working on a single, shared model. Information is exchanged through a common file format to enable collaboration.\\n\\n4. <b>BIM Level 3</b>: Envisions full collaboration between all disciplines by means of using a single, shared project model that is held in a central environment. All parties can access and modify the same model,... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:17", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:19", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:19", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='8cd98b36-fdee-4a00-a8f0-fa0c71425a55'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:19", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:32", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:32", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:32", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:32", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='get_file:file_0'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:32", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: send_file with args: (<handlers.BotHandlers object at 0x0000029E4A79B7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='get_file:file_0', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), id='1051116661244327462', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 8, 0, 18, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=11, offset=209, type=<MessageEntityType.BOLD>), MessageEntity(length=11, offset=290, type=<MessageEntityType.BOLD>), MessageEntity(length=11, offset=472, type=<MessageEntityType.BOLD>), MessageEntity(length=11, offset=710, type=<MessageEntityType.BOLD>), MessageEntity(length=11, offset=1146, type=<MessageEntityType.BOLD>), MessageEntity(length=11, offset=1291, type=<MessageEntityType.BOLD>)... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:32", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: send_file with result: <coroutine object BotHandlers.send_file at 0x0000029E6FE810C0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:33", "name": "handlers", "levelname": "INFO", "message": "Download access denied for file 'E:\\knowledge_base\\iso_regulations\\BS_EN-ISO_19650-5_2020_Security-minded approach.pdf' to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:00:33", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:22", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 11:30:23", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 11:30:23", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 11:30:23", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 11:30:43", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:43", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:43", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:44", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:44", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:44", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:44", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:44", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: en", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:44", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:44", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:44", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x000001DF01A8B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 8, 30, 43, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2300, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193522), <telegram.ext._callbackcontext.CallbackContext object at 0x000001DF27110E50>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:44", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x000001DF26FA3880>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:45", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:45", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:47", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:47", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:47", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:47", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:47", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x000001DF01A8B7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), id='1051116658275191796', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 8, 30, 45, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2301, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations'),... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:47", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x000001DF25DC7A00>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:47", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:47", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:47", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x000001DF27189FA0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:47", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:47", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x000001DF27189FA0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:47", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:47", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:47", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:47", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:47", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:47", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:47", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:47", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:30:48", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:26", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:26", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:26", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:26", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='Iz chego postroit krishu doma'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:26", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x000001DF01A8B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 8, 31, 25, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2303, supergroup_chat_created=False, text='Iz chego postroit krishu doma'), update_id=881193524), <telegram.ext._callbackcontext.CallbackContext object at 0x000001DF271114E0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:26", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x000001DF271809A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:26", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='15698522-5a71-4ab7-a3ab-92b876767991' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:26", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='15698522-5a71-4ab7-a3ab-92b876767991'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:26", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:26", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x000001DF27189FA0>, 'Iz chego postroit krishu doma'), kwargs: {'chat_history': [HumanMessage(content='Iz chego postroit krishu doma', additional_kwargs={}, response_metadata={}), HumanMessage(content='what is BIM Level 5', additional_kwargs={}, response_metadata={}), AIMessage(content='BIM Level 5 is not a formally recognized level within the standard definitions of Building Information Modelling (BIM) maturity levels. Typically, BIM maturity is discussed in terms of Levels 0 through 3:\\n\\n1. <b>BIM Level 0</b>: Represents unmanaged CAD with 2D drawings and no collaboration.\\n\\n2. <b>BIM Level 1</b>: Involves managed CAD in 2D or 3D format with a collaboration tool providing a common data environment (CDE), but models are not shared between project team members.\\n\\n3. <b>BIM Level 2</b>: Characterized by collaborative working with each discipline creating its own 3D model, but not necessarily working on... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:26", "name": "llm_service", "levelname": "DEBUG", "message": "Retriever created from vector store.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:26", "name": "llm_service", "levelname": "DEBUG", "message": "History-aware retriever created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:26", "name": "llm_service", "levelname": "DEBUG", "message": "Prompt template for QA chain created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:26", "name": "llm_service", "levelname": "DEBUG", "message": "Question-answering chain created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:26", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieval-Augmented Generation (RAG) chain created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:26", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'Iz chego postroit krishu doma', 'role': 'user'}, {'content': 'what is BIM Level 5', 'role': 'user'}, {'content': 'BIM Level 5 is not a formally recognized level within the standard definitions of Building Information Modelling (BIM) maturity levels. Typically, BIM maturity is discussed in terms of Levels 0 through 3:\\n\\n1. <b>BIM Level 0</b>: Represents unmanaged CAD with 2D drawings and no collaboration.\\n\\n2. <b>BIM Level 1</b>: Involves managed CAD in 2D or 3D format with a collaboration tool providing a common data environment (CDE), but models are not shared between project team members.\\n\\n3. <b>BIM Level 2</b>: Characterized by collaborative working with each discipline creating its own 3D model, but not necessarily working on a single, shared model. Information is exchanged through a common file format to enable collaboration.\\n\\n4. <b>BIM Level 3</b>: Envision... [TRUNCATED]", "taskName": null}
{"asctime": "2024-11-27 11:31:26", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": null}
{"asctime": "2024-11-27 11:31:29", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 08:31:29 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '735'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '795270'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '354ms'), ('x-request-id', 'req_b877246a41b71e794273a7d6ef192ed0'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=wbYJAm4Xf4...b55aOJppBOXf2VWHLuUymLvMcAM.Bg-1732696289-1.0.1.1-T9OlT4LYZL2D.JJto62y01gV8E_xYGj1gxcdy4UvcvYcXO_UHx9qykSbIKccoYg03Vk962uTf6dQWTsVpVaZsQ; path=/; expires=Wed, 27-... [TRUNCATED]", "taskName": null}
{"asctime": "2024-11-27 11:31:29", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_b877246a41b71e794273a7d6ef192ed0", "taskName": null}
{"asctime": "2024-11-27 11:31:29", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001DF074F7560>, 'json_data': {'input': [[1, 78672, 369, 4857, 264, 3838, 15485, 304, 64328, 1]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": null}
{"asctime": "2024-11-27 11:31:29", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": null}
{"asctime": "2024-11-27 11:31:31", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 08:31:30 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '61'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999989'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_b4e6a105646e6f65b794d1f498c84613'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=4w6UOyEfsqk9ZX4sey4wl8a.p1CZC3wuLJvd_kUhPzA-1732696290-1.0.1.1-OvnIZYRxxDwaE3ZN8wUWEeIpvaHu2KVP4wkNZ3... [TRUNCATED]", "taskName": null}
{"asctime": "2024-11-27 11:31:31", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_b4e6a105646e6f65b794d1f498c84613", "taskName": null}
{"asctime": "2024-11-27 11:31:31", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"You are a project assistant from the consultant side on design and construction projects. If you don't know the answer, say that you don't know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 11:31:26. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n5 \\n \\n4.3 \u041e\u0431\u0449\u0438\u0435 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f \u043a \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u043c\u044b\u043c \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u0430\u043c \\n4.3.1 \u041d\u0435\u0441\u0443\u0449\u0438\u0435 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 (\u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u043a\u0430\u0440\u043a\u0430\u0441\u0430) \u0434\u043e\u043c\u043e\u0432 \u0434\u0430\u043d\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \\n\u0438\u0437\u0433\u043e\u0442\u043e\u0432\u043b\u044f\u044e\u0442\u0441\u044f \u0438\u0437 \u043f\u0438\u043b\u043e\u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u0432 \u0445\u0432\u043e\u0439\u043d\u044b\u0445 \u043f\u043e\u0440\u043e\u0434, \u0432\u044b\u0441\u0443\u0448\u0435\u043d\u043d\u044b\u0445 \u0438 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u043d\u044b\u0445 \u043e\u0442 \\n\u0443\u0432\u043b\u0430\u0436\u043d\u0435\u043d\u0438\u044f \u0432 \u043f\u0440\u043e... [TRUNCATED]", "taskName": null}
{"asctime": "2024-11-27 11:31:31", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": null}
{"asctime": "2024-11-27 11:31:40", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 08:31:40 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '8668', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '788847', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '836ms', 'x-request-id': 'req_631f878d99b3491231ffdb614839aaac', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e90c32a5f949185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": null}
{"asctime": "2024-11-27 11:31:40", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_631f878d99b3491231ffdb614839aaac", "taskName": null}
{"asctime": "2024-11-27 11:31:40", "name": "llm_service", "levelname": "DEBUG", "message": "RAG chain invoked with user prompt.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:40", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity ratio: 0.0", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:40", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity threshold not met. Returning answer without references.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:40", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u041f\u0440\u0438 \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0435 \u043a\u0440\u044b\u0448\u0438 \u0434\u043e\u043c\u0430 \u0432\u0430\u0436\u043d\u043e \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0430\u0442 \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u044c, \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u043e\u0441\u0442\u044c \u043a \u043f\u043e\u0433\u043e\u0434\u043d\u044b\u043c \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c \u0438 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u044d\u0441\u0442\u0435\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0435\u043d\u0438\u044f\u043c. \u0412\u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0445 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u0432 \u0434\u043b\u044f \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0430 \u043a\u0440\u044b\u0448\u0438:\\n\\n1. <b>\u041c\u0435\u0442\u0430\u043b\u043b</b>:\\n\u2022 \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043e\u0446\u0438\u043d\u043a\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0441\u0442\u0430\u043b\u044c, \u0430\u043b\u044e\u043c\u0438\u043d\u0438\u0439 \u0438\u043b\u0438 \u043c\u0435\u0434\u044c.\\n\u2022 \u041f\u0440\u043e\u0447\u043d\u044b\u0439 \u0438 \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u044b\u0439 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b, \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u044b\u0439 \u043a \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u0438 \u0438 \u044d\u043a\u0441\u0442\u0440\u0435\u043c\u0430\u043b\u044c\u043d\u044b\u043c \u043f\u043e\u0433\u043e\u0434\u043d\u044b\u043c \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c.\\n\u2022 \u041e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u0445\u043e\u0440\u043e\u0448\u0443\u044e \u0437\u0430\u0449\u0438\u0442\u0443 \u043e\u0442 \u043e\u0433\u043d\u044f \u0438 \u0432\u0435\u0442\u0440\u0430.\\n\\n2. <b>\u0413\u0438\u0431\u043a\u0430\u044f \u0447\u0435\u0440\u0435\u043f\u0438\u0446\u0430 (\u0431\u0438\u0442\u0443\u043c\u043d\u0430\u044f)</b>:\\n\u2022 \u041f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u0430 \u0438\u0437-\u0437\u0430 \u043b\u0435\u0433\u043a\u043e\u0441\u0442\u0438 \u043c\u043e\u043d\u0442\u0430\u0436\u0430 \u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0439 \u0446\u0435\u043d\u044b.\\n\u2022 \u0425\u043e\u0440\u043e\u0448\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f \u043a\u0440\u044b\u0448 \u0441\u043b\u043e\u0436\u043d\u043e\u0439 \u0444\u043e\u0440\u043c\u044b.\\n\u2022 \u041e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u0445\u043e\u0440\u043e\u0448\u0443\u044e \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044e.\\n\\n3. <b>\u041a\u0435\u0440\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0438\u043b\u0438 \u0431\u0435\u0442\u043e\u043d\u043d\u0430\u044f \u0447\u0435\u0440\u0435\u043f\u0438\u0446\u0430</b>:\\n\u2022 \u041e\u0431\u043b\u0430\u0434\u0430\u0435\u0442 \u0432\u044b\u0441\u043e\u043a\u0438\u043c\u0438 \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u044b\u043c\u0438 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430\u043c\u0438.\\n\u2022 \u0414\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u044b\u0439 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b, \u043f\u0440\u0438\u0434\u0430\u044e\u0449\u0438\u0439 \u043a\u0440\u044b\u0448\u0435 \u0442\u0440\u0430\u0434\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0438 \u044d\u0441\u0442\u0435\u0442\u0438\u0447\u043d\u044b\u0439 \u0432\u0438\u0434.\\n\u2022 \u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0443\u0441\u0438\u043b\u0435\u043d\u043d\u043e\u0439 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u0438\u0437-\u0437\u0430 \u0432\u0435\u0441\u0430.\\n\\n4. <b>\u0414\u0435\u0440\u0435\u0432\u044f\u043d\u043d\u0430\u044f \u0447\u0435\u0440\u0435\u043f\u0438\u0446\u0430 \u0438\u043b\u0438 \u0433\u043e\u043d\u0442\u044b</b>:\\n\u2022 \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0442\u0440\u0430\u0434\u0438\u0446\u0438\u043e\u043d\u043d\u043e\u0433\u043e \u0438\u043b\u0438 \u0434\u0435\u0440\u0435\u0432\u0435\u043d\u0441\u043a\u043e\u0433\u043e \u0441\u0442\u0438\u043b\u044f.\\n\u2022... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:40", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:41", "name": "handlers", "levelname": "INFO", "message": "Sent response to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:41", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='15698522-5a71-4ab7-a3ab-92b876767991'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:41", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:57", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:58", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:58", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:58", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u0418\u0437 \u0447\u0435\u0433\u043e \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043a\u0440\u044b\u0448\u0443 \u0434\u043e\u043c\u0430'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:58", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x000001DF01A8B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 8, 31, 57, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2305, supergroup_chat_created=False, text='\u0418\u0437 \u0447\u0435\u0433\u043e \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043a\u0440\u044b\u0448\u0443 \u0434\u043e\u043c\u0430'), update_id=881193525), <telegram.ext._callbackcontext.CallbackContext object at 0x000001DF27113310>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:58", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x000001DF271809A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:58", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='e62e9544-ac6c-45c3-9955-3bfe6f51156b' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:58", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='e62e9544-ac6c-45c3-9955-3bfe6f51156b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:58", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:58", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x000001DF27189FA0>, '\u0418\u0437 \u0447\u0435\u0433\u043e \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043a\u0440\u044b\u0448\u0443 \u0434\u043e\u043c\u0430'), kwargs: {'chat_history': [HumanMessage(content='\u0418\u0437 \u0447\u0435\u0433\u043e \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043a\u0440\u044b\u0448\u0443 \u0434\u043e\u043c\u0430', additional_kwargs={}, response_metadata={}), HumanMessage(content='Iz chego postroit krishu doma', additional_kwargs={}, response_metadata={}), AIMessage(content='\u041f\u0440\u0438 \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0435 \u043a\u0440\u044b\u0448\u0438 \u0434\u043e\u043c\u0430 \u0432\u0430\u0436\u043d\u043e \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0430\u0442 \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u044c, \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u043e\u0441\u0442\u044c \u043a \u043f\u043e\u0433\u043e\u0434\u043d\u044b\u043c \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c \u0438 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u044d\u0441\u0442\u0435\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0435\u043d\u0438\u044f\u043c. \u0412\u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0445 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u0432 \u0434\u043b\u044f \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0430 \u043a\u0440\u044b\u0448\u0438:\\n\\n1. <b>\u041c\u0435\u0442\u0430\u043b\u043b</b>:\\n\u2022 \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043e\u0446\u0438\u043d\u043a\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0441\u0442\u0430\u043b\u044c, \u0430\u043b\u044e\u043c\u0438\u043d\u0438\u0439 \u0438\u043b\u0438 \u043c\u0435\u0434\u044c.\\n\u2022 \u041f\u0440\u043e\u0447\u043d\u044b\u0439 \u0438 \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u044b\u0439 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b, \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u044b\u0439 \u043a \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u0438 \u0438 \u044d\u043a\u0441\u0442\u0440\u0435\u043c\u0430\u043b\u044c\u043d\u044b\u043c \u043f\u043e\u0433\u043e\u0434\u043d\u044b\u043c \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c.\\n\u2022 \u041e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u0445\u043e\u0440\u043e\u0448\u0443\u044e \u0437\u0430\u0449\u0438\u0442\u0443 \u043e\u0442 \u043e\u0433\u043d\u044f \u0438 \u0432\u0435\u0442\u0440\u0430.\\n\\n2. <b>\u0413\u0438\u0431\u043a\u0430\u044f \u0447\u0435\u0440\u0435\u043f\u0438\u0446\u0430 (\u0431\u0438\u0442\u0443\u043c\u043d\u0430\u044f)</b>:\\n\u2022 \u041f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u0430 \u0438\u0437-\u0437\u0430 \u043b\u0435\u0433\u043a\u043e\u0441\u0442\u0438 \u043c\u043e\u043d\u0442\u0430\u0436\u0430 \u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0439 \u0446\u0435\u043d\u044b.\\n\u2022 \u0425\u043e\u0440\u043e\u0448\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f \u043a\u0440\u044b\u0448 \u0441\u043b\u043e\u0436\u043d\u043e\u0439 \u0444\u043e\u0440\u043c\u044b.\\n\u2022 \u041e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u0445\u043e\u0440\u043e\u0448\u0443\u044e \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044e.\\n\\n... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:58", "name": "llm_service", "levelname": "DEBUG", "message": "Retriever created from vector store.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:58", "name": "llm_service", "levelname": "DEBUG", "message": "History-aware retriever created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:58", "name": "llm_service", "levelname": "DEBUG", "message": "Prompt template for QA chain created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:58", "name": "llm_service", "levelname": "DEBUG", "message": "Question-answering chain created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:58", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieval-Augmented Generation (RAG) chain created.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:31:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': '\u0418\u0437 \u0447\u0435\u0433\u043e \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043a\u0440\u044b\u0448\u0443 \u0434\u043e\u043c\u0430', 'role': 'user'}, {'content': 'Iz chego postroit krishu doma', 'role': 'user'}, {'content': '\u041f\u0440\u0438 \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0435 \u043a\u0440\u044b\u0448\u0438 \u0434\u043e\u043c\u0430 \u0432\u0430\u0436\u043d\u043e \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0430\u0442 \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u044c, \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u043e\u0441\u0442\u044c \u043a \u043f\u043e\u0433\u043e\u0434\u043d\u044b\u043c \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c \u0438 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0442 \u044d\u0441\u0442\u0435\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0435\u043d\u0438\u044f\u043c. \u0412\u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0445 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u0432 \u0434\u043b\u044f \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0430 \u043a\u0440\u044b\u0448\u0438:\\n\\n1. <b>\u041c\u0435\u0442\u0430\u043b\u043b</b>:\\n\u2022 \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u043e\u0446\u0438\u043d\u043a\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0441\u0442\u0430\u043b\u044c, \u0430\u043b\u044e\u043c\u0438\u043d\u0438\u0439 \u0438\u043b\u0438 \u043c\u0435\u0434\u044c.\\n\u2022 \u041f\u0440\u043e\u0447\u043d\u044b\u0439 \u0438 \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u044b\u0439 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b, \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u044b\u0439 \u043a \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u0438 \u0438 \u044d\u043a\u0441\u0442\u0440\u0435\u043c\u0430\u043b\u044c\u043d\u044b\u043c \u043f\u043e\u0433\u043e\u0434\u043d\u044b\u043c \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c.\\n\u2022 \u041e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u0445\u043e\u0440\u043e\u0448\u0443\u044e \u0437\u0430\u0449\u0438\u0442\u0443 \u043e\u0442 \u043e\u0433\u043d\u044f \u0438 \u0432\u0435\u0442\u0440\u0430.\\n\\n2. <b>\u0413\u0438\u0431\u043a\u0430\u044f \u0447\u0435\u0440\u0435\u043f\u0438\u0446\u0430 (\u0431\u0438\u0442\u0443\u043c\u043d\u0430\u044f)</b>:\\n\u2022 \u041f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u0430 \u0438\u0437-\u0437\u0430 \u043b\u0435\u0433\u043a\u043e\u0441\u0442\u0438 \u043c\u043e\u043d\u0442\u0430\u0436\u0430 \u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0439 \u0446\u0435\u043d\u044b.\\n\u2022 \u0425\u043e\u0440\u043e\u0448\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f \u043a\u0440\u044b\u0448 \u0441\u043b\u043e\u0436\u043d\u043e\u0439 \u0444\u043e\u0440\u043c\u044b.\\n\u2022 \u041e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u0445\u043e\u0440\u043e\u0448\u0443\u044e \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044e.\\n\\n3. <b>\u041a\u0435\u0440\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0438\u043b\u0438 \u0431\u0435\u0442\u043e\u043d\u043d\u0430\u044f \u0447\u0435\u0440\u0435\u043f\u0438\u0446\u0430</b>:\\n\u2022 \u041e\u0431\u043b\u0430\u0434\u0430\u0435\u0442 \u0432\u044b\u0441\u043e\u043a\u0438\u043c\u0438 \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u044b\u043c\u0438 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430\u043c\u0438.\\n\u2022 \u0414\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u044b\u0439 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b, \u043f\u0440\u0438\u0434\u0430\u044e\u0449\u0438\u0439 \u043a\u0440\u044b\u0448... [TRUNCATED]", "taskName": null}
{"asctime": "2024-11-27 11:31:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": null}
{"asctime": "2024-11-27 11:31:59", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 08:31:59 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '627', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '794845', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '386ms', 'x-request-id': 'req_8bc683aea1a6f0db67c05c537e10df5c', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e90c3d44b1ac02e-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": null}
{"asctime": "2024-11-27 11:31:59", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_8bc683aea1a6f0db67c05c537e10df5c", "taskName": null}
{"asctime": "2024-11-27 11:31:59", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001DF0751BF60>, 'json_data': {'input': [[1, 14809, 66525, 7384, 369, 10632, 304, 35148, 92399, 1]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": null}
{"asctime": "2024-11-27 11:31:59", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": null}
{"asctime": "2024-11-27 11:32:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 08:32:00 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '38', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999989', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_4f0a1edcf3b6bddae3dc6082b7767923', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e90c3dabd11c02e-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": null}
{"asctime": "2024-11-27 11:32:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_4f0a1edcf3b6bddae3dc6082b7767923", "taskName": null}
{"asctime": "2024-11-27 11:32:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"You are a project assistant from the consultant side on design and construction projects. If you don't know the answer, say that you don't know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 11:31:58. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n56 \\n \\n9 \u0422\u0415\u041f\u041b\u041e\u0418\u0417\u041e\u041b\u042f\u0426\u0418\u042f, \u0417\u0410\u0429\u0418\u0422\u0410 \u041e\u0422 \u041f\u0410\u0420\u041e- \u0418 \u0412\u041e\u0417\u0414\u0423\u0425\u041e\u041f\u0420\u041e\u041d\u0418\u0426\u0410\u041d\u0418\u042f \\n\u0421\u041d\u0438\u041f 31-02 \u043f\u0440\u0435\u0434\u044a\u044f\u0432\u043b\u044f\u0435\u0442 \u043a \u043e\u0433\u0440\u0430\u0436\u0434\u0430\u044e\u0449\u0438\u043c \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044f\u043c \u0434\u043e\u043c\u0430 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u043e \u0433\u0438\u0434\u0440\u043e-, \\n\u0442\u0435\u043f\u043b\u043e-, \u0432\u043e\u0437\u0434\u0443\u0445\u043e- \u0438 \u043f\u0430\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u0438, \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u044e\u0449\u0438\u0435 \u0437\u0430\u0449\u0438\u0442\u0443 \u043f\u043e\u043c\u0435\u0449\u0435\u043d\u0438\u0439 \u0434\u043e\u043c\u0430 \u043e\u0442 \\... [TRUNCATED]", "taskName": null}
{"asctime": "2024-11-27 11:32:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": null}
{"asctime": "2024-11-27 11:32:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 08:32:07 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '6878', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '790240', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '732ms', 'x-request-id': 'req_368945853c7089cbb67035e85ab43b19', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e90c3e1ff1cc02e-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": null}
{"asctime": "2024-11-27 11:32:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_368945853c7089cbb67035e85ab43b19", "taskName": null}
{"asctime": "2024-11-27 11:32:07", "name": "llm_service", "levelname": "DEBUG", "message": "RAG chain invoked with user prompt.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:32:07", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity ratio: 0.4", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:32:07", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity threshold met. References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:32:07", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0412\u044b\u0431\u043e\u0440 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u0432 \u0434\u043b\u044f \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0430 \u043a\u0440\u044b\u0448\u0438 \u0434\u043e\u043c\u0430 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0443\u0441\u043b\u043e\u0432\u0438\u0439, \u0431\u044e\u0434\u0436\u0435\u0442\u0430, \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u043d\u043e\u0433\u043e \u0441\u0442\u0438\u043b\u044f \u0438 \u043b\u0438\u0447\u043d\u044b\u0445 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0435\u043d\u0438\u0439. \u0412\u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0445 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u043a\u0440\u044b\u0448\u0438:\\n\\n1. <b>\u041c\u0435\u0442\u0430\u043b\u043b</b>:\\n\u2022 \u041e\u0446\u0438\u043d\u043a\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0441\u0442\u0430\u043b\u044c, \u0430\u043b\u044e\u043c\u0438\u043d\u0438\u0439 \u0438\u043b\u0438 \u043c\u0435\u0434\u044c \u2014 \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u044b\u0435 \u0438 \u043f\u0440\u043e\u0447\u043d\u044b\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b, \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u044b\u0435 \u043a \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u0438 \u0438 \u044d\u043a\u0441\u0442\u0440\u0435\u043c\u0430\u043b\u044c\u043d\u044b\u043c \u043f\u043e\u0433\u043e\u0434\u043d\u044b\u043c \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c.\\n\u2022 \u041c\u0435\u0442\u0430\u043b\u043b\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043a\u0440\u043e\u0432\u043b\u044f \u043b\u0435\u0433\u043a\u0430\u044f \u0438 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0430 \u0432 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0446\u0432\u0435\u0442\u0430\u0445 \u0438 \u0441\u0442\u0438\u043b\u044f\u0445.\\n\\n2. <b>\u0413\u0438\u0431\u043a\u0430\u044f \u0447\u0435\u0440\u0435\u043f\u0438\u0446\u0430 (\u0431\u0438\u0442\u0443\u043c\u043d\u0430\u044f)</b>:\\n\u2022 \u041f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u043b\u0435\u0433\u043a\u043e\u0441\u0442\u0438 \u043c\u043e\u043d\u0442\u0430\u0436\u0430 \u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0439 \u0446\u0435\u043d\u0435.\\n\u2022 \u0425\u043e\u0440\u043e\u0448\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f \u0441\u043b\u043e\u0436\u043d\u044b\u0445 \u0444\u043e\u0440\u043c \u043a\u0440\u044b\u0448 \u0438 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u043e\u0442\u043b\u0438\u0447\u043d\u0443\u044e \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044e.\\n\\n3. <b>\u041a\u0435\u0440\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0438\u043b\u0438 \u0431\u0435\u0442\u043e\u043d\u043d\u0430\u044f \u0447\u0435\u0440\u0435\u043f\u0438\u0446\u0430</b>:\\n\u2022 \u041e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u0432\u044b\u0441\u043e\u043a\u0443\u044e \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044e \u0438 \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u044c.\\n\u2022 \u041f\u0440\u0438\u0434\u0430\u0451\u0442 \u043a\u0440\u044b\u0448\u0435 \u0442\u0440\u0430\u0434\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0438 \u044d\u0441\u0442\u0435\u0442\u0438\u0447\u043d\u044b\u0439 \u0432\u0438\u0434, \u043d\u043e \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u043d\u0430\u0434\u0435\u0436\u043d\u043e\u0439 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u0438\u0437-\u0437\u0430 \u0431\u043e\u043b\u044c\u0448\u043e\u0433\u043e \u0432\u0435\u0441\u0430.\\n\\n4. <b>\u0414\u0435\u0440\u0435\u0432\u044f\u043d\u043d\u0430\u044f \u0447\u0435\u0440\u0435\u043f\u0438\u0446\u0430 \u0438\u043b\u0438 \u0433\u043e\u043d\u0442\u044b</b>:\\n\u2022 \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0442\u0440\u0430\u0434\u0438\u0446\u0438\u043e\u043d\u043d\u043e\u0433\u043e \u0438\u043b\u0438 \u0434\u0435\u0440\u0435\u0432\u0435\u043d\u0441\u043a... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:32:07", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:32:08", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:32:08", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='e62e9544-ac6c-45c3-9955-3bfe6f51156b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 11:32:08", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:14", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 12:01:16", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 12:01:16", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 12:01:17", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 12:01:27", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:28", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:28", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:28", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:28", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:28", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: en", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:28", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:28", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/start'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:28", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: start with args: (<handlers.BotHandlers object at 0x0000015AF49CB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 9, 1, 27, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=6, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2307, supergroup_chat_created=False, text='/start'), update_id=881193526), <telegram.ext._callbackcontext.CallbackContext object at 0x0000015A99FCEC10>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:28", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: start with result: <coroutine object BotHandlers.start at 0x0000015A99E73220>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:28", "name": "handlers", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:31", "name": "handlers", "levelname": "INFO", "message": "Sent welcome message to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:31", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:33", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:33", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:33", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:33", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:33", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x0000015AF49CB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 9, 1, 33, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2309, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193527), <telegram.ext._callbackcontext.CallbackContext object at 0x0000015A99FCD470>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:33", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x0000015A99E8F400>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:34", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:34", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:35", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:35", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:35", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:35", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:35", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x0000015AF49CB7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), id='1051116658060995329', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 9, 1, 33, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2310, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations'),)... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:35", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x0000015A98CBB8A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:36", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:36", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:36", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x0000015A9A0A53D0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:36", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:36", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x0000015A9A0A53D0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:36", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:36", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:36", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:36", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:36", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:36", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:36", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:36", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:36", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:45", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:45", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:46", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:46", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u0418\u0437 \u0447\u0435\u0433\u043e \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043a\u0440\u044b\u0448\u0443 \u0434\u043e\u043c\u0430'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:46", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x0000015AF49CB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 9, 1, 45, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2312, supergroup_chat_created=False, text='\u0418\u0437 \u0447\u0435\u0433\u043e \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043a\u0440\u044b\u0448\u0443 \u0434\u043e\u043c\u0430'), update_id=881193529), <telegram.ext._callbackcontext.CallbackContext object at 0x0000015A99FCF000>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:46", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x0000015A9A098B30>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:46", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='b3ecebbf-5541-429d-a773-0260b85f587b' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:46", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='b3ecebbf-5541-429d-a773-0260b85f587b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:46", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:46", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x0000015A9A0A53D0>, '\u0418\u0437 \u0447\u0435\u0433\u043e \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043a\u0440\u044b\u0448\u0443 \u0434\u043e\u043c\u0430'), kwargs: {'chat_history': [HumanMessage(content='\u0418\u0437 \u0447\u0435\u0433\u043e \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043a\u0440\u044b\u0448\u0443 \u0434\u043e\u043c\u0430', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u0418\u0437 \u0447\u0435\u0433\u043e \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043a\u0440\u044b\u0448\u0443 \u0434\u043e\u043c\u0430', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0412\u044b\u0431\u043e\u0440 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u0432 \u0434\u043b\u044f \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0430 \u043a\u0440\u044b\u0448\u0438 \u0434\u043e\u043c\u0430 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0443\u0441\u043b\u043e\u0432\u0438\u0439, \u0431\u044e\u0434\u0436\u0435\u0442\u0430, \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u043d\u043e\u0433\u043e \u0441\u0442\u0438\u043b\u044f \u0438 \u043b\u0438\u0447\u043d\u044b\u0445 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0435\u043d\u0438\u0439. \u0412\u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0445 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0434\u043b\u044f \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u043a\u0440\u044b\u0448\u0438:\\n\\n1. <b>\u041c\u0435\u0442\u0430\u043b\u043b</b>:\\n\u2022 \u041e\u0446\u0438\u043d\u043a\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0441\u0442\u0430\u043b\u044c, \u0430\u043b\u044e\u043c\u0438\u043d\u0438\u0439 \u0438\u043b\u0438 \u043c\u0435\u0434\u044c \u2014 \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u044b\u0435 \u0438 \u043f\u0440\u043e\u0447\u043d\u044b\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b, \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u044b\u0435 \u043a \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u0438 \u0438 \u044d\u043a\u0441\u0442\u0440\u0435\u043c\u0430\u043b\u044c\u043d\u044b\u043c \u043f\u043e\u0433\u043e\u0434\u043d\u044b\u043c \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u043c.\\n\u2022 \u041c\u0435\u0442\u0430\u043b\u043b\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043a\u0440\u043e\u0432\u043b\u044f \u043b\u0435\u0433\u043a\u0430\u044f \u0438 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0430 \u0432 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0446\u0432\u0435\u0442\u0430\u0445 \u0438 \u0441\u0442\u0438\u043b\u044f\u0445.\\n\\n2. <b>\u0413\u0438\u0431\u043a\u0430\u044f \u0447\u0435\u0440\u0435\u043f\u0438\u0446\u0430 (\u0431\u0438\u0442\u0443\u043c\u043d\u0430\u044f)</b>:\\n\u2022 \u041f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u043b\u0435\u0433\u043a\u043e\u0441\u0442\u0438 \u043c\u043e\u043d\u0442\u0430\u0436\u0430 \u0438 \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0439 \u0446\u0435\u043d\u0435.\\n\u2022 \u0425\u043e\u0440\u043e\u0448\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f \u0441\u043b\u043e\u0436\u043d\u044b\u0445 \u0444\u043e\u0440\u043c \u043a\u0440\u044b\u0448 \u0438 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u043e\u0442... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000015A9A093EC0>, 'json_data': {'input': [[31274, 9136, 17756, 47295, 18154, 51745, 1482, 18264, 7820, 39103, 12426, 3865, 7952, 12507, 1506]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 09:01:48 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '91'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999985'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_72c1ffb549b02e809d4648163ce21fff'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=WBcdyVRS7QLRV0ShS3rPtgba6hNUDHWW5vyFjo6qcTM-1732698108-1.0.1.1-gHrIqn3D8JfdZE72SttjKtsP7g_BAo_YUTyZQw... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_72c1ffb549b02e809d4648163ce21fff", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:48", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000015A988B8C20>, 'json_data': {'input': [[31274, 9136, 17756, 47295, 18154, 51745, 1482, 18264, 7820, 39103, 12426, 3865, 7952, 12507, 1506]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 09:01:49 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '67', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999985', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_d5f4370ffcbfd2c29552522bf9da0551', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e90ef89b96a2df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_d5f4370ffcbfd2c29552522bf9da0551", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000015A988B8C20>, 'json_data': {'input': [[3391, 33006, 23, 13, 16, 13, 16, 36479, 39103, 30480, 72060, 7975, 40251, 70129, 21204, 69471, 8131, 12648, 64880, 46177, 5173, 3114, 23630, 4898, 16494, 1840, 13, 36479, 69471, 8131, 12648, 6578, 20879, 13999, 21204, 1830, 21204, 7820, 39103, 30480, 5524, 720, 67187, 3114, 17766, 12507, 220, 16, 25, 21, 7740, 14391, 7975, 50506, 11, 7820, 5173, 3114, 23630, 4898, 16494, 482, 7820, 39103, 30480, 5524, 14257, 4898, 3114, 17766, 12507, 69844, 50506, 220, 16, 25, 21, 13, 23227, 3114, 23630, 17165, 1532, 7820, 39103, 30480, 56449, 12648, 720, 16494, 8341, 4929, 14257, 4898, 3114, 17766, 19175, 69844, 50506, 220, 16, 25, 1135, 20440, 21923, 23297, 8164, 56857, 18999, 18868, 74351, 7952, 21956, 7094, 33742, 16742, 7740, 11047, 16331, 16742, 5927, 9706, 4655, 13, 23784, 69471, 8131, 44786, 720, 95565, 12426, 1506, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 09:01:50 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '114', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998523', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '17ms', 'x-request-id': 'req_4eecc2719df0f4a80207d2ebfa284bba', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e90ef90ecaa2df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_4eecc2719df0f4a80207d2ebfa284bba", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000015A988B8C20>, 'json_data': {'input': [[2131, 33006, 23, 13, 22, 13, 17, 23784, 69471, 8131, 44786, 7740, 5173, 3114, 23630, 17165, 10693, 7820, 39103, 12426, 1506, 10693, 89715, 3865, 10693, 1840, 14257, 6735, 22911, 28089, 1506, 70129, 21204, 5927, 6850, 1840, 17394, 2156, 21708, 40842, 12426, 28089, 53671, 720, 13433, 2233, 23446, 9136, 1506, 320, 2233, 13810, 35297, 15088, 220, 23, 13, 20, 8, 5927, 74020, 1532, 12561, 9239, 32985, 21708, 7740, 20879, 49284, 6735, 44938, 13, 35448, 1830, 49284, 6735, 40231, 7740, 12561, 9239, 32985, 1840, 91398, 19175, 720, 59030, 18482, 11, 47353, 6850, 1840, 17394, 40251, 4329, 40842, 12426, 28089, 13433, 7820, 17721, 23446, 9136, 1506, 72060, 7975, 40251, 50819, 23934, 28114, 19916, 9239, 59921, 28241, 10693, 26539, 35111, 6856, 13, 720, 23, 13, 22, 13, 18, 23784, 69471, 8131, 44786, 7820, 39103, 12426, 1506... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 09:01:51 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '106', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998511', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '17ms', 'x-request-id': 'req_10957a6f042854ff194d3d7c7b64f9e1', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e90ef983fe92df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_10957a6f042854ff194d3d7c7b64f9e1", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000015A988B8C20>, 'json_data': {'input': [[19, 33006, 19, 35448, 61432, 140, 102, 31274, 56191, 23227, 20976, 65014, 20976, 140, 244, 56191, 20807, 31274, 86491, 720, 19, 13, 16, 28599, 1830, 2233, 1482, 56008, 20812, 1482, 7952, 12507, 6856, 56449, 13999, 81376, 86630, 14009, 29893, 21204, 18154, 14257, 1830, 49284, 17394, 7094, 5372, 39988, 5927, 14257, 68462, 61498, 94962, 720, 8164, 9239, 98073, 53671, 41291, 30656, 39988, 7952, 92533, 54686, 11, 39479, 67186, 7486, 39988, 5927, 34943, 13337, 48074, 20812, 47273, 5524, 86995, 50693, 6856, 39280, 64880, 720, 51745, 1482, 56008, 44786, 6850, 32330, 7740, 73226, 64292, 20440, 34943, 13337, 48074, 20812, 72119, 67745, 90189, 6578, 8131, 81301, 17165, 10693, 11, 42078, 17394, 5372, 7753, 13999, 7058, 15752, 1532, 7975, 14837, 81301, 17165, 10693, 7740, 81842, 67745, 97991, 6856, 44938, 25190, 117, 748... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 09:01:52 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '84', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998478', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '18ms', 'x-request-id': 'req_c5e8ac5d6dcc93e2f03ee99b2d799b26', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e90ef9eeac52df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_c5e8ac5d6dcc93e2f03ee99b2d799b26", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000015A988B8C20>, 'json_data': {'input': [[4370, 33006, 23, 13, 20, 13, 22, 13, 17, 51418, 7975, 14476, 69775, 13373, 55523, 31443, 20440, 81757, 33793, 3114, 3865, 8131, 1840, 20346, 10298, 16742, 5173, 3114, 23630, 4898, 16742, 7820, 39103, 30480, 56449, 14525, 34943, 13337, 48074, 20812, 6856, 18482, 720, 9136, 31281, 18999, 6578, 11, 12561, 28089, 13404, 5372, 12648, 6578, 5927, 79327, 1532, 220, 21, 13, 17, 20440, 90211, 44786, 29619, 6856, 13, 720, 23, 13, 21, 36479, 24803, 14009, 720, 23, 13, 21, 13, 16, 36479, 24803, 14009, 56449, 14525, 21923, 23297, 8164, 56857, 28089, 18482, 44946, 14476, 9542, 3865, 38098, 79370, 15458, 12415, 7820, 39103, 30480, 7740, 7952, 12507, 1506, 20879, 720, 8164, 2233, 17766, 38822, 39280, 7952, 21956, 7094, 33742, 16742, 11, 11047, 16331, 16742, 5927, 9706, 4655, 7740, 5524, 2156, 25698, 1506, 13, 23784, 22918, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 09:01:54 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '100', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998329', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '20ms', 'x-request-id': 'req_cb08d1f118246c4cb8d6f576058087af', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e90efa59dc02df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_cb08d1f118246c4cb8d6f576058087af", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000015A988B8C20>, 'json_data': {'input': [[6086, 33006, 720, 34604, 13810, 35297, 15088, 220, 1032, 13, 23, 482, 80584, 15088, 80230, 13433, 7820, 7486, 72331, 30436, 17766, 44786, 11047, 20346, 10124, 5927, 7820, 17721, 13433, 2297, 1532, 7952, 12507, 1506, 720, 1032, 13, 20, 81529, 3114, 30656, 2233, 29256, 24803, 9706, 17165, 720, 1032, 13, 20, 13, 16, 81529, 3114, 30656, 2233, 29256, 24803, 9706, 17165, 93129, 73181, 14257, 6735, 22911, 28089, 18482, 5173, 38521, 10298, 12561, 29256, 44155, 13433, 7820, 38722, 12394, 21708, 320, 8164, 24803, 9706, 6856, 5927, 720, 9136, 1506, 14476, 9542, 39988, 21923, 7975, 38438, 53671, 8, 90211, 32985, 5173, 61613, 13337, 4655, 46177, 30889, 47680, 5372, 44065, 14257, 1830, 67124, 3114, 9542, 12394, 10298, 12561, 25262, 35682, 94071, 5927, 2156, 38521, 31203, 720, 6735, 5372, 7740, 28114, 15298, 39103, 23311, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 09:01:55 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '105', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999769', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '2ms', 'x-request-id': 'req_237ebd835e12fb89b9c509f0b455f9c2', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e90efacd9042df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_237ebd835e12fb89b9c509f0b455f9c2", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"You are a project assistant from the consultant side on design and construction projects. If you don't know the answer, say that you don't know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 12:01:55. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n43 \\n \\n8.1.1 \u041a\u0440\u044b\u0448\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u044e\u0442\u0441\u044f \u0441\u043a\u0430\u0442\u043d\u044b\u043c\u0438 \u0438\u043b\u0438 \u043f\u043b\u043e\u0441\u043a\u0438\u043c\u0438. \u041a \u0441\u043a\u0430\u0442\u043d\u044b\u043c \u043e\u0442\u043d\u043e\u0441\u044f\u0442\u0441\u044f \u043a\u0440\u044b\u0448\u0438 \u0441 \\n\u0443\u043a\u043b\u043e\u043d\u043e\u043c 1:6 \u0438 \u0431\u043e\u043b\u0435\u0435, \u043a \u043f\u043b\u043e\u0441\u043a\u0438\u043c - \u043a\u0440\u044b\u0448\u0438 \u0441 \u0443\u043a\u043b\u043e\u043d\u043e\u043c \u043c\u0435\u043d\u0435\u0435 1:6. \u041f\u043b\u043e\u0441\u043a\u0438\u0435 \u043a\u0440\u044b\u0448\u0438 \u0434\u043e\u043b\u0436\u043d\u044b \\n\u0438\u043c\u0435\u0442\u044c \u0443\u043a\u043b\u043e\u043d \u043d\u0435 \u043c\u0435\u043d\u0435\u0435 1:50 \u0434\u043b\u044f \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0435\u043d\u0438\u044f \u0441\u0442\u043e\u043a\u0430 ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:01:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:02:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 09:02:05 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '8760'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '788200'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '884ms'), ('x-request-id', 'req_1d6acf125c921b24d923bc3d084ae69b'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=euhaESj_GgtpJFgZ1lW7CMz6RwVni7QgPhbzXTi9hlI-1732698125-1.0.1.1-.Hea_kJwsO9WCyHbR4n26pV.vM5v5Or_2IFtcuJ.S_c4VXDHVTHngtF4XFvSwHB8WK7uPlEvhGVpoWmTTNIXVQ; path=/; expires=Wed, 27... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:02:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_1d6acf125c921b24d923bc3d084ae69b", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:02:06", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:02:06", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0412\u044b\u0431\u043e\u0440 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u0432 \u0434\u043b\u044f \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0430 \u043a\u0440\u044b\u0448\u0438 \u0434\u043e\u043c\u0430 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0444\u0430\u043a\u0442\u043e\u0440\u043e\u0432, \u0442\u0430\u043a\u0438\u0445 \u043a\u0430\u043a \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f, \u0431\u044e\u0434\u0436\u0435\u0442, \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c \u0438 \u043b\u0438\u0447\u043d\u044b\u0435 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0435\u043d\u0438\u044f. \u0412\u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0445 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u0432 \u0434\u043b\u044f \u043a\u0440\u043e\u0432\u043b\u0438:\\n\\n1. <b>\u041c\u0435\u0442\u0430\u043b\u043b</b>:\\n\u2022 \u041e\u0446\u0438\u043d\u043a\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0441\u0442\u0430\u043b\u044c, \u0430\u043b\u044e\u043c\u0438\u043d\u0438\u0439 \u0438\u043b\u0438 \u043c\u0435\u0434\u044c.\\n\u2022 \u0414\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u044b\u0435 \u0438 \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u044b\u0435 \u043a \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u0438 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b.\\n\u2022 \u041f\u043e\u0434\u0445\u043e\u0434\u044f\u0442 \u0434\u043b\u044f \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0443\u0441\u043b\u043e\u0432\u0438\u0439 \u0438 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u044e\u0442 \u0445\u043e\u0440\u043e\u0448\u0443\u044e \u0437\u0430\u0449\u0438\u0442\u0443 \u043e\u0442 \u043e\u0433\u043d\u044f \u0438 \u0432\u0435\u0442\u0440\u0430.\\n\\n2. <b>\u0413\u0438\u0431\u043a\u0430\u044f \u0447\u0435\u0440\u0435\u043f\u0438\u0446\u0430 (\u0431\u0438\u0442\u0443\u043c\u043d\u0430\u044f)</b>:\\n\u2022 \u041f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u0430 \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0439 \u0446\u0435\u043d\u0435 \u0438 \u043f\u0440\u043e\u0441\u0442\u043e\u0442\u0435 \u043c\u043e\u043d\u0442\u0430\u0436\u0430.\\n\u2022 \u0425\u043e\u0440\u043e\u0448\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f \u0441\u043b\u043e\u0436\u043d\u044b\u0445 \u0444\u043e\u0440\u043c \u043a\u0440\u044b\u0448 \u0438 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u043e\u0442\u043b\u0438\u0447\u043d\u0443\u044e \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044e.\\n\\n3. <b>\u041a\u0435\u0440\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u0438\u043b\u0438 \u0431\u0435\u0442\u043e\u043d\u043d\u0430\u044f \u0447\u0435\u0440\u0435\u043f\u0438\u0446\u0430</b>:\\n\u2022 \u041e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u0432\u044b\u0441\u043e\u043a\u0443\u044e \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044e \u0438 \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u044c.\\n\u2022 \u041f\u0440\u0438\u0434\u0430\u0435\u0442 \u043a\u0440\u044b\u0448\u0435 \u0442\u0440\u0430\u0434\u0438\u0446\u0438\u043e\u043d\u043d\u044b\u0439 \u0438 \u044d\u0441\u0442\u0435\u0442\u0438\u0447\u043d\u044b\u0439 \u0432\u0438\u0434.\\n\u2022 \u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u043d\u0430\u0434\u0435\u0436\u043d\u043e\u0439 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u0438\u0437-\u0437\u0430 \u0431\u043e\u043b\u044c\u0448\u043e\u0433\u043e \u0432\u0435\u0441\u0430.\\n\\n4. <b>\u0414\u0435\u0440\u0435\u0432\u044f\u043d\u043d\u0430\u044f \u0447\u0435\u0440\u0435\u043f\u0438\u0446\u0430 \u0438\u043b\u0438 \u0433\u043e\u043d\u0442\u044b</b>:\\n\u2022 \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0442\u0440\u0430\u0434\u0438\u0446\u0438\u043e\u043d\u043d\u043e\u0433\u043e \u0438\u043b\u0438 \u0434\u0435\u0440\u0435\u0432\u0435\u043d\u0441\u043a\u043e\u0433\u043e \u0441\u0442\u0438\u043b\u044f.\\n\u2022 \u0422\u0440\u0435\u0431\u0443\u0435\u0442 \u0440\u0435\u0433\u0443\u043b\u044f\u0440\u043d\u043e\u0433\u043e \u0443\u0445\u043e\u0434\u0430 \u0438 \u0437\u0430\u0449\u0438\u0442\u044b... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:02:06", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:02:06", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:02:07", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='b3ecebbf-5541-429d-a773-0260b85f587b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:02:07", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:16", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 12:03:18", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 12:03:18", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 12:03:18", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 12:03:38", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:38", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:38", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:39", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:39", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:39", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:39", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:39", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: en", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:39", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:39", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:39", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x000001DB8EB4B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 9, 3, 38, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2314, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193530), <telegram.ext._callbackcontext.CallbackContext object at 0x000001DBB413CDE0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:39", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x000001DBB3FF79A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:40", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:40", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:41", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:42", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:42", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:42", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:42", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x000001DB8EB4B7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), id='1051116658724835275', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 9, 3, 40, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2315, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations'),)... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:42", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x000001DBB2E2B8A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:42", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:42", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:42", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x000001DBB418EBD0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:42", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:42", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x000001DBB418EBD0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:42", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:42", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:42", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:42", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:42", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:42", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:42", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:42", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:42", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:49", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:49", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:49", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:49", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u043a\u0430\u043a\u043e\u0432\u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:49", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x000001DB8EB4B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 9, 3, 49, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2317, supergroup_chat_created=False, text='\u043a\u0430\u043a\u043e\u0432\u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430'), update_id=881193532), <telegram.ext._callbackcontext.CallbackContext object at 0x000001DBB413C670>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:49", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x000001DBB42089A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:49", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='a913d770-fb05-45a4-a295-00f100c92b09' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:49", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='a913d770-fb05-45a4-a295-00f100c92b09'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:49", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:49", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x000001DBB418EBD0>, '\u043a\u0430\u043a\u043e\u0432\u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430'), kwargs: {'chat_history': [HumanMessage(content='\u043a\u0430\u043a\u043e\u0432\u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u0418\u0437 \u0447\u0435\u0433\u043e \u043f\u043e\u0441\u0442\u0440\u043e\u0438\u0442\u044c \u043a\u0440\u044b\u0448\u0443 \u0434\u043e\u043c\u0430', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0412\u044b\u0431\u043e\u0440 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u0432 \u0434\u043b\u044f \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0430 \u043a\u0440\u044b\u0448\u0438 \u0434\u043e\u043c\u0430 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0444\u0430\u043a\u0442\u043e\u0440\u043e\u0432, \u0442\u0430\u043a\u0438\u0445 \u043a\u0430\u043a \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f, \u0431\u044e\u0434\u0436\u0435\u0442, \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u043d\u044b\u0439 \u0441\u0442\u0438\u043b\u044c \u0438 \u043b\u0438\u0447\u043d\u044b\u0435 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0435\u043d\u0438\u044f. \u0412\u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b\u0445 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u0432 \u0434\u043b\u044f \u043a\u0440\u043e\u0432\u043b\u0438:\\n\\n1. <b>\u041c\u0435\u0442\u0430\u043b\u043b</b>:\\n\u2022 \u041e\u0446\u0438\u043d\u043a\u043e\u0432\u0430\u043d\u043d\u0430\u044f \u0441\u0442\u0430\u043b\u044c, \u0430\u043b\u044e\u043c\u0438\u043d\u0438\u0439 \u0438\u043b\u0438 \u043c\u0435\u0434\u044c.\\n\u2022 \u0414\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u044b\u0435 \u0438 \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u044b\u0435 \u043a \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u0438 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b.\\n\u2022 \u041f\u043e\u0434\u0445\u043e\u0434\u044f\u0442 \u0434\u043b\u044f \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0443\u0441\u043b\u043e\u0432\u0438\u0439 \u0438 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u044e\u0442 \u0445\u043e\u0440\u043e\u0448\u0443\u044e \u0437\u0430\u0449\u0438\u0442\u0443 \u043e\u0442 \u043e\u0433\u043d\u044f \u0438 \u0432\u0435\u0442\u0440\u0430.\\n\\n2. <b>\u0413\u0438\u0431\u043a\u0430\u044f \u0447\u0435\u0440\u0435\u043f\u0438\u0446\u0430 (\u0431\u0438\u0442\u0443\u043c\u043d\u0430\u044f)</b>:\\n\u2022 \u041f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u0430 \u0431\u043b\u0430\u0433\u043e\u0434\u0430\u0440\u044f \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0439 \u0446\u0435\u043d\u0435 \u0438 \u043f\u0440\u043e\u0441\u0442\u043e\u0442\u0435 \u043c\u043e\u043d\u0442\u0430\u0436\u0430.\\n\u2022 \u0425\u043e\u0440\u043e\u0448\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f \u0441\u043b\u043e\u0436\u043d\u044b\u0445 \u0444\u043e\u0440\u043c \u043a\u0440\u044b\u0448 \u0438 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u043e\u0442\u043b\u0438\u0447\u043d\u0443\u044e \u0433\u0438\u0434\u0440\u043e\u0438\u0437... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001DBB423F920>, 'json_data': {'input': [[4898, 16248, 6856, 1482, 14257, 77911, 20812, 1482, 29619, 6856, 5927, 40842, 5591, 16331, 1532, 58317, 64292, 22885, 7952, 12507, 1506]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 09:03:52 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '105'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999979'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_a0c48131eade99dd9663b9941764ee43'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=P.ZB8dpV6zsIDBNQA5Gg4WKw51aoIPioow6mSYweQos-1732698232-1.0.1.1-_qluRam_EttK2V9tQu0lvdE7PLMxJyKXASmGW... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_a0c48131eade99dd9663b9941764ee43", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:52", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001DBB2A38C20>, 'json_data': {'input': [[4898, 16248, 6856, 1482, 14257, 77911, 20812, 1482, 29619, 6856, 5927, 40842, 5591, 16331, 1532, 58317, 64292, 22885, 7952, 12507, 1506]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 09:03:54 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '199', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999979', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_0ebe1981621047bcf291b402e69ec2b4', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e90f2986d349185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_0ebe1981621047bcf291b402e69ec2b4", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001DBB2A38C20>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 19, 720, 2297, 44075, 20812, 7740, 5524, 44075, 20812, 14257, 31101, 1506, 11, 34943, 13337, 48074, 20812, 72119, 67745, 220, 18600, 15298, 12507, 5372, 7094, 56860, 6578, 220, 18034, 78746, 6578, 1389, 41291, 41873, 49899, 9542, 12394, 21708, 2355, 6578, 8131, 7753, 1840, 16331, 6856, 20440, 23934, 15752, 13337, 6856, 62776, 5173, 15088, 39103, 23311, 12415, 29619, 6856, 8, 7740, 90226, 19039, 44065, 18600, 13404, 17165, 1532, 5173, 29256, 23680, 39280, 13373, 6850, 47295, 720, 10124, 39103, 9136, 15752, 11, 7820, 19619, 26503, 7740, 11047, 13, 7094, 13, 19175, 5524, 91353, 68271, 5927, 35387, 77628, 1840, 10298, 58317, 48262, 4898, 25262, 21708, 13373, 29619, 13, 720, 256, 220, 19, 13, 20, 23784, 76401, 86610, 18999, 10693, 34943, 5524, 44075, 215... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 09:03:57 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '145', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998580', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '17ms', 'x-request-id': 'req_a015b8016b7299403196f80ff2406994', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e90f2a5bdd99185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_a015b8016b7299403196f80ff2406994", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001DBB2A38C20>, 'json_data': {'input': [[12, 58317, 64292, 63233, 11122, 7094, 14332, 12415, 5524, 41176, 3114, 12507, 7820, 5591, 17721, 23311, 2233, 14391, 7975, 50506, 220, 3443, 11, 48446, 64569, 6856, 7740, 7952, 23630, 95570, 6856, 1482, 12, 89554, 5591, 3114, 15298, 60990, 44786, 14257, 6148, 2233, 50436, 7094, 62491, 198, 2297, 21599, 6735, 11001, 112, 16742, 11, 7820, 19479, 13337, 1532, 8131, 24803, 5524, 41176, 3114, 12507, 11562, 37277, 14391, 7975, 50506, 220, 3101, 280, 12, 11047, 1532, 8131, 24803, 11, 48446, 64569, 6856, 7740, 7952, 23630, 95570, 6856, 1482, 12, 89554, 5591, 3114, 15298, 60990, 44786, 14257, 6148, 2233, 50436, 7094, 62491, 34943, 5524, 10589, 5372, 16742, 6850, 32985, 18226, 13810, 16494, 1482, 20879, 41176, 31443, 198, 6578, 37277, 280, 12, 11122, 7094, 14332, 12415, 11, 21923, 9239, 37013, 6856, 28241, 10693, 6882... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:59", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 09:03:59 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '136', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998262', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '20ms', 'x-request-id': 'req_9a8a1f405b74c21157ac27360d738850', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e90f2b1ba629185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:59", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_9a8a1f405b74c21157ac27360d738850", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:59", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001DBB2A38C20>, 'json_data': {'input': [[806, 13, 972, 35889, 1506, 89666, 51736, 220, 1399, 12, 2031, 11562, 28114, 16494, 8341, 22911, 11122, 7094, 39280, 93129, 73181, 57925, 44155, 6578, 8131, 2233, 28089, 18482, 18154, 53419, 2156, 72952, 198, 8164, 7975, 28089, 38438, 2156, 72952, 7820, 35682, 3865, 11, 39479, 6578, 86610, 32062, 72952, 5927, 7820, 6856, 91883, 10693, 320, 2156, 50693, 17461, 12426, 16742, 51548, 9706, 1532, 10589, 5927, 11122, 10298, 3114, 1532, 20440, 39479, 6578, 86610, 18999, 198, 8164, 7975, 28089, 38438, 39900, 7820, 35682, 1506, 8, 72664, 7975, 1482, 11122, 7094, 39280, 46177, 5927, 6850, 1840, 12426, 1506, 10693, 13373, 20346, 17394, 44786, 18868, 5372, 11122, 7094, 39280, 13, 39903, 14009, 29619, 28089, 1506, 93129, 73181, 198, 13810, 8164, 33295, 18482, 5927, 9706, 3865, 5524, 5173, 87483, 8131, 44100, 64880, 7820, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:03:59", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:04:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 09:04:00 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '182', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998405', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '19ms', 'x-request-id': 'req_cc379acadab0a6357e582cd026d887d1', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e90f2ba2d4c9185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:04:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_cc379acadab0a6357e582cd026d887d1", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:04:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001DBB2A38C20>, 'json_data': {'input': [[8164, 44075, 2156, 19188, 31281, 5372, 44786, 20440, 12561, 21956, 28089, 39280, 53419, 39988, 5524, 10298, 4929, 1840, 320, 14082, 34694, 30656, 4655, 42078, 7094, 28089, 48262, 3865, 39127, 39900, 58317, 1840, 11320, 14476, 39900, 720, 51745, 1482, 56008, 94071, 1237, 33006, 12, 58317, 64292, 63233, 7952, 12507, 6856, 5524, 51548, 34082, 35034, 12507, 49103, 38657, 21708, 19175, 14391, 7975, 50506, 86995, 98285, 11, 92175, 61390, 14476, 67745, 23934, 19175, 66144, 17461, 17165, 10693, 91394, 15088, 6856, 720, 7, 79862, 14391, 7975, 50506, 7952, 1532, 21204, 23311, 705, 89666, 35723, 23934, 38153, 63233, 57925, 2156, 19188, 31281, 5372, 20440, 12561, 21956, 28089, 39280, 53419, 39988, 5524, 10298, 4929, 1840, 11, 720, 16494, 1532, 8341, 21923, 14476, 34148, 18868, 5372, 3865, 320, 55257, 50306, 18868, 79686... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:04:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:04:01", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 09:04:01 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '75', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999195', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '9ms', 'x-request-id': 'req_aab4ce36e46baf02b69267acc63244a8', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e90f2c358349185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:04:01", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_aab4ce36e46baf02b69267acc63244a8", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:04:01", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001DBB2A38C20>, 'json_data': {'input': [[1830, 20346, 10124, 29256, 24803, 9706, 6856, 5524, 17394, 8131, 4655, 6578, 5927, 35387, 3865, 10693, 12507, 37405, 62315, 13404, 84198, 18600, 10298, 97341, 44786, 54204, 13, 33006, 16604, 25756, 9239, 41873, 97341, 39127, 44786, 5173, 15088, 5591, 17721, 23311, 2233, 44786, 93099, 1506, 10693, 20879, 29256, 62776, 7952, 29256, 44155, 13433, 50819, 12561, 15088, 80230, 13433, 720, 1830, 20346, 10124, 29256, 24803, 9706, 6856, 92457, 14257, 4898, 39865, 14525, 13, 33006, 720, 415, 220, 21, 13, 19, 35448, 1830, 29256, 56008, 44065, 37405, 10124, 9239, 4655, 7740, 21022, 2233, 6578, 8131, 3865, 22911, 2355, 21, 13, 19, 13, 16, 23784, 76401, 86610, 18999, 10693, 5524, 21477, 59030, 9882, 10298, 5173, 4655, 11320, 25756, 9239, 12182, 6148, 67745, 96573, 7753, 1840, 16331, 6856, 320, 42047, 50506, 482, 25756, 92... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:04:01", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:04:02", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 09:04:02 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '220', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998535', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '17ms', 'x-request-id': 'req_d022fe3f25aff04c9253b85c06ed7165', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e90f2c9eae39185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:04:02", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_d022fe3f25aff04c9253b85c06ed7165", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:04:02", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 12:04:02. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u041f 29.13330.2011 \\n \\n4 \\n\u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u0443\u0445\u043e\u0434\u0430, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445  \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u044f\u043c  \u0444\u0438\u0440\u043c \u2013 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439  \\n\u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u0432 \u0434\u043b\u044f \u0438\u0437\u0433\u043e\u0442\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u043e\u043a\u0440\u044b\u0442\u0438\u0439 \u043f\u043e\u043b\u043e\u0432) \u0438 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0435 \u0440\u0435\u0434\u043a\u0438\u0435 \u043f\u043e\u043f\u0430\u0434\u0430\u043d\u0438\u044f \u043d\u0430 \u043d\u0435\u0433\u043e \\n\u0431\u0440\u044b\u0437\u0433, \u043a\u0430\u043f\u0435\u043b\u044c \u0438 \u0442.\u0434. \u043d\u0435... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:04:02", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:04:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 09:04:18 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '12176'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '787125'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '965ms'), ('x-request-id', 'req_d991b0c4b1f5f0c07505516b06da1008'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=V29taiDPPc7LUu2WuZF6Pr2OjljC8NZ7WiYRJ_2oMSU-1732698258-1.0.1.1-4fDrDA8wYQ.xR1U4ATmUsDl11Vjz7XlYxvYQKpUQM6QdbXcxGMA4SGE7ArFWLyFJ6sZGj2ohbFnJ25_tq79sbg; path=/; expires=Wed, 2... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:04:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_d991b0c4b1f5f0c07505516b06da1008", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:04:18", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:04:18", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0423\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0442\u0449\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0430, \u0447\u0442\u043e\u0431\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u044c, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044e \u0438 \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044e. \u0412\u043e\u0442 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u044d\u0442\u0430\u043f\u044b \u0438 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435:\\n\\n1. <b>\u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u044f</b>:\\n\u2022 \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0440\u0430\u0441\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u0441\u043b\u043e\u044f \u0438 \u0432\u044b\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u043d\u0438\u0435 \u0433\u0440\u0443\u043d\u0442\u0430.\\n\u2022 \u0423\u043f\u043b\u043e\u0442\u043d\u0435\u043d\u0438\u0435 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0441\u0430\u0434\u043e\u043a.\\n\\n2. <b>\u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f</b>:\\n\u2022 \u0423\u043a\u043b\u0430\u0434\u043a\u0430 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u043e\u0433\u043e \u0441\u043b\u043e\u044f \u0434\u043b\u044f \u0437\u0430\u0449\u0438\u0442\u044b \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u043e\u0439 \u0432\u043b\u0430\u0433\u0438. \u042d\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0440\u0443\u043b\u043e\u043d\u043d\u044b\u0439 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a \u0440\u0443\u0431\u0435\u0440\u043e\u0438\u0434, \u0438\u043b\u0438 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043c\u0435\u043c\u0431\u0440\u0430\u043d\u044b.\\n\\n3. <b>\u0422\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f</b>:\\n\u2022 \u0423\u043a\u043b\u0430\u0434\u043a\u0430 \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u044b\u0445 \u043f\u043b\u0438\u0442 (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0438\u0437 \u044d\u043a\u0441\u0442\u0440\u0443\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043f\u0435\u043d\u043e\u043f\u043e\u043b\u0438\u0441\u0442\u0438\u0440\u043e\u043b\u0430) \u043f\u043e\u0432\u0435\u0440\u0445 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u0438 \u0434\u043b\u044f \u0441\u043d\u0438\u0436\u0435\u043d\u0438\u044f \u0442\u0435\u043f\u043b\u043e\u0432\u044b\u0445 \u043f\u043e\u0442\u0435\u0440\u044c.\\n\\n4. <b>\u0411\u0435\u0442\u043e\u043d\u043d\u0430\u044f \u0441\u0442\u044f\u0436\u043a\u0430</b>:\\n\u2022 \u0417\u0430\u043b\u0438\u0432\u043a\u0430 \u0431\u0435\u0442\u043e\u043d\u043d\u043e\u0439 \u0441\u0442\u044f\u0436\u043a\u0438 \u043f\u043e \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u0438 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0440\u043e\u0432\u043d\u043e\u0439 \u0438 \u043f\u0440\u043e\u0447\u043d\u043e\u0439 \u043e\u0441\u043d\u043e\u0432\u044b. \u0414\u043b\u044f \u043f\u043e\u0432\u044b\u0448\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0447\u043d\u043e\u0441\u0442\u0438 \u0441\u0442\u044f\u0436\u043a\u0430 \u043c\u043e\u0436\u0435\u0442 \u0430\u0440\u043c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0441\u0435\u0442\u043a\u043e\u0439.\\n\\n5. <b>\u0427\u0438\u0441\u0442\u043e\u0432\u043e\u0435 \u043f\u043e\u043a\u0440\u044b\u0442\u0438\u0435</b>:\\n\u2022 \u0423\u043a\u043b\u0430\u0434\u043a\u0430 \u0447\u0438\u0441\u0442\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u043a\u0440\u044b\u0442\u0438\u044f \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u0434\u0432\u0430\u043b... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:04:18", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:04:19", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:04:19", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='a913d770-fb05-45a4-a295-00f100c92b09'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:04:19", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:05:19", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:05:19", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:05:19", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:05:19", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='get_file:file_1'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:05:19", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: send_file with args: (<handlers.BotHandlers object at 0x000001DB8EB4B7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='get_file:file_1', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), id='1051116660281764141', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 9, 4, 19, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=20, offset=195, type=<MessageEntityType.BOLD>), MessageEntity(length=13, offset=326, type=<MessageEntityType.BOLD>), MessageEntity(length=13, offset=504, type=<MessageEntityType.BOLD>), MessageEntity(length=15, offset=656, type=<MessageEntityType.BOLD>), MessageEntity(length=17, offset=816, type=<MessageEntityType.BOLD>), MessageEntity(length=28, offset=1017, type=<MessageEntityType.BOLD>))... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:05:19", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: send_file with result: <coroutine object BotHandlers.send_file at 0x000001DBB2E2B8A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:05:22", "name": "handlers", "levelname": "DEBUG", "message": "Initiated async task to send file '\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf' to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:05:22", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:05:28", "name": "handlers", "levelname": "ERROR", "message": "Error sending file '\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf' to user_id=244732168: Timed out", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 101, in handle_async_request\n    return await self._connection.handle_async_request(request)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 143, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 113, in handle_async_request\n    ) = await self._receive_response_headers(**kwargs)\n        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 186, in _receive_response_headers\n    event = await self._receive_event(timeout=timeout)\n            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\http11.py\", line 224, in _receive_event\n    data = await self._network_stream.read(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 32, in read\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ReadTimeout\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\handlers.py\", line 592, in send_document_async\n    await query.message.reply_document(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_message.py\", line 2359, in reply_document\n    return await self.get_bot().send_document(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 2652, in send_document\n    return await super().send_document(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 1712, in send_document\n    return await self._send_message(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 607, in _send_message\n    result = await super()._send_message(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 729, in _send_message\n    result = await self._post(\n             ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 310, in do_request\n    raise TimedOut from err\ntelegram.error.TimedOut: Timed out", "taskName": "Task-37"}
{"asctime": "2024-11-27 12:05:32", "name": "handlers", "levelname": "DEBUG", "message": "Sent file error message to user_id=244732168", "taskName": "Task-37"}
{"asctime": "2024-11-27 12:06:53", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 12:06:55", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 12:06:55", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 12:06:55", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 12:07:08", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:08", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:08", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:09", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:09", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:09", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:09", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:09", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: en", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:09", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:09", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:09", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x000002C9853CB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 9, 7, 7, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2321, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193534), <telegram.ext._callbackcontext.CallbackContext object at 0x000002C9AA9ECDE0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:09", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x000002C987890CA0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:10", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:10", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:12", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:12", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:12", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:12", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:12", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x000002C9853CB7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), id='1051116661510335592', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 9, 7, 10, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2322, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations'),)... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:12", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x000002C9AA6A78A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:12", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:12", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:12", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x000002C9AAAC64B0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:12", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:12", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x000002C9AAAC64B0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:12", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:12", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:12", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:12", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:12", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:12", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:12", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:13", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:13", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:23", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:23", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:23", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:23", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u043a\u0430\u043a\u043e\u0432\u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:23", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x000002C9853CB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 9, 7, 23, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2324, supergroup_chat_created=False, text='\u043a\u0430\u043a\u043e\u0432\u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430'), update_id=881193536), <telegram.ext._callbackcontext.CallbackContext object at 0x000002C9AA9ED470>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:23", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x000002C9AAAB89A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:23", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='d3c8c11e-0de0-4e41-8cd8-ccf3b4b8d334' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:23", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='d3c8c11e-0de0-4e41-8cd8-ccf3b4b8d334'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:23", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:23", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x000002C9AAAC64B0>, '\u043a\u0430\u043a\u043e\u0432\u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430'), kwargs: {'chat_history': [HumanMessage(content='\u043a\u0430\u043a\u043e\u0432\u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043a\u0430\u043a\u043e\u0432\u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0423\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430 \u0442\u0440\u0435\u0431\u0443\u0435\u0442 \u0442\u0449\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0430, \u0447\u0442\u043e\u0431\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u044c, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044e \u0438 \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044e. \u0412\u043e\u0442 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u044d\u0442\u0430\u043f\u044b \u0438 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435:\\n\\n1. <b>\u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u044f</b>:\\n\u2022 \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0440\u0430\u0441\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u0441\u043b\u043e\u044f \u0438 \u0432\u044b\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u043d\u0438\u0435 \u0433\u0440\u0443\u043d\u0442\u0430.\\n\u2022 \u0423\u043f\u043b\u043e\u0442\u043d\u0435\u043d\u0438\u0435 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0441\u0430\u0434\u043e\u043a.\\n\\n2. <b>\u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f</b>:\\n\u2022 \u0423\u043a\u043b\u0430\u0434\u043a\u0430 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u043e\u0433\u043e \u0441\u043b\u043e\u044f \u0434\u043b\u044f \u0437\u0430\u0449\u0438\u0442\u044b \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u043e\u0439 \u0432\u043b\u0430\u0433\u0438. \u042d\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0440\u0443\u043b\u043e\u043d\u043d\u044b\u0439 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a \u0440\u0443\u0431\u0435\u0440\u043e\u0438\u0434, \u0438\u043b\u0438 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0435 \u043c\u0435\u043c\u0431\u0440\u0430\u043d\u044b.\\n\\n3. <b>\u0422\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f</b>:\\n\u2022 \u0423\u043a\u043b\u0430\u0434\u043a\u0430 \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:23", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002C9AAAEEFC0>, 'json_data': {'input': [[4898, 16248, 6856, 1482, 14257, 77911, 20812, 1482, 29619, 6856, 5927, 40842, 5591, 16331, 1532, 58317, 64292, 22885, 7952, 12507, 1506]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:23", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:24", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 09:07:24 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '46'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999979'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_8aa7ce310ce4234b34d72b78f467b7bd'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=OZu_e3dNux97uFPJwZwu3DjxIntJOTV_gR57pxGLwG4-1732698444-1.0.1.1-0qnOSZ6PsBDsQDNw1JmHA.HINPc6eQyaxeMG.P... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:24", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_8aa7ce310ce4234b34d72b78f467b7bd", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:24", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:24", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002C9A92D8C20>, 'json_data': {'input': [[4898, 16248, 6856, 1482, 14257, 77911, 20812, 1482, 29619, 6856, 5927, 40842, 5591, 16331, 1532, 58317, 64292, 22885, 7952, 12507, 1506]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:24", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:25", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 09:07:25 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '113', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999979', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_84663afff57cf91f3514f7e811bfae01', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e90f7bf1ce62df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:25", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_84663afff57cf91f3514f7e811bfae01", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:25", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002C9A92D8C20>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 19, 720, 2297, 44075, 20812, 7740, 5524, 44075, 20812, 14257, 31101, 1506, 11, 34943, 13337, 48074, 20812, 72119, 67745, 220, 18600, 15298, 12507, 5372, 7094, 56860, 6578, 220, 18034, 78746, 6578, 1389, 41291, 41873, 49899, 9542, 12394, 21708, 2355, 6578, 8131, 7753, 1840, 16331, 6856, 20440, 23934, 15752, 13337, 6856, 62776, 5173, 15088, 39103, 23311, 12415, 29619, 6856, 8, 7740, 90226, 19039, 44065, 18600, 13404, 17165, 1532, 5173, 29256, 23680, 39280, 13373, 6850, 47295, 720, 10124, 39103, 9136, 15752, 11, 7820, 19619, 26503, 7740, 11047, 13, 7094, 13, 19175, 5524, 91353, 68271, 5927, 35387, 77628, 1840, 10298, 58317, 48262, 4898, 25262, 21708, 13373, 29619, 13, 720, 256, 220, 19, 13, 20, 23784, 76401, 86610, 18999, 10693, 34943, 5524, 44075, 215... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:25", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:26", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 09:07:26 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '102', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998581', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '17ms', 'x-request-id': 'req_4371a824e81793a8a90944f6d1572126', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e90f7c63f8b2df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:26", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_4371a824e81793a8a90944f6d1572126", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:26", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002C9A92D8C20>, 'json_data': {'input': [[12, 58317, 64292, 63233, 11122, 7094, 14332, 12415, 5524, 41176, 3114, 12507, 7820, 5591, 17721, 23311, 2233, 14391, 7975, 50506, 220, 3443, 11, 48446, 64569, 6856, 7740, 7952, 23630, 95570, 6856, 1482, 12, 89554, 5591, 3114, 15298, 60990, 44786, 14257, 6148, 2233, 50436, 7094, 62491, 198, 2297, 21599, 6735, 11001, 112, 16742, 11, 7820, 19479, 13337, 1532, 8131, 24803, 5524, 41176, 3114, 12507, 11562, 37277, 14391, 7975, 50506, 220, 3101, 280, 12, 11047, 1532, 8131, 24803, 11, 48446, 64569, 6856, 7740, 7952, 23630, 95570, 6856, 1482, 12, 89554, 5591, 3114, 15298, 60990, 44786, 14257, 6148, 2233, 50436, 7094, 62491, 34943, 5524, 10589, 5372, 16742, 6850, 32985, 18226, 13810, 16494, 1482, 20879, 41176, 31443, 198, 6578, 37277, 280, 12, 11122, 7094, 14332, 12415, 11, 21923, 9239, 37013, 6856, 28241, 10693, 6882... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:26", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:27", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 09:07:27 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '159', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998262', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '20ms', 'x-request-id': 'req_9fc8045ebaead80158716bc48d9e17a5', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e90f7c8a86b2df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:27", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_9fc8045ebaead80158716bc48d9e17a5", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:27", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002C9A92D8C20>, 'json_data': {'input': [[806, 13, 972, 35889, 1506, 89666, 51736, 220, 1399, 12, 2031, 11562, 28114, 16494, 8341, 22911, 11122, 7094, 39280, 93129, 73181, 57925, 44155, 6578, 8131, 2233, 28089, 18482, 18154, 53419, 2156, 72952, 198, 8164, 7975, 28089, 38438, 2156, 72952, 7820, 35682, 3865, 11, 39479, 6578, 86610, 32062, 72952, 5927, 7820, 6856, 91883, 10693, 320, 2156, 50693, 17461, 12426, 16742, 51548, 9706, 1532, 10589, 5927, 11122, 10298, 3114, 1532, 20440, 39479, 6578, 86610, 18999, 198, 8164, 7975, 28089, 38438, 39900, 7820, 35682, 1506, 8, 72664, 7975, 1482, 11122, 7094, 39280, 46177, 5927, 6850, 1840, 12426, 1506, 10693, 13373, 20346, 17394, 44786, 18868, 5372, 11122, 7094, 39280, 13, 39903, 14009, 29619, 28089, 1506, 93129, 73181, 198, 13810, 8164, 33295, 18482, 5927, 9706, 3865, 5524, 5173, 87483, 8131, 44100, 64880, 7820, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:27", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:28", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 09:07:28 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '101', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998405', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '19ms', 'x-request-id': 'req_03167e1e5d4e20d49120097a412c3744', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e90f7ce2a542df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:28", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_03167e1e5d4e20d49120097a412c3744", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:28", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002C9A92D8C20>, 'json_data': {'input': [[8164, 44075, 2156, 19188, 31281, 5372, 44786, 20440, 12561, 21956, 28089, 39280, 53419, 39988, 5524, 10298, 4929, 1840, 320, 14082, 34694, 30656, 4655, 42078, 7094, 28089, 48262, 3865, 39127, 39900, 58317, 1840, 11320, 14476, 39900, 720, 51745, 1482, 56008, 94071, 1237, 33006, 12, 58317, 64292, 63233, 7952, 12507, 6856, 5524, 51548, 34082, 35034, 12507, 49103, 38657, 21708, 19175, 14391, 7975, 50506, 86995, 98285, 11, 92175, 61390, 14476, 67745, 23934, 19175, 66144, 17461, 17165, 10693, 91394, 15088, 6856, 720, 7, 79862, 14391, 7975, 50506, 7952, 1532, 21204, 23311, 705, 89666, 35723, 23934, 38153, 63233, 57925, 2156, 19188, 31281, 5372, 20440, 12561, 21956, 28089, 39280, 53419, 39988, 5524, 10298, 4929, 1840, 11, 720, 16494, 1532, 8341, 21923, 14476, 34148, 18868, 5372, 3865, 320, 55257, 50306, 18868, 79686... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:28", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:29", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 09:07:29 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '85', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999195', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '9ms', 'x-request-id': 'req_1f9d8c0076ee2f8758f344385b606f5e', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e90f7d56d612df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:29", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_1f9d8c0076ee2f8758f344385b606f5e", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:29", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002C9A92D8C20>, 'json_data': {'input': [[1830, 20346, 10124, 29256, 24803, 9706, 6856, 5524, 17394, 8131, 4655, 6578, 5927, 35387, 3865, 10693, 12507, 37405, 62315, 13404, 84198, 18600, 10298, 97341, 44786, 54204, 13, 33006, 16604, 25756, 9239, 41873, 97341, 39127, 44786, 5173, 15088, 5591, 17721, 23311, 2233, 44786, 93099, 1506, 10693, 20879, 29256, 62776, 7952, 29256, 44155, 13433, 50819, 12561, 15088, 80230, 13433, 720, 1830, 20346, 10124, 29256, 24803, 9706, 6856, 92457, 14257, 4898, 39865, 14525, 13, 33006, 720, 415, 220, 21, 13, 19, 35448, 1830, 29256, 56008, 44065, 37405, 10124, 9239, 4655, 7740, 21022, 2233, 6578, 8131, 3865, 22911, 2355, 21, 13, 19, 13, 16, 23784, 76401, 86610, 18999, 10693, 5524, 21477, 59030, 9882, 10298, 5173, 4655, 11320, 25756, 9239, 12182, 6148, 67745, 96573, 7753, 1840, 16331, 6856, 320, 42047, 50506, 482, 25756, 92... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:29", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:29", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 09:07:29 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '87', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998535', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '17ms', 'x-request-id': 'req_349f97b806a34518a121ab3a2e8912ea', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e90f7db5f872df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:29", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_349f97b806a34518a121ab3a2e8912ea", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:30", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 12:07:29. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u041f 29.13330.2011 \\n \\n4 \\n\u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u0443\u0445\u043e\u0434\u0430, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445  \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u044f\u043c  \u0444\u0438\u0440\u043c \u2013 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439  \\n\u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u0432 \u0434\u043b\u044f \u0438\u0437\u0433\u043e\u0442\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u043e\u043a\u0440\u044b\u0442\u0438\u0439 \u043f\u043e\u043b\u043e\u0432) \u0438 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0435 \u0440\u0435\u0434\u043a\u0438\u0435 \u043f\u043e\u043f\u0430\u0434\u0430\u043d\u0438\u044f \u043d\u0430 \u043d\u0435\u0433\u043e \\n\u0431\u0440\u044b\u0437\u0433, \u043a\u0430\u043f\u0435\u043b\u044c \u0438 \u0442.\u0434. \u043d\u0435... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:30", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:41", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 09:07:41 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '9163'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '786845'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '986ms'), ('x-request-id', 'req_c9339d393cdaf5d89f00f9d56e7594a1'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=rdRlyR3QhPepxsDsIs1mDMgt9PT8qFPOWKBn.i6dVqI-1732698461-1.0.1.1-_a3HzmbNrCC50UPf51Igh41XS5JeQHZdxzYhQGotUj71D5JVZwmg1zV_oYokUrIb4QrK464elboXWKNe_ALpgg; path=/; expires=Wed, 27... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:41", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_c9339d393cdaf5d89f00f9d56e7594a1", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:41", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:41", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0423\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u044d\u0442\u0430\u043f\u043e\u0432 \u0438 \u0441\u043b\u043e\u0435\u0432, \u0447\u0442\u043e\u0431\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u044c, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044e \u0438 \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044e. \u0412\u043e\u0442 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0435:\\n\\n1. <b>\u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u044f</b>:\\n\u2022 \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0440\u0430\u0441\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u0441\u043b\u043e\u044f \u0438 \u0432\u044b\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u043d\u0438\u0435 \u0433\u0440\u0443\u043d\u0442\u0430.\\n\u2022 \u0423\u043f\u043b\u043e\u0442\u043d\u0435\u043d\u0438\u0435 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0441\u0430\u0434\u043e\u043a \u0438 \u043f\u043e\u0432\u044b\u0448\u0435\u043d\u0438\u044f \u043d\u0435\u0441\u0443\u0449\u0435\u0439 \u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u0438.\\n\\n2. <b>\u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f</b>:\\n\u2022 \u0423\u043a\u043b\u0430\u0434\u043a\u0430 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u043e\u0433\u043e \u0441\u043b\u043e\u044f \u0434\u043b\u044f \u0437\u0430\u0449\u0438\u0442\u044b \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u043e\u0439 \u0432\u043b\u0430\u0433\u0438. \u042d\u0442\u043e \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0440\u0443\u043b\u043e\u043d\u043d\u044b\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a \u0440\u0443\u0431\u0435\u0440\u043e\u0438\u0434, \u0438\u043b\u0438 \u0441\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043c\u0435\u043c\u0431\u0440\u0430\u043d\u044b.\\n\u2022 \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u0437\u0430\u0445\u043e\u0434\u0438\u0442\u044c \u043d\u0430 \u0441\u0442\u0435\u043d\u044b \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \"\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u044d\u0444\u0444\u0435\u043a\u0442\u0430\".\\n\\n3. <b>\u0422\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f</b> (\u0435\u0441\u043b\u0438 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f):\\n\u2022 \u0423\u043a\u043b\u0430\u0434\u043a\u0430 \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u044b\u0445 \u043f\u043b\u0438\u0442, \u0442\u0430\u043a\u0438\u0445 \u043a\u0430\u043a \u044d\u043a\u0441\u0442\u0440\u0443\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u043d\u043e\u043f\u043e\u043b\u0438\u0441\u0442\u0438\u0440\u043e\u043b, \u0434\u043b\u044f \u0441\u043d\u0438\u0436\u0435\u043d\u0438\u044f \u0442\u0435\u043f\u043b\u043e\u0432\u044b\u0445 \u043f\u043e\u0442\u0435\u0440\u044c.\\n\u2022 \u0423\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044c \u0440\u0430\u0437\u043c\u0435\u0449\u0430\u0435\u0442\u0441\u044f \u043f\u043e\u0432\u0435\u0440\u0445 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u0438.\\n\\n4. <b>\u0411\u0435\u0442\u043e\u043d\u043d\u0430\u044f \u0441\u0442\u044f\u0436\u043a\u0430</b>:\\n\u2022 \u0417\u0430\u043b\u0438\u0432\u043a\u0430 \u0431\u0435\u0442\u043e\u043d\u043d\u043e\u0439 \u0441\u0442\u044f\u0436\u043a\u0438 \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0440\u043e\u0432\u043d\u043e\u0439 \u0438 \u043f\u0440\u043e\u0447\u043d\u043e\u0439 \u043f\u043e\u0432\u0435\u0440\u0445\u043d\u043e\u0441\u0442\u0438. \u041e\u0431\u044b\u0447\u043d\u043e \u0430\u0440\u043c\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u043c\u0435\u0442\u0430\u043b\u043b\u0438\u0447\u0435\u0441\u043a\u043e\u0439 \u0441\u0435\u0442\u043a\u043e\u0439... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:41", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:41", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:41", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='d3c8c11e-0de0-4e41-8cd8-ccf3b4b8d334'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:07:42", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:12", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 12:08:14", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 12:08:14", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 12:08:14", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 12:08:39", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:39", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:39", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:40", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:40", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:40", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:40", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:40", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: en", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:40", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:40", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:40", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x000001C215338590>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 9, 8, 39, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2326, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193537), <telegram.ext._callbackcontext.CallbackContext object at 0x000001C21544F0E0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:40", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x000001C2722C0CA0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:41", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:41", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:42", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:43", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:43", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:43", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:43", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x000001C215338590>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), id='1051116661138288992', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 9, 8, 41, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2327, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations'),)... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:43", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x000001C2141378A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:43", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:43", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:43", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x000001C21549EBD0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:43", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:43", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x000001C21549EBD0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:43", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:43", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:43", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:43", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:43", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:43", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:43", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:43", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:43", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:50", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:50", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:50", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:50", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u043a\u0430\u043a\u043e\u0432\u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:50", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x000001C215338590>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 9, 8, 50, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2329, supergroup_chat_created=False, text='\u043a\u0430\u043a\u043e\u0432\u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430'), update_id=881193539), <telegram.ext._callbackcontext.CallbackContext object at 0x000001C21544D470>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:50", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x000001C2155189A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:50", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='0686b279-5732-4d91-8647-d8054534a842' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:50", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='0686b279-5732-4d91-8647-d8054534a842'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:50", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:50", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x000001C21549EBD0>, '\u043a\u0430\u043a\u043e\u0432\u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430'), kwargs: {'chat_history': [HumanMessage(content='\u043a\u0430\u043a\u043e\u0432\u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043a\u0430\u043a\u043e\u0432\u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0423\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u044d\u0442\u0430\u043f\u043e\u0432 \u0438 \u0441\u043b\u043e\u0435\u0432, \u0447\u0442\u043e\u0431\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u044c, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044e \u0438 \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044e. \u0412\u043e\u0442 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0449\u0438\u0435:\\n\\n1. <b>\u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u044f</b>:\\n\u2022 \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0440\u0430\u0441\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u0441\u043b\u043e\u044f \u0438 \u0432\u044b\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u043d\u0438\u0435 \u0433\u0440\u0443\u043d\u0442\u0430.\\n\u2022 \u0423\u043f\u043b\u043e\u0442\u043d\u0435\u043d\u0438\u0435 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0441\u0430\u0434\u043e\u043a \u0438 \u043f\u043e\u0432\u044b\u0448\u0435\u043d\u0438\u044f \u043d\u0435\u0441\u0443\u0449\u0435\u0439 \u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u0438.\\n\\n2. <b>\u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f</b>:\\n\u2022 \u0423\u043a\u043b\u0430\u0434\u043a\u0430 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u043e\u0433\u043e \u0441\u043b\u043e\u044f \u0434\u043b\u044f \u0437\u0430\u0449\u0438\u0442\u044b \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u043e\u0439 \u0432\u043b\u0430\u0433\u0438. \u042d\u0442\u043e \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0440\u0443\u043b\u043e\u043d\u043d\u044b\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a \u0440\u0443\u0431\u0435\u0440\u043e\u0438\u0434, \u0438\u043b\u0438 \u0441\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043c\u0435\u043c\u0431\u0440\u0430\u043d\u044b.\\n\u2022 \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u0437\u0430\u0445\u043e\u0434\u0438\u0442\u044c \u043d\u0430... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001C26DCECF40>, 'json_data': {'input': [[4898, 16248, 6856, 1482, 14257, 77911, 20812, 1482, 29619, 6856, 5927, 40842, 5591, 16331, 1532, 58317, 64292, 22885, 7952, 12507, 1506]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 09:08:51 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '112'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999979'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_e6ba09e655714627418bbdd5a662eacd'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=D9M5i25cJptiZwzEps4qSF2_wx2ykxAXyk9RQ8MiO9M-1732698531-1.0.1.1-BqUpl1lsgruuD0AcSU4EDMdLhVAIuXrM0nPSm... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_e6ba09e655714627418bbdd5a662eacd", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:51", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001C213D48C20>, 'json_data': {'input': [[4898, 16248, 6856, 1482, 14257, 77911, 20812, 1482, 29619, 6856, 5927, 40842, 5591, 16331, 1532, 58317, 64292, 22885, 7952, 12507, 1506]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 09:08:52 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '110', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999979', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_413f8fb630ade90b7013831e58843763', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e90f9de3d91ea8a-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_413f8fb630ade90b7013831e58843763", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001C213D48C20>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 19, 720, 2297, 44075, 20812, 7740, 5524, 44075, 20812, 14257, 31101, 1506, 11, 34943, 13337, 48074, 20812, 72119, 67745, 220, 18600, 15298, 12507, 5372, 7094, 56860, 6578, 220, 18034, 78746, 6578, 1389, 41291, 41873, 49899, 9542, 12394, 21708, 2355, 6578, 8131, 7753, 1840, 16331, 6856, 20440, 23934, 15752, 13337, 6856, 62776, 5173, 15088, 39103, 23311, 12415, 29619, 6856, 8, 7740, 90226, 19039, 44065, 18600, 13404, 17165, 1532, 5173, 29256, 23680, 39280, 13373, 6850, 47295, 720, 10124, 39103, 9136, 15752, 11, 7820, 19619, 26503, 7740, 11047, 13, 7094, 13, 19175, 5524, 91353, 68271, 5927, 35387, 77628, 1840, 10298, 58317, 48262, 4898, 25262, 21708, 13373, 29619, 13, 720, 256, 220, 19, 13, 20, 23784, 76401, 86610, 18999, 10693, 34943, 5524, 44075, 215... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 09:08:52 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '135', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998580', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '17ms', 'x-request-id': 'req_e583c66c83acbb3af75bc1c1e31c4157', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e90f9e24cbdea8a-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_e583c66c83acbb3af75bc1c1e31c4157", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001C213D48C20>, 'json_data': {'input': [[12, 58317, 64292, 63233, 11122, 7094, 14332, 12415, 5524, 41176, 3114, 12507, 7820, 5591, 17721, 23311, 2233, 14391, 7975, 50506, 220, 3443, 11, 48446, 64569, 6856, 7740, 7952, 23630, 95570, 6856, 1482, 12, 89554, 5591, 3114, 15298, 60990, 44786, 14257, 6148, 2233, 50436, 7094, 62491, 198, 2297, 21599, 6735, 11001, 112, 16742, 11, 7820, 19479, 13337, 1532, 8131, 24803, 5524, 41176, 3114, 12507, 11562, 37277, 14391, 7975, 50506, 220, 3101, 280, 12, 11047, 1532, 8131, 24803, 11, 48446, 64569, 6856, 7740, 7952, 23630, 95570, 6856, 1482, 12, 89554, 5591, 3114, 15298, 60990, 44786, 14257, 6148, 2233, 50436, 7094, 62491, 34943, 5524, 10589, 5372, 16742, 6850, 32985, 18226, 13810, 16494, 1482, 20879, 41176, 31443, 198, 6578, 37277, 280, 12, 11122, 7094, 14332, 12415, 11, 21923, 9239, 37013, 6856, 28241, 10693, 6882... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 09:08:53 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '120', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998262', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '20ms', 'x-request-id': 'req_98be0e69eec96b6239576ebb0b0e64e3', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e90f9e519c7ea8a-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_98be0e69eec96b6239576ebb0b0e64e3", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001C213D48C20>, 'json_data': {'input': [[806, 13, 972, 35889, 1506, 89666, 51736, 220, 1399, 12, 2031, 11562, 28114, 16494, 8341, 22911, 11122, 7094, 39280, 93129, 73181, 57925, 44155, 6578, 8131, 2233, 28089, 18482, 18154, 53419, 2156, 72952, 198, 8164, 7975, 28089, 38438, 2156, 72952, 7820, 35682, 3865, 11, 39479, 6578, 86610, 32062, 72952, 5927, 7820, 6856, 91883, 10693, 320, 2156, 50693, 17461, 12426, 16742, 51548, 9706, 1532, 10589, 5927, 11122, 10298, 3114, 1532, 20440, 39479, 6578, 86610, 18999, 198, 8164, 7975, 28089, 38438, 39900, 7820, 35682, 1506, 8, 72664, 7975, 1482, 11122, 7094, 39280, 46177, 5927, 6850, 1840, 12426, 1506, 10693, 13373, 20346, 17394, 44786, 18868, 5372, 11122, 7094, 39280, 13, 39903, 14009, 29619, 28089, 1506, 93129, 73181, 198, 13810, 8164, 33295, 18482, 5927, 9706, 3865, 5524, 5173, 87483, 8131, 44100, 64880, 7820, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 09:08:53 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '172', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998404', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '19ms', 'x-request-id': 'req_59f3892f855115bfbe17aa5de32659e3', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e90f9e7de5cea8a-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_59f3892f855115bfbe17aa5de32659e3", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001C213D48C20>, 'json_data': {'input': [[8164, 44075, 2156, 19188, 31281, 5372, 44786, 20440, 12561, 21956, 28089, 39280, 53419, 39988, 5524, 10298, 4929, 1840, 320, 14082, 34694, 30656, 4655, 42078, 7094, 28089, 48262, 3865, 39127, 39900, 58317, 1840, 11320, 14476, 39900, 720, 51745, 1482, 56008, 94071, 1237, 33006, 12, 58317, 64292, 63233, 7952, 12507, 6856, 5524, 51548, 34082, 35034, 12507, 49103, 38657, 21708, 19175, 14391, 7975, 50506, 86995, 98285, 11, 92175, 61390, 14476, 67745, 23934, 19175, 66144, 17461, 17165, 10693, 91394, 15088, 6856, 720, 7, 79862, 14391, 7975, 50506, 7952, 1532, 21204, 23311, 705, 89666, 35723, 23934, 38153, 63233, 57925, 2156, 19188, 31281, 5372, 20440, 12561, 21956, 28089, 39280, 53419, 39988, 5524, 10298, 4929, 1840, 11, 720, 16494, 1532, 8341, 21923, 14476, 34148, 18868, 5372, 3865, 320, 55257, 50306, 18868, 79686... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 09:08:53 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '99', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999195', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '9ms', 'x-request-id': 'req_62ad208edf9b2c3a001427aca49579e4', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e90f9ea8b6aea8a-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_62ad208edf9b2c3a001427aca49579e4", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001C213D48C20>, 'json_data': {'input': [[1830, 20346, 10124, 29256, 24803, 9706, 6856, 5524, 17394, 8131, 4655, 6578, 5927, 35387, 3865, 10693, 12507, 37405, 62315, 13404, 84198, 18600, 10298, 97341, 44786, 54204, 13, 33006, 16604, 25756, 9239, 41873, 97341, 39127, 44786, 5173, 15088, 5591, 17721, 23311, 2233, 44786, 93099, 1506, 10693, 20879, 29256, 62776, 7952, 29256, 44155, 13433, 50819, 12561, 15088, 80230, 13433, 720, 1830, 20346, 10124, 29256, 24803, 9706, 6856, 92457, 14257, 4898, 39865, 14525, 13, 33006, 720, 415, 220, 21, 13, 19, 35448, 1830, 29256, 56008, 44065, 37405, 10124, 9239, 4655, 7740, 21022, 2233, 6578, 8131, 3865, 22911, 2355, 21, 13, 19, 13, 16, 23784, 76401, 86610, 18999, 10693, 5524, 21477, 59030, 9882, 10298, 5173, 4655, 11320, 25756, 9239, 12182, 6148, 67745, 96573, 7753, 1840, 16331, 6856, 320, 42047, 50506, 482, 25756, 92... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 09:08:54 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '177', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998535', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '17ms', 'x-request-id': 'req_520acb2aac0a5df7ffa311e47c3c873b', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e90f9eccf54ea8a-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_520acb2aac0a5df7ffa311e47c3c873b", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 12:08:54. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u041f 29.13330.2011 \\n \\n4 \\n\u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u0438 \u0441\u0440\u0435\u0434\u0441\u0442\u0432 \u0443\u0445\u043e\u0434\u0430, \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445  \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u044f\u043c  \u0444\u0438\u0440\u043c \u2013 \u043f\u0440\u043e\u0438\u0437\u0432\u043e\u0434\u0438\u0442\u0435\u043b\u0435\u0439  \\n\u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u0432 \u0434\u043b\u044f \u0438\u0437\u0433\u043e\u0442\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u043f\u043e\u043a\u0440\u044b\u0442\u0438\u0439 \u043f\u043e\u043b\u043e\u0432) \u0438 \u0441\u043b\u0443\u0447\u0430\u0439\u043d\u044b\u0435 \u0440\u0435\u0434\u043a\u0438\u0435 \u043f\u043e\u043f\u0430\u0434\u0430\u043d\u0438\u044f \u043d\u0430 \u043d\u0435\u0433\u043e \\n\u0431\u0440\u044b\u0437\u0433, \u043a\u0430\u043f\u0435\u043b\u044c \u0438 \u0442.\u0434. \u043d\u0435... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:08:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:09:05", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 09:09:05 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '10406'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '786569'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '1.007s'), ('x-request-id', 'req_a786b99600cb6dbc16929a8ce676bd60'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=JKSMQOMjWqbuCQdtnGqOl9LPtUkxdS_kVJAAhIBz2MI-1732698545-1.0.1.1-jgzrDkOFYxUMyYfWOCSF5FCQOvnwpSzo_HYX.hqAXpi031ssCRIOjlBEowjtZA1IK0MVrvUX1kUE21Wq6Mh6Pg; path=/; expires=Wed, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:09:05", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_a786b99600cb6dbc16929a8ce676bd60", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:09:05", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:09:05", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0423\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u044d\u0442\u0430\u043f\u043e\u0432, \u0447\u0442\u043e\u0431\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u044c, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044e \u0438 \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044e. \u0412\u043e\u0442 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b \u0438 \u0448\u0430\u0433\u0438:\\n\\n1. <b>\u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u044f</b>:\\n\u2022 \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0440\u0430\u0441\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u0441\u043b\u043e\u044f \u0438 \u0432\u044b\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u043d\u0438\u0435 \u0433\u0440\u0443\u043d\u0442\u0430.\\n\u2022 \u0423\u043f\u043b\u043e\u0442\u043d\u0435\u043d\u0438\u0435 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0441\u0430\u0434\u043e\u043a \u0438 \u043f\u043e\u0432\u044b\u0448\u0435\u043d\u0438\u044f \u043d\u0435\u0441\u0443\u0449\u0435\u0439 \u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u0438.\\n\\n2. <b>\u0414\u0440\u0435\u043d\u0430\u0436\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430</b> (\u0435\u0441\u043b\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e):\\n\u2022 \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0434\u0440\u0435\u043d\u0430\u0436\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0434\u043b\u044f \u043e\u0442\u0432\u043e\u0434\u0430 \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434, \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0435\u0441\u043b\u0438 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u0432\u044b\u0441\u043e\u043a\u0438\u0439.\\n\\n3. <b>\u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f</b>:\\n\u2022 \u0423\u043a\u043b\u0430\u0434\u043a\u0430 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u043e\u0433\u043e \u0441\u043b\u043e\u044f \u0434\u043b\u044f \u0437\u0430\u0449\u0438\u0442\u044b \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u043e\u0439 \u0432\u043b\u0430\u0433\u0438. \u041e\u0431\u044b\u0447\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0440\u0443\u043b\u043e\u043d\u043d\u044b\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b \u0438\u043b\u0438 \u0441\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0435 \u043c\u0435\u043c\u0431\u0440\u0430\u043d\u044b.\\n\u2022 \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u0437\u0430\u0445\u043e\u0434\u0438\u0442\u044c \u043d\u0430 \u0441\u0442\u0435\u043d\u044b \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \"\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u044d\u0444\u0444\u0435\u043a\u0442\u0430\".\\n\\n4. <b>\u0422\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f</b> (\u0435\u0441\u043b\u0438 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f):\\n\u2022 \u0423\u043a\u043b\u0430\u0434\u043a\u0430 \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u044b\u0445 \u043f\u043b\u0438\u0442, \u0442\u0430\u043a\u0438\u0445 \u043a\u0430\u043a \u044d\u043a\u0441\u0442\u0440\u0443\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u043d\u043e\u043f\u043e\u043b\u0438\u0441\u0442\u0438\u0440\u043e\u043b, \u0434\u043b\u044f \u0441\u043d\u0438\u0436\u0435\u043d\u0438\u044f \u0442\u0435\u043f\u043b\u043e\u0432\u044b\u0445 \u043f\u043e\u0442\u0435\u0440\u044c.\\n\u2022 \u0423\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044c \u0440\u0430\u0437\u043c\u0435\u0449\u0430\u0435\u0442\u0441\u044f \u043f\u043e\u0432\u0435\u0440\u0445 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u0438.\\n\\n5.... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:09:05", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:09:06", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:09:06", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='0686b279-5732-4d91-8647-d8054534a842'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:09:06", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 12:09:24", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 12:09:25", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 12:09:26", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 12:09:26", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 13:30:44", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-974"}
{"asctime": "2024-11-27 13:30:56", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-981"}
{"asctime": "2024-11-27 13:30:57", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-984"}
{"asctime": "2024-11-27 13:30:59", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-987"}
{"asctime": "2024-11-27 13:31:01", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-990"}
{"asctime": "2024-11-27 13:31:09", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-995"}
{"asctime": "2024-11-27 13:31:10", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-998"}
{"asctime": "2024-11-27 13:31:15", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-1001"}
{"asctime": "2024-11-27 13:31:18", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-1004"}
{"asctime": "2024-11-27 13:31:21", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-1007"}
{"asctime": "2024-11-27 13:31:26", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-1010"}
{"asctime": "2024-11-27 13:31:34", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-1013"}
{"asctime": "2024-11-27 13:31:45", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-1016"}
{"asctime": "2024-11-27 13:32:02", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-1019"}
{"asctime": "2024-11-27 13:32:28", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-1022"}
{"asctime": "2024-11-27 13:32:58", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-1025"}
{"asctime": "2024-11-27 13:33:33", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-1030"}
{"asctime": "2024-11-27 13:33:34", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-1033"}
{"asctime": "2024-11-27 13:33:35", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-1036"}
{"asctime": "2024-11-27 13:33:37", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-1039"}
{"asctime": "2024-11-27 13:33:41", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-1042"}
{"asctime": "2024-11-27 13:33:52", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-1047"}
{"asctime": "2024-11-27 13:33:53", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-1050"}
{"asctime": "2024-11-27 13:33:54", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-1053"}
{"asctime": "2024-11-27 13:33:57", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-1056"}
{"asctime": "2024-11-27 16:41:00", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 16:41:02", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 16:41:02", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 16:41:03", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 16:50:37", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 16:50:44", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 16:50:44", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 16:50:45", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 16:52:28", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:28", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:28", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:29", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:29", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:29", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:29", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:29", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: ru", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:29", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:29", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:29", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x0000024584C7B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 13, 52, 27, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2331, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193540), <telegram.ext._callbackcontext.CallbackContext object at 0x00000245AA29EA50>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:29", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x0000024587140CA0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:30", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:30", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:31", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:32", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:32", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:32", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:32", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x0000024584C7B7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), id='1051116659024133832', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 13, 52, 29, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2332, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations')... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:32", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x00000245A8F8B8A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:32", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:32", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:32", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x00000245AA436BD0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:32", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:32", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x00000245AA436BD0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:32", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:32", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:32", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:32", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:32", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:32", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:32", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:32", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:33", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:36", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:36", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:36", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:36", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u043a\u0430\u043a\u0443\u044e \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432 \u0447\u0430\u0441\u0442\u043d\u043e\u043c \u0434\u043e\u043c\u0435 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:36", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x0000024584C7B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 13, 52, 36, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2334, supergroup_chat_created=False, text='\u043a\u0430\u043a\u0443\u044e \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432 \u0447\u0430\u0441\u0442\u043d\u043e\u043c \u0434\u043e\u043c\u0435 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438'), update_id=881193542), <telegram.ext._callbackcontext.CallbackContext object at 0x00000245AA29EA50>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:36", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x00000245AA4489A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:36", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='37961c6b-faa2-4ca7-9e80-9e5007ba33d1' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:36", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='37961c6b-faa2-4ca7-9e80-9e5007ba33d1'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:36", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:36", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x00000245AA436BD0>, '\u043a\u0430\u043a\u0443\u044e \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432 \u0447\u0430\u0441\u0442\u043d\u043e\u043c \u0434\u043e\u043c\u0435 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438'), kwargs: {'chat_history': [HumanMessage(content='\u043a\u0430\u043a\u0443\u044e \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432 \u0447\u0430\u0441\u0442\u043d\u043e\u043c \u0434\u043e\u043c\u0435 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043a\u0430\u043a\u043e\u0432\u043e \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0423\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u043e \u043f\u043e\u043b\u043e\u0432 \u0432 \u043f\u043e\u0434\u0432\u0430\u043b\u0435 \u0436\u0438\u043b\u043e\u0433\u043e \u0434\u043e\u043c\u0430 \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u044d\u0442\u0430\u043f\u043e\u0432, \u0447\u0442\u043e\u0431\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u044c, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044e \u0438 \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044e. \u0412\u043e\u0442 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b \u0438 \u0448\u0430\u0433\u0438:\\n\\n1. <b>\u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u044f</b>:\\n\u2022 \u0423\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u0440\u0430\u0441\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u0441\u043b\u043e\u044f \u0438 \u0432\u044b\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u043d\u0438\u0435 \u0433\u0440\u0443\u043d\u0442\u0430.\\n\u2022 \u0423\u043f\u043b\u043e\u0442\u043d\u0435\u043d\u0438\u0435 \u043e\u0441\u043d\u043e\u0432\u0430\u043d\u0438\u044f \u0434\u043b\u044f \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u044f \u043f\u0440\u043e\u0441\u0430\u0434\u043e\u043a \u0438 \u043f\u043e\u0432\u044b\u0448\u0435\u043d\u0438\u044f \u043d\u0435\u0441\u0443\u0449\u0435\u0439 \u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u0438.\\n\\n2. <b>\u0414\u0440\u0435\u043d\u0430\u0436\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430</b> (\u0435\u0441\u043b\u0438 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e):\\n\u2022 \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0434\u0440\u0435\u043d\u0430\u0436\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u044b \u0434\u043b\u044f \u043e\u0442\u0432\u043e\u0434\u0430 \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434, \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0435\u0441\u043b\u0438 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u0432\u044b\u0441\u043e\u043a\u0438\u0439.\\n\\n3. <b>\u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f</b>:\\n\u2022 \u0423\u043a\u043b\u0430\u0434\u043a\u0430 ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:37", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000245AA4834C0>, 'json_data': {'input': [[4898, 16248, 34148, 5927, 19190, 1840, 14009, 15458, 12182, 14257, 68462, 18264, 5927, 17756, 84350, 94962, 7952, 12507, 1532, 5927, 11562, 23630, 90877, 66144, 16742, 21923, 31443, 55523]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:37", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:40", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 13:52:40 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '43'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999972'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_ac4f8eece514b0e3b177a91a7b6c591b'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=7MLJME8qjx5s4b2MFNbDjQGmBXouAn1.akOXBNXnnMo-1732715560-1.0.1.1-0JaU8heNSrOjFb0gv4zkMXtx0hWJsLNj.PPuQk... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:40", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_ac4f8eece514b0e3b177a91a7b6c591b", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:40", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:40", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000245A8B88C20>, 'json_data': {'input': [[4898, 16248, 34148, 5927, 19190, 1840, 14009, 15458, 12182, 14257, 68462, 18264, 5927, 17756, 84350, 94962, 7952, 12507, 1532, 5927, 11562, 23630, 90877, 66144, 16742, 21923, 31443, 55523]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:40", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:41", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:52:40 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '67', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999972', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_83f488c8d72da2d2517a84b7620cc262', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92999bcc11ee28-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:41", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_83f488c8d72da2d2517a84b7620cc262", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:41", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000245A8B88C20>, 'json_data': {'input': [[12, 12561, 16494, 5372, 18999, 42078, 7094, 28089, 48262, 3865, 39127, 44786, 5173, 15088, 5591, 17721, 23311, 2233, 44786, 12561, 9542, 38438, 13999, 12, 5591, 4655, 1830, 4329, 17394, 44786, 14257, 68462, 15088, 5524, 720, 2233, 15298, 49907, 7753, 30436, 21708, 11047, 67124, 31443, 21477, 1830, 4329, 17394, 39900, 5927, 35387, 3865, 10693, 1506, 26, 33006, 12, 14257, 77911, 94071, 84714, 38521, 70959, 6856, 11, 40842, 52520, 32062, 63233, 7820, 5524, 10124, 9239, 2156, 72952, 5927, 35387, 3865, 10693, 6856, 9706, 3865, 11, 78876, 8164, 7975, 21956, 5372, 2156, 72952, 5927, 720, 6578, 50436, 4898, 5591, 17721, 23311, 2233, 94962, 67969, 48262, 9239, 1532, 40842, 81803, 7975, 4898, 12507, 21477, 12426, 12394, 50436, 1506, 14476, 47295, 49103, 38657, 1506, 18154, 220, 22, 13, 806, 13, 972, 26, 33006, 17279, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:41", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:41", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:52:41 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '77', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998576', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '17ms', 'x-request-id': 'req_f3bb8edcc3edbded04e9254b3d3e2949', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9299a05f1cee28-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:41", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_f3bb8edcc3edbded04e9254b3d3e2949", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:41", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000245A8B88C20>, 'json_data': {'input': [[12, 47353, 67445, 39103, 11562, 38822, 2233, 15088, 11320, 6578, 43203, 7740, 7820, 50223, 52744, 5927, 35387, 3865, 10693, 1506, 19175, 21923, 23297, 8164, 56857, 28089, 1506, 70129, 21204, 5927, 19190, 1840, 14009, 15458, 21708, 720, 2297, 22918, 6735, 35034, 5372, 12648, 6578, 5173, 14082, 56999, 7094, 9882, 10298, 5927, 11047, 56857, 17618, 25756, 87878, 26, 33006, 12, 20440, 76401, 86610, 62491, 7740, 11122, 17766, 92457, 22918, 6735, 35034, 5372, 39900, 62315, 8341, 2233, 28089, 39280, 13, 33006, 22, 13, 16, 13, 19, 720, 25079, 14009, 720, 55257, 35034, 5372, 44786, 720, 9136, 7094, 14332, 12415, 720, 41036, 13404, 73181, 720, 8164, 44075, 44155, 6578, 8131, 2233, 28089, 18482, 720, 6578, 98285, 14332, 6148, 23297, 4898, 34148, 720, 8164, 2233, 9542, 38438, 13999, 12, 5591, 4655, 1830, 4329, 17394, 774... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:41", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:42", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:52:41 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '80', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998698', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '15ms', 'x-request-id': 'req_19b1ed8bbfa9a52c167283fb943bcb94', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9299a4186aee28-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:42", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_19b1ed8bbfa9a52c167283fb943bcb94", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:42", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000245A8B88C20>, 'json_data': {'input': [[7094, 14009, 21923, 23297, 8164, 56857, 18999, 5524, 7486, 9542, 17721, 44786, 6850, 32330, 46177, 6850, 32330, 5927, 9136, 2233, 35667, 1482, 12, 8164, 21956, 17721, 14082, 32985, 29256, 18437, 68742, 570, 33006, 17279, 31203, 49103, 12507, 19175, 7952, 29256, 44155, 13433, 50819, 5524, 23446, 17394, 17618, 11047, 10298, 8164, 7753, 8131, 3865, 39103, 5927, 35387, 3865, 10693, 1506, 5927, 76401, 86610, 84198, 11, 5524, 14837, 3114, 18437, 13999, 220, 20, 13, 17, 11, 720, 5591, 45658, 7975, 9706, 34613, 28114, 1840, 9706, 25756, 87878, 13, 33006, 17279, 31203, 13373, 91216, 47273, 11047, 98285, 2156, 7975, 14837, 81301, 17165, 10693, 86995, 50693, 6856, 14332, 12415, 46177, 18154, 53280, 91459, 13373, 41291, 15298, 67589, 27717, 20440, 720, 8164, 9706, 7094, 58669, 39280, 86995, 50693, 3865, 10298, 63233, 67... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:42", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:43", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:52:43 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '161', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998422', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '18ms', 'x-request-id': 'req_0e55eaf43aeff5a4e44eb29a7644ce36', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9299a8bbcfee28-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:43", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_0e55eaf43aeff5a4e44eb29a7644ce36", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:43", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000245A8B88C20>, 'json_data': {'input': [[1, 2297, 3865, 10693, 67745, 1, 5927, 19190, 1840, 11320, 20346, 10298, 63233, 18868, 61390, 90877, 11, 21923, 23297, 8164, 56857, 28089, 1506, 90457, 67745, 74726, 5927, 19190, 1840, 14009, 15458, 12182, 13373, 20346, 17394, 44786, 5524, 8341, 21708, 4390, 19, 23227, 31203, 41291, 15298, 67589, 14332, 1840, 58317, 64292, 63233, 11122, 7094, 14332, 12415, 11, 17756, 84350, 44786, 7952, 12507, 6856, 13373, 53419, 2156, 3865, 46177, 19175, 66144, 54570, 5524, 10298, 21708, 345, 4898, 13337, 1830, 13404, 17394, 21708, 11, 11047, 1506, 35297, 10693, 1506, 44155, 6856, 7740, 40842, 14082, 44786, 11122, 7094, 14332, 12415, 11, 5927, 2156, 38521, 2233, 5372, 23446, 1532, 5524, 8341, 1840, 7820, 7486, 72331, 54686, 38153, 63233, 40842, 52520, 1506, 70129, 21204, 198, 4898, 16248, 7820, 39233, 19190, 22911, 11320, 91... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:43", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:52:44 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '94', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998419', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '18ms', 'x-request-id': 'req_628909ae19bc325b29ec315b17075d36', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9299b08e24ee28-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_628909ae19bc325b29ec315b17075d36", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000245A8B88C20>, 'json_data': {'input': [[5591, 35387, 3865, 10693, 20219, 38722, 9239, 44065, 720, 3865, 77911, 94071, 720, 14082, 9239, 37013, 6856, 18482, 720, 8164, 2233, 13337, 28089, 29256, 21956, 17721, 12648, 6578, 720, 2156, 32330, 39127, 13999, 720, 13337, 95565, 87008, 6578, 720, 4898, 3114, 19619, 7486, 12507, 13, 33006, 22, 13, 18, 13, 1419, 23784, 19190, 1840, 14009, 15458, 12182, 18868, 61390, 2156, 15088, 68828, 94866, 14082, 64292, 21708, 11, 5927, 51745, 1482, 5372, 44786, 5927, 21923, 14476, 35034, 5372, 44065, 11122, 7094, 39280, 11, 720, 7094, 29256, 44155, 13433, 50819, 81376, 86630, 14009, 29893, 21477, 1830, 4329, 17394, 12648, 6578, 5927, 35387, 3865, 10693, 12507, 20879, 93099, 21923, 14476, 1532, 14082, 38972, 39988, 5927, 19190, 1840, 14009, 57186, 720, 7094, 28241, 10693, 11122, 7094, 14332, 12415, 320, 9136, 1506, 7740,... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:52:44 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '132', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998636', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '16ms', 'x-request-id': 'req_39ef4a5f9fab35ba408058754b99a88c', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9299b4f997ee28-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_39ef4a5f9fab35ba408058754b99a88c", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000245A8B88C20>, 'json_data': {'input': [[8164, 44075, 2156, 19188, 31281, 5372, 44786, 20440, 12561, 21956, 28089, 39280, 53419, 39988, 5524, 10298, 4929, 1840, 320, 14082, 34694, 30656, 4655, 42078, 7094, 28089, 48262, 3865, 39127, 39900, 58317, 1840, 11320, 14476, 39900, 720, 51745, 1482, 56008, 94071, 1237, 33006, 12, 58317, 64292, 63233, 7952, 12507, 6856, 5524, 51548, 34082, 35034, 12507, 49103, 38657, 21708, 19175, 14391, 7975, 50506, 86995, 98285, 11, 92175, 61390, 14476, 67745, 23934, 19175, 66144, 17461, 17165, 10693, 91394, 15088, 6856, 720, 7, 79862, 14391, 7975, 50506, 7952, 1532, 21204, 23311, 705, 89666, 35723, 23934, 38153, 63233, 57925, 2156, 19188, 31281, 5372, 20440, 12561, 21956, 28089, 39280, 53419, 39988, 5524, 10298, 4929, 1840, 11, 720, 16494, 1532, 8341, 21923, 14476, 34148, 18868, 5372, 3865, 320, 55257, 50306, 18868, 79686... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:52:45 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '137', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999195', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '9ms', 'x-request-id': 'req_00ecf97d6cd78428a86034adcd94874f', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9299b94bd9ee28-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_00ecf97d6cd78428a86034adcd94874f", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000245A8B88C20>, 'json_data': {'input': [[8164, 12507, 86610, 18999, 10693, 11, 5927, 38153, 63233, 21477, 7094, 44100, 70129, 21204, 5927, 44075, 44065, 25756, 19188, 4655, 11, 63780, 4655, 46177, 21022, 68506, 2233, 20219, 7975, 1840, 5524, 5173, 3114, 13337, 61379, 12182, 14391, 7975, 50506, 720, 8164, 3114, 13337, 68742, 5927, 35387, 3865, 10693, 1506, 11, 7952, 29256, 44155, 13433, 50819, 89327, 18482, 93099, 4655, 21923, 14476, 1532, 14082, 38972, 39988, 11562, 98285, 14332, 6148, 23297, 4898, 16742, 720, 5591, 19190, 1840, 14009, 57186, 13, 33006, 22, 13, 17, 13, 1691, 23784, 19190, 1840, 14009, 71829, 76401, 86610, 62491, 5524, 61565, 31274, 31274, 11, 19175, 21923, 9239, 37013, 6856, 28241, 10693, 93099, 16742, 20879, 49899, 1506, 89715, 67187, 1830, 6856, 720, 15752, 9239, 18999, 5927, 21022, 1830, 6578, 23630, 19916, 7753, 3865, 11, 68088... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:52:45 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '115', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998434', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '18ms', 'x-request-id': 'req_2eb7d7ae2c8e2557d0682e46e527d384', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9299bbd9d8ee28-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_2eb7d7ae2c8e2557d0682e46e527d384", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000245A8B88C20>, 'json_data': {'input': [[14082, 34694, 13404, 19479, 94975, 5927, 53419, 2156, 3865, 93099, 3865, 37405, 97991, 6856, 47273, 14257, 68462, 17165, 12561, 13337, 28089, 29256, 21956, 17721, 39900, 6850, 32330, 39127, 13999, 720, 13337, 95565, 1830, 22885, 48446, 19619, 7486, 1506, 13373, 5524, 10124, 9239, 94962, 5927, 35387, 3865, 10693, 6856, 9706, 1532, 12561, 13810, 1482, 13404, 19479, 90875, 16742, 25756, 87221, 4655, 76401, 86610, 62491, 13, 33006, 27435, 81376, 47805, 39988, 25756, 87221, 1532, 76401, 86610, 62491, 93129, 73181, 20879, 13999, 2297, 18264, 25756, 87221, 4655, 76401, 86610, 62491, 11, 21923, 14476, 36497, 5173, 39865, 14476, 23680, 4929, 720, 4898, 36594, 63233, 720, 10124, 17461, 60009, 720, 55257, 21708, 720, 8164, 39865, 14476, 23680, 1840, 720, 8164, 2233, 13810, 1482, 13404, 19479, 90875, 63233, 720, 8164, 1... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:52:46 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '76', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998522', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '17ms', 'x-request-id': 'req_e50127a09d604b25158024ad781fc9c7', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9299beb8d5ee28-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_e50127a09d604b25158024ad781fc9c7", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000245A8B88C20>, 'json_data': {'input': [[1032, 13, 18, 81529, 2156, 7753, 15752, 23630, 10124, 7753, 50436, 17618, 93099, 5927, 2156, 38521, 2233, 5372, 2156, 47295, 11047, 67124, 39865, 12, 45658, 7975, 9706, 23630, 2156, 38722, 17394, 18999, 11, 20879, 29256, 62776, 11, 720, 5591, 19190, 1840, 14009, 57186, 7740, 38098, 7094, 1840, 15458, 17766, 59921, 39280, 5927, 35387, 3865, 10693, 1506, 11122, 7094, 14332, 12415, 7740, 34943, 9239, 56999, 62491, 93129, 73181, 21923, 23297, 8164, 56857, 28089, 18482, 44946, 720, 2297, 64322, 63229, 9239, 1506, 21477, 2297, 15088, 13337, 98285, 2156, 7975, 14837, 34082, 39900, 21923, 9239, 37013, 6856, 39280, 11, 89327, 39280, 21599, 2156, 7753, 66349, 68506, 19916, 19916, 15298, 98695, 44786, 720, 2297, 10693, 10298, 44786, 18600, 47067, 62491, 7740, 46339, 1830, 16494, 41873, 54686, 14257, 44646, 62776, 93099... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:52:46 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '86', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998756', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '14ms', 'x-request-id': 'req_c5177a094876b0a330920f7162d4015f', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9299c2baa7ee28-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_c5177a094876b0a330920f7162d4015f", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000245A8B88C20>, 'json_data': {'input': [[16, 35889, 1532, 89159, 97747, 17756, 84350, 34082, 39900, 46177, 29619, 39900, 20879, 52520, 18999, 93099, 5927, 19190, 1840, 14009, 57186, 56449, 14525, 720, 29256, 44075, 44100, 29893, 21204, 18154, 11047, 98285, 2156, 7975, 14837, 81301, 4898, 16494, 86995, 50693, 6856, 39280, 6578, 13, 33006, 17, 39903, 14009, 76401, 86610, 62491, 11, 48835, 1532, 90457, 67745, 74726, 93099, 3865, 18600, 29471, 39988, 5524, 70397, 14525, 11320, 9136, 54686, 8379, 5173, 21956, 17721, 1532, 11, 93129, 73181, 720, 8164, 44075, 44155, 6578, 8131, 2233, 28089, 18482, 7952, 35111, 7486, 15458, 17766, 48150, 20879, 52520, 17618, 93099, 5927, 19190, 1840, 14009, 57186, 11, 21923, 41036, 56999, 28089, 1506, 90457, 67745, 21599, 23311, 720, 8164, 12507, 86610, 18999, 11, 7740, 5927, 52520, 17618, 93099, 12561, 13337, 28089, 9706,... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:52:47 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '89', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998590', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '16ms', 'x-request-id': 'req_7e41f1d859834fb3fba44a063cfc0af3', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9299c558c8ee28-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_7e41f1d859834fb3fba44a063cfc0af3", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 16:52:47. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n- \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0438\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u043e\u043a\u0432\u0430\u0440\u0442\u0438\u0440\u043d\u044b\u0445 \u043f\u0440\u0438\u0442\u043e\u0447\u043d\u043e-\u0432\u044b\u0442\u044f\u0436\u043d\u044b\u0445 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043e\u043a \u0441 \\n\u0440\u0435\u043a\u0443\u043f\u0435\u0440\u0430\u0446\u0438\u0435\u0439 \u0442\u0435\u043f\u043b\u0430 \u0432\u044b\u0442\u044f\u0436\u043d\u043e\u0433\u043e \u0432\u043e\u0437\u0434\u0443\u0445\u0430; \\n \\n- \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u0441\u043f\u0443\u0442\u043d\u0438\u043a\u043e\u0432, \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c\u044b\u0445 \u043a \u0441\u0431\u043e\u0440\u043d\u043e\u043c\u0443 \u0432\u043e\u0437\u0434\u0443\u0445\u043e\u0432\u043e\u0434\u0443, \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u043d\u043e\u043c\u0443 \u0432 \\n\u043c\u0435\u0436\u043a\u0432\u0430\u0440\u0442\u0438\u0440\u043d\u043e\u043c \u043a\u043e\u0440\u0438... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:59", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 13:52:59 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '9455'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '783166'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '1.262s'), ('x-request-id', 'req_c0194ac9ddb73c1cbbee5bbce775663a'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=Fz9g3k3h4CTpcQRM11lEEMKfiBBiHMp8d54DBY5WjaY-1732715579-1.0.1.1-AjWXc5_Ok8p5TiEbAm5LGepXbuXDrG69PJBsGxof6hXaVH4ewCDf0taoFxyfJrcWTKbkwatShFVUxn4EF4V6Gg; path=/; expires=Wed, 2... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:59", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_c0194ac9ddb73c1cbbee5bbce775663a", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:59", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:59", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0412 \u0447\u0430\u0441\u0442\u043d\u043e\u043c \u0434\u043e\u043c\u0435 \u0432 \u041c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0431\u0443\u0434\u0435\u0442 \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e \u0441\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c\u0441\u044f \u0441 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u043c\u0438 \u043a\u043b\u0438\u043c\u0430\u0442\u0430 \u0438 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0442\u044c \u043a\u043e\u043c\u0444\u043e\u0440\u0442\u043d\u043e\u0435 \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u043d\u0438\u0435. \u0412\u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432 \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u0438, \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0434\u043b\u044f \u0447\u0430\u0441\u0442\u043d\u043e\u0433\u043e \u0434\u043e\u043c\u0430:\\n\\n1. <b>\u041c\u0435\u0445\u0430\u043d\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043f\u0440\u0438\u0442\u043e\u0447\u043d\u043e-\u0432\u044b\u0442\u044f\u0436\u043d\u0430\u044f \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044f</b>:\\n\u2022 \u041e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u044b\u0439 \u043f\u0440\u0438\u0442\u043e\u043a \u0441\u0432\u0435\u0436\u0435\u0433\u043e \u0432\u043e\u0437\u0434\u0443\u0445\u0430 \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043e\u0442\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u043e\u0433\u043e.\\n\u2022 \u041c\u043e\u0436\u0435\u0442 \u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0432 \u0441\u0435\u0431\u044f \u0440\u0435\u043a\u0443\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u044b \u0434\u043b\u044f \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0442\u0435\u043f\u043b\u0430, \u0447\u0442\u043e \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u043f\u043e\u043b\u0435\u0437\u043d\u043e \u0432 \u0445\u043e\u043b\u043e\u0434\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f \u0433\u043e\u0434\u0430.\\n\u2022 \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0442\u0435\u043c\u043f\u0435\u0440\u0430\u0442\u0443\u0440\u0443 \u0438 \u0432\u043b\u0430\u0436\u043d\u043e\u0441\u0442\u044c \u0432\u043e\u0437\u0434\u0443\u0445\u0430.\\n\\n2. <b>\u0418\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u043e\u043a\u043e\u043c\u043d\u0430\u0442\u043d\u044b\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 (\u0431\u0440\u0438\u0437\u0435\u0440\u044b)</b>:\\n\u2022 \u041a\u043e\u043c\u043f\u0430\u043a\u0442\u043d\u044b\u0435 \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430, \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u043c\u044b\u0435 \u0432 \u043a\u0430\u0436\u0434\u043e\u0439 \u043a\u043e\u043c\u043d\u0430\u0442\u0435.\\n\u2022 \u041e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u044e\u0442 \u043f\u0440\u0438\u0442\u043e\u043a \u0441\u0432\u0435\u0436\u0435\u0433\u043e \u0432\u043e\u0437\u0434\u0443\u0445\u0430 \u0441 \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u0435\u0439 \u0438 \u043f\u043e\u0434\u043e\u0433\u0440\u0435\u0432\u043e\u043c.\\n\u2022 \u041b\u0435\u0433\u043a\u043e \u043c\u043e\u043d\u0442\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u0438 \u043d\u0435 \u0442\u0440\u0435\u0431\u0443\u044e\u0442 \u0441\u043b\u043e\u0436\u043d\u044b\u0445 \u0438\u043d\u0436\u0435\u043d\u0435\u0440\u043d\u044b\u0445 \u0440\u0435\u0448\u0435\u043d\u0438\u0439.\\n\\n3. <b>\u0415\u0441\u0442\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044f</b>:\\n\u2022 \u041f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u0432 \u0434\u043e\u043c\u0430\u0445 \u0441 \u0445\u043e\u0440\u043e\u0448\u0435\u0439 \u0430\u0440\u0445\u0438\u0442\u0435\u043a\u0442\u0443\u0440\u043d\u043e\u0439 \u043f\u0440\u043e\u0440\u0430\u0431\u043e\u0442\u043a\u043e\u0439 \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u044b\u0445 \u043a\u0430\u043d\u0430\u043b\u043e\u0432.\\n\u2022 \u041e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u0432\u043e\u0437\u0434\u0443\u0445\u043e\u043e\u0431\u043c\u0435\u043d \u0437\u0430 \u0441\u0447\u0435\u0442 ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:52:59", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:53:00", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:53:00", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='37961c6b-faa2-4ca7-9e80-9e5007ba33d1'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:53:00", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:53:53", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 16:53:54", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 16:53:55", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 16:53:55", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 16:54:33", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:33", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:34", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:35", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:35", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:35", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:35", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:35", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: ru", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:35", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:35", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:35", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x000001F61FC0B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 13, 54, 33, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2336, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193543), <telegram.ext._callbackcontext.CallbackContext object at 0x000001F64522F000>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:35", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x000001F6450E79A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:35", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:35", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:37", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:37", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:37", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:37", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:37", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x000001F61FC0B7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), id='1051116661178260085', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 13, 54, 35, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2337, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations')... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:37", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x000001F643F178A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:37", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:37", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:37", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x000001F6452E7740>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:37", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:37", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x000001F6452E7740>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:37", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:37", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:37", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:38", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:38", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:38", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:38", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:38", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:38", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:46", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:46", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:46", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:46", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u043a\u0430\u043a\u0443\u044e \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432 \u0447\u0430\u0441\u0442\u043d\u043e\u043c \u0434\u043e\u043c\u0435 \u0432 \u043b\u0435\u043d\u0438\u043d\u0433\u0440\u0430\u0434\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:46", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x000001F61FC0B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 13, 54, 46, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2339, supergroup_chat_created=False, text='\u043a\u0430\u043a\u0443\u044e \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432 \u0447\u0430\u0441\u0442\u043d\u043e\u043c \u0434\u043e\u043c\u0435 \u0432 \u043b\u0435\u043d\u0438\u043d\u0433\u0440\u0430\u0434\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438'), update_id=881193545), <telegram.ext._callbackcontext.CallbackContext object at 0x000001F64522F000>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:46", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x000001F6452F89A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:46", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='ec791987-8149-426d-ac22-67a77d604981' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:46", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='ec791987-8149-426d-ac22-67a77d604981'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:47", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:47", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x000001F6452E7740>, '\u043a\u0430\u043a\u0443\u044e \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432 \u0447\u0430\u0441\u0442\u043d\u043e\u043c \u0434\u043e\u043c\u0435 \u0432 \u043b\u0435\u043d\u0438\u043d\u0433\u0440\u0430\u0434\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438'), kwargs: {'chat_history': [HumanMessage(content='\u043a\u0430\u043a\u0443\u044e \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432 \u0447\u0430\u0441\u0442\u043d\u043e\u043c \u0434\u043e\u043c\u0435 \u0432 \u043b\u0435\u043d\u0438\u043d\u0433\u0440\u0430\u0434\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043a\u0430\u043a\u0443\u044e \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432 \u0447\u0430\u0441\u0442\u043d\u043e\u043c \u0434\u043e\u043c\u0435 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0412 \u0447\u0430\u0441\u0442\u043d\u043e\u043c \u0434\u043e\u043c\u0435 \u0432 \u041c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0431\u0443\u0434\u0435\u0442 \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e \u0441\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c\u0441\u044f \u0441 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u043c\u0438 \u043a\u043b\u0438\u043c\u0430\u0442\u0430 \u0438 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0442\u044c \u043a\u043e\u043c\u0444\u043e\u0440\u0442\u043d\u043e\u0435 \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u043d\u0438\u0435. \u0412\u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432 \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u0438, \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0434\u043b\u044f \u0447\u0430\u0441\u0442\u043d\u043e\u0433\u043e \u0434\u043e\u043c\u0430:\\n\\n1. <b>\u041c\u0435\u0445\u0430\u043d\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043f\u0440\u0438\u0442\u043e\u0447\u043d\u043e-\u0432\u044b\u0442\u044f\u0436\u043d\u0430\u044f \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044f</b>:\\n\u2022 \u041e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u044b\u0439 \u043f\u0440\u0438\u0442\u043e\u043a \u0441\u0432\u0435\u0436\u0435\u0433\u043e \u0432\u043e\u0437\u0434\u0443\u0445\u0430 \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043e\u0442\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u043e\u0433\u043e.\\n\u2022 \u041c\u043e\u0436\u0435\u0442 \u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0432 \u0441\u0435\u0431\u044f \u0440\u0435\u043a\u0443\u043f\u0435\u0440\u0430\u0442\u043e\u0440\u044b \u0434\u043b\u044f \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044f \u0442\u0435\u043f\u043b\u0430, \u0447\u0442\u043e \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u043f\u043e\u043b\u0435\u0437\u043d\u043e \u0432 \u0445\u043e\u043b\u043e\u0434\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f \u0433\u043e\u0434\u0430.\\n\u2022 \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0442\u0435\u043c... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F64532F560>, 'json_data': {'input': [[4898, 16248, 34148, 5927, 19190, 1840, 14009, 15458, 12182, 14257, 68462, 18264, 5927, 17756, 84350, 94962, 7952, 12507, 1532, 5927, 26539, 9882, 2156, 15752, 11001, 112, 66144, 16742, 21923, 31443, 55523]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 13:54:47 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '77'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999968'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_81e188e3284a147502a25cee46e7bb35'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=s1cImiG4NySNuYNqfKqYIf9BIFhb3oVm28xC1q3YEjM-1732715687-1.0.1.1-LFvAMYFrrPmuQOEaV249BynwoA__Ib_ueR7shv... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_81e188e3284a147502a25cee46e7bb35", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:47", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F643B18C20>, 'json_data': {'input': [[4898, 16248, 34148, 5927, 19190, 1840, 14009, 15458, 12182, 14257, 68462, 18264, 5927, 17756, 84350, 94962, 7952, 12507, 1532, 5927, 26539, 9882, 2156, 15752, 11001, 112, 66144, 16742, 21923, 31443, 55523]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:54:48 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '88', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999968', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_b88eac5cc43b99d5e395219939018d7a', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e929cb7da85b59c-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_b88eac5cc43b99d5e395219939018d7a", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F643B18C20>, 'json_data': {'input': [[12, 12561, 16494, 5372, 18999, 42078, 7094, 28089, 48262, 3865, 39127, 44786, 5173, 15088, 5591, 17721, 23311, 2233, 44786, 12561, 9542, 38438, 13999, 12, 5591, 4655, 1830, 4329, 17394, 44786, 14257, 68462, 15088, 5524, 720, 2233, 15298, 49907, 7753, 30436, 21708, 11047, 67124, 31443, 21477, 1830, 4329, 17394, 39900, 5927, 35387, 3865, 10693, 1506, 26, 33006, 12, 14257, 77911, 94071, 84714, 38521, 70959, 6856, 11, 40842, 52520, 32062, 63233, 7820, 5524, 10124, 9239, 2156, 72952, 5927, 35387, 3865, 10693, 6856, 9706, 3865, 11, 78876, 8164, 7975, 21956, 5372, 2156, 72952, 5927, 720, 6578, 50436, 4898, 5591, 17721, 23311, 2233, 94962, 67969, 48262, 9239, 1532, 40842, 81803, 7975, 4898, 12507, 21477, 12426, 12394, 50436, 1506, 14476, 47295, 49103, 38657, 1506, 18154, 220, 22, 13, 806, 13, 972, 26, 33006, 17279, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:54:48 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '106', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998576', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '17ms', 'x-request-id': 'req_ca8af203e95df46b2198e0afc152a424', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e929cbbae7bb59c-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_ca8af203e95df46b2198e0afc152a424", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F643B18C20>, 'json_data': {'input': [[12, 47353, 67445, 39103, 11562, 38822, 2233, 15088, 11320, 6578, 43203, 7740, 7820, 50223, 52744, 5927, 35387, 3865, 10693, 1506, 19175, 21923, 23297, 8164, 56857, 28089, 1506, 70129, 21204, 5927, 19190, 1840, 14009, 15458, 21708, 720, 2297, 22918, 6735, 35034, 5372, 12648, 6578, 5173, 14082, 56999, 7094, 9882, 10298, 5927, 11047, 56857, 17618, 25756, 87878, 26, 33006, 12, 20440, 76401, 86610, 62491, 7740, 11122, 17766, 92457, 22918, 6735, 35034, 5372, 39900, 62315, 8341, 2233, 28089, 39280, 13, 33006, 22, 13, 16, 13, 19, 720, 25079, 14009, 720, 55257, 35034, 5372, 44786, 720, 9136, 7094, 14332, 12415, 720, 41036, 13404, 73181, 720, 8164, 44075, 44155, 6578, 8131, 2233, 28089, 18482, 720, 6578, 98285, 14332, 6148, 23297, 4898, 34148, 720, 8164, 2233, 9542, 38438, 13999, 12, 5591, 4655, 1830, 4329, 17394, 774... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:54:49 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '93', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998698', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '15ms', 'x-request-id': 'req_91a0900a5c87151a4a8ac43739cd01c2', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e929cbfb996b59c-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_91a0900a5c87151a4a8ac43739cd01c2", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F64532F9C0>, 'json_data': {'input': [[7094, 14009, 21923, 23297, 8164, 56857, 18999, 5524, 7486, 9542, 17721, 44786, 6850, 32330, 46177, 6850, 32330, 5927, 9136, 2233, 35667, 1482, 12, 8164, 21956, 17721, 14082, 32985, 29256, 18437, 68742, 570, 33006, 17279, 31203, 49103, 12507, 19175, 7952, 29256, 44155, 13433, 50819, 5524, 23446, 17394, 17618, 11047, 10298, 8164, 7753, 8131, 3865, 39103, 5927, 35387, 3865, 10693, 1506, 5927, 76401, 86610, 84198, 11, 5524, 14837, 3114, 18437, 13999, 220, 20, 13, 17, 11, 720, 5591, 45658, 7975, 9706, 34613, 28114, 1840, 9706, 25756, 87878, 13, 33006, 17279, 31203, 13373, 91216, 47273, 11047, 98285, 2156, 7975, 14837, 81301, 17165, 10693, 86995, 50693, 6856, 14332, 12415, 46177, 18154, 53280, 91459, 13373, 41291, 15298, 67589, 27717, 20440, 720, 8164, 9706, 7094, 58669, 39280, 86995, 50693, 3865, 10298, 63233, 67... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:54:49 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '160', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998422', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '18ms', 'x-request-id': 'req_2d87f8252128baa0904d2b2aad51908e', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e929cc21b9db59c-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_2d87f8252128baa0904d2b2aad51908e", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F64532F9C0>, 'json_data': {'input': [[1, 2297, 3865, 10693, 67745, 1, 5927, 19190, 1840, 11320, 20346, 10298, 63233, 18868, 61390, 90877, 11, 21923, 23297, 8164, 56857, 28089, 1506, 90457, 67745, 74726, 5927, 19190, 1840, 14009, 15458, 12182, 13373, 20346, 17394, 44786, 5524, 8341, 21708, 4390, 19, 23227, 31203, 41291, 15298, 67589, 14332, 1840, 58317, 64292, 63233, 11122, 7094, 14332, 12415, 11, 17756, 84350, 44786, 7952, 12507, 6856, 13373, 53419, 2156, 3865, 46177, 19175, 66144, 54570, 5524, 10298, 21708, 345, 4898, 13337, 1830, 13404, 17394, 21708, 11, 11047, 1506, 35297, 10693, 1506, 44155, 6856, 7740, 40842, 14082, 44786, 11122, 7094, 14332, 12415, 11, 5927, 2156, 38521, 2233, 5372, 23446, 1532, 5524, 8341, 1840, 7820, 7486, 72331, 54686, 38153, 63233, 40842, 52520, 1506, 70129, 21204, 198, 4898, 16248, 7820, 39233, 19190, 22911, 11320, 91... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:54:50 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '175', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998419', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '18ms', 'x-request-id': 'req_14927f640a0a74f891a279f296a9745a', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e929cc4cdd9b59c-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_14927f640a0a74f891a279f296a9745a", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F64532F9C0>, 'json_data': {'input': [[8164, 44075, 2156, 19188, 31281, 5372, 44786, 20440, 12561, 21956, 28089, 39280, 53419, 39988, 5524, 10298, 4929, 1840, 320, 14082, 34694, 30656, 4655, 42078, 7094, 28089, 48262, 3865, 39127, 39900, 58317, 1840, 11320, 14476, 39900, 720, 51745, 1482, 56008, 94071, 1237, 33006, 12, 58317, 64292, 63233, 7952, 12507, 6856, 5524, 51548, 34082, 35034, 12507, 49103, 38657, 21708, 19175, 14391, 7975, 50506, 86995, 98285, 11, 92175, 61390, 14476, 67745, 23934, 19175, 66144, 17461, 17165, 10693, 91394, 15088, 6856, 720, 7, 79862, 14391, 7975, 50506, 7952, 1532, 21204, 23311, 705, 89666, 35723, 23934, 38153, 63233, 57925, 2156, 19188, 31281, 5372, 20440, 12561, 21956, 28089, 39280, 53419, 39988, 5524, 10298, 4929, 1840, 11, 720, 16494, 1532, 8341, 21923, 14476, 34148, 18868, 5372, 3865, 320, 55257, 50306, 18868, 79686... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:54:50 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '151', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999195', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '9ms', 'x-request-id': 'req_033c8b48bcd008b3c84989877662b337', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e929cc7782fb59c-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_033c8b48bcd008b3c84989877662b337", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F64532F9C0>, 'json_data': {'input': [[8164, 12507, 86610, 18999, 10693, 11, 5927, 38153, 63233, 21477, 7094, 44100, 70129, 21204, 5927, 44075, 44065, 25756, 19188, 4655, 11, 63780, 4655, 46177, 21022, 68506, 2233, 20219, 7975, 1840, 5524, 5173, 3114, 13337, 61379, 12182, 14391, 7975, 50506, 720, 8164, 3114, 13337, 68742, 5927, 35387, 3865, 10693, 1506, 11, 7952, 29256, 44155, 13433, 50819, 89327, 18482, 93099, 4655, 21923, 14476, 1532, 14082, 38972, 39988, 11562, 98285, 14332, 6148, 23297, 4898, 16742, 720, 5591, 19190, 1840, 14009, 57186, 13, 33006, 22, 13, 17, 13, 1691, 23784, 19190, 1840, 14009, 71829, 76401, 86610, 62491, 5524, 61565, 31274, 31274, 11, 19175, 21923, 9239, 37013, 6856, 28241, 10693, 93099, 16742, 20879, 49899, 1506, 89715, 67187, 1830, 6856, 720, 15752, 9239, 18999, 5927, 21022, 1830, 6578, 23630, 19916, 7753, 3865, 11, 68088... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:54:51 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '168', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998434', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '18ms', 'x-request-id': 'req_23877a1caaa511e92735e8f1c040c1f1', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e929ccaab47b59c-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_23877a1caaa511e92735e8f1c040c1f1", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F64532F9C0>, 'json_data': {'input': [[14082, 34694, 13404, 19479, 94975, 5927, 53419, 2156, 3865, 93099, 3865, 37405, 97991, 6856, 47273, 14257, 68462, 17165, 12561, 13337, 28089, 29256, 21956, 17721, 39900, 6850, 32330, 39127, 13999, 720, 13337, 95565, 1830, 22885, 48446, 19619, 7486, 1506, 13373, 5524, 10124, 9239, 94962, 5927, 35387, 3865, 10693, 6856, 9706, 1532, 12561, 13810, 1482, 13404, 19479, 90875, 16742, 25756, 87221, 4655, 76401, 86610, 62491, 13, 33006, 27435, 81376, 47805, 39988, 25756, 87221, 1532, 76401, 86610, 62491, 93129, 73181, 20879, 13999, 2297, 18264, 25756, 87221, 4655, 76401, 86610, 62491, 11, 21923, 14476, 36497, 5173, 39865, 14476, 23680, 4929, 720, 4898, 36594, 63233, 720, 10124, 17461, 60009, 720, 55257, 21708, 720, 8164, 39865, 14476, 23680, 1840, 720, 8164, 2233, 13810, 1482, 13404, 19479, 90875, 63233, 720, 8164, 1... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:54:51 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '171', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998522', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '17ms', 'x-request-id': 'req_7850467ba6b54bd40fbd47aa29ed5b9e', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e929ccd5e28b59c-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_7850467ba6b54bd40fbd47aa29ed5b9e", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F64532F9C0>, 'json_data': {'input': [[4898, 11320, 6578, 8131, 81301, 4898, 12507, 25190, 117, 17766, 1532, 11, 21022, 50945, 59138, 18154, 53280, 91459, 13373, 41291, 15298, 67589, 27717, 5927, 81842, 67745, 90189, 6578, 8131, 81301, 17165, 10693, 720, 11001, 117, 74828, 10693, 13, 33006, 22, 13, 16, 13, 1114, 23784, 35387, 3865, 12426, 48150, 7952, 3865, 30480, 24803, 27717, 18154, 6735, 61390, 2156, 44786, 25190, 109, 38438, 67745, 11562, 37277, 93129, 73181, 57925, 44155, 6578, 8131, 2233, 28089, 18482, 720, 14525, 20346, 17394, 12648, 6578, 720, 5591, 35387, 3865, 10693, 12507, 720, 1840, 11320, 720, 2297, 6578, 23297, 89052, 720, 14525, 20346, 17394, 39900, 720, 1840, 720, 2233, 1532, 15458, 2233, 36352, 14009, 15458, 17766, 39900, 720, 5591, 35387, 3865, 10693, 1506, 11, 720, 1840, 11320, 720, 1482, 10693, 3114, 80205, 5372, 12648, 6578, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:54:52 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '151', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998607', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '16ms', 'x-request-id': 'req_4228f24a55fa606483afa0410ba80ec2', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e929cd1f9c6b59c-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_4228f24a55fa606483afa0410ba80ec2", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F64532F9C0>, 'json_data': {'input': [[5591, 35387, 3865, 10693, 20219, 38722, 9239, 44065, 720, 3865, 77911, 94071, 720, 14082, 9239, 37013, 6856, 18482, 720, 8164, 2233, 13337, 28089, 29256, 21956, 17721, 12648, 6578, 720, 2156, 32330, 39127, 13999, 720, 13337, 95565, 87008, 6578, 720, 4898, 3114, 19619, 7486, 12507, 13, 33006, 22, 13, 18, 13, 1419, 23784, 19190, 1840, 14009, 15458, 12182, 18868, 61390, 2156, 15088, 68828, 94866, 14082, 64292, 21708, 11, 5927, 51745, 1482, 5372, 44786, 5927, 21923, 14476, 35034, 5372, 44065, 11122, 7094, 39280, 11, 720, 7094, 29256, 44155, 13433, 50819, 81376, 86630, 14009, 29893, 21477, 1830, 4329, 17394, 12648, 6578, 5927, 35387, 3865, 10693, 12507, 20879, 93099, 21923, 14476, 1532, 14082, 38972, 39988, 5927, 19190, 1840, 14009, 57186, 720, 7094, 28241, 10693, 11122, 7094, 14332, 12415, 320, 9136, 1506, 7740,... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:54:52 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '96', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998636', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '16ms', 'x-request-id': 'req_7513a999539a1112c9dc7b2154d1328d', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e929cd5ecf5b59c-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_7513a999539a1112c9dc7b2154d1328d", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F64532F9C0>, 'json_data': {'input': [[16, 35889, 1532, 89159, 97747, 17756, 84350, 34082, 39900, 46177, 29619, 39900, 20879, 52520, 18999, 93099, 5927, 19190, 1840, 14009, 57186, 56449, 14525, 720, 29256, 44075, 44100, 29893, 21204, 18154, 11047, 98285, 2156, 7975, 14837, 81301, 4898, 16494, 86995, 50693, 6856, 39280, 6578, 13, 33006, 17, 39903, 14009, 76401, 86610, 62491, 11, 48835, 1532, 90457, 67745, 74726, 93099, 3865, 18600, 29471, 39988, 5524, 70397, 14525, 11320, 9136, 54686, 8379, 5173, 21956, 17721, 1532, 11, 93129, 73181, 720, 8164, 44075, 44155, 6578, 8131, 2233, 28089, 18482, 7952, 35111, 7486, 15458, 17766, 48150, 20879, 52520, 17618, 93099, 5927, 19190, 1840, 14009, 57186, 11, 21923, 41036, 56999, 28089, 1506, 90457, 67745, 21599, 23311, 720, 8164, 12507, 86610, 18999, 11, 7740, 5927, 52520, 17618, 93099, 12561, 13337, 28089, 9706,... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:54:53 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '85', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998590', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '16ms', 'x-request-id': 'req_401ab7e35e38734f0d2daa302fa516a1', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e929cd82f0fb59c-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_401ab7e35e38734f0d2daa302fa516a1", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:53", "name": "llm_service", "levelname": "DEBUG", "message": "No relevant documents found for the prompt.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:53", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: (\"I'm sorry, I could not find relevant information to answer your question.\", None)", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:53", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:54", "name": "handlers", "levelname": "INFO", "message": "Sent response to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:54", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='ec791987-8149-426d-ac22-67a77d604981'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:54:54", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:20", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 16:55:21", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 16:55:22", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 16:55:22", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 16:55:32", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:32", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:32", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:33", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:33", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:33", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:33", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:33", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: ru", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:33", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:33", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:33", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x00000283AE21B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 13, 55, 32, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2341, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193546), <telegram.ext._callbackcontext.CallbackContext object at 0x00000283D384EE40>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:33", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x00000283D37079A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:34", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:34", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:36", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:37", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:37", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:37", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:37", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x00000283AE21B7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), id='1051116660105820600', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 13, 55, 34, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2342, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations')... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:37", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x00000283D253B8A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:37", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:37", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:37", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x00000283D389EBD0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:37", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:37", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x00000283D389EBD0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:37", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:37", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:37", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:37", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:37", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:37", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:37", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:37", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:37", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:48", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:48", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:48", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:48", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u043a\u0430\u043a\u0443\u044e \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432 \u0447\u0430\u0441\u0442\u043d\u043e\u043c \u0434\u043e\u043c\u0435 \u0432 \u043b\u0435\u043d\u0438\u043d\u0433\u0440\u0430\u0434\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:48", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x00000283AE21B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 13, 55, 47, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2344, supergroup_chat_created=False, text='\u043a\u0430\u043a\u0443\u044e \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432 \u0447\u0430\u0441\u0442\u043d\u043e\u043c \u0434\u043e\u043c\u0435 \u0432 \u043b\u0435\u043d\u0438\u043d\u0433\u0440\u0430\u0434\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438'), update_id=881193548), <telegram.ext._callbackcontext.CallbackContext object at 0x00000283D384EE40>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:48", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x00000283D39789A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:48", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='841f64e3-d3cb-497a-9e89-47b93b1d08e1' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:48", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='841f64e3-d3cb-497a-9e89-47b93b1d08e1'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:48", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:48", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x00000283D389EBD0>, '\u043a\u0430\u043a\u0443\u044e \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432 \u0447\u0430\u0441\u0442\u043d\u043e\u043c \u0434\u043e\u043c\u0435 \u0432 \u043b\u0435\u043d\u0438\u043d\u0433\u0440\u0430\u0434\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438'), kwargs: {'chat_history': [HumanMessage(content='\u043a\u0430\u043a\u0443\u044e \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432 \u0447\u0430\u0441\u0442\u043d\u043e\u043c \u0434\u043e\u043c\u0435 \u0432 \u043b\u0435\u043d\u0438\u043d\u0433\u0440\u0430\u0434\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043a\u0430\u043a\u0443\u044e \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432 \u0447\u0430\u0441\u0442\u043d\u043e\u043c \u0434\u043e\u043c\u0435 \u0432 \u043b\u0435\u043d\u0438\u043d\u0433\u0440\u0430\u0434\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438', additional_kwargs={}, response_metadata={}), AIMessage(content=\"I'm sorry, I could not find relevant information to answer your question.\", additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043a\u0430\u043a\u0443\u044e \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432 \u0447\u0430\u0441\u0442\u043d\u043e\u043c \u0434\u043e\u043c\u0435 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0412 \u0447\u0430\u0441\u0442\u043d\u043e\u043c \u0434\u043e\u043c\u0435 \u0432 \u041c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0431\u0443\u0434\u0435\u0442 \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e \u0441\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c\u0441\u044f \u0441 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u043c\u0438 \u043a\u043b\u0438\u043c\u0430\u0442\u0430 \u0438 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0442\u044c \u043a\u043e\u043c\u0444\u043e\u0440\u0442\u043d\u043e\u0435 \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u043d\u0438\u0435. \u0412\u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432 \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u0438, \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0434\u043b\u044f \u0447\u0430\u0441\u0442\u043d\u043e... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000283D39734C0>, 'json_data': {'input': [[4898, 16248, 34148, 5927, 19190, 1840, 14009, 15458, 12182, 14257, 68462, 18264, 5927, 17756, 84350, 94962, 7952, 12507, 1532, 5927, 26539, 9882, 2156, 15752, 11001, 112, 66144, 16742, 21923, 31443, 55523]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 13:55:49 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '137'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999968'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_10fe58278b273151e2be66ce393d7ae5'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=qdZsr6fuC6AAsytddq__kxh24LlAIpFwFMFC422sqx4-1732715749-1.0.1.1-LVT6xqc7.lqqd6teqIy4GmiNA7JMKLidncVgI... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_10fe58278b273151e2be66ce393d7ae5", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:49", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000283D2138C20>, 'json_data': {'input': [[4898, 16248, 34148, 5927, 19190, 1840, 14009, 15458, 12182, 14257, 68462, 18264, 5927, 17756, 84350, 94962, 7952, 12507, 1532, 5927, 26539, 9882, 2156, 15752, 11001, 112, 66144, 16742, 21923, 31443, 55523]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:55:50 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '88', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999968', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_8d0e33f9d43d147b42107a2d261b1700', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e929e3b2b03c02e-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_8d0e33f9d43d147b42107a2d261b1700", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000283D2138C20>, 'json_data': {'input': [[12, 12561, 16494, 5372, 18999, 42078, 7094, 28089, 48262, 3865, 39127, 44786, 5173, 15088, 5591, 17721, 23311, 2233, 44786, 12561, 9542, 38438, 13999, 12, 5591, 4655, 1830, 4329, 17394, 44786, 14257, 68462, 15088, 5524, 720, 2233, 15298, 49907, 7753, 30436, 21708, 11047, 67124, 31443, 21477, 1830, 4329, 17394, 39900, 5927, 35387, 3865, 10693, 1506, 26, 33006, 12, 14257, 77911, 94071, 84714, 38521, 70959, 6856, 11, 40842, 52520, 32062, 63233, 7820, 5524, 10124, 9239, 2156, 72952, 5927, 35387, 3865, 10693, 6856, 9706, 3865, 11, 78876, 8164, 7975, 21956, 5372, 2156, 72952, 5927, 720, 6578, 50436, 4898, 5591, 17721, 23311, 2233, 94962, 67969, 48262, 9239, 1532, 40842, 81803, 7975, 4898, 12507, 21477, 12426, 12394, 50436, 1506, 14476, 47295, 49103, 38657, 1506, 18154, 220, 22, 13, 806, 13, 972, 26, 33006, 17279, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:55:51 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '150', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998575', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '17ms', 'x-request-id': 'req_d1b2f3f8576e16bed8e90291059541fe', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e929e40acb9c02e-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_d1b2f3f8576e16bed8e90291059541fe", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000283D2138C20>, 'json_data': {'input': [[12, 47353, 67445, 39103, 11562, 38822, 2233, 15088, 11320, 6578, 43203, 7740, 7820, 50223, 52744, 5927, 35387, 3865, 10693, 1506, 19175, 21923, 23297, 8164, 56857, 28089, 1506, 70129, 21204, 5927, 19190, 1840, 14009, 15458, 21708, 720, 2297, 22918, 6735, 35034, 5372, 12648, 6578, 5173, 14082, 56999, 7094, 9882, 10298, 5927, 11047, 56857, 17618, 25756, 87878, 26, 33006, 12, 20440, 76401, 86610, 62491, 7740, 11122, 17766, 92457, 22918, 6735, 35034, 5372, 39900, 62315, 8341, 2233, 28089, 39280, 13, 33006, 22, 13, 16, 13, 19, 720, 25079, 14009, 720, 55257, 35034, 5372, 44786, 720, 9136, 7094, 14332, 12415, 720, 41036, 13404, 73181, 720, 8164, 44075, 44155, 6578, 8131, 2233, 28089, 18482, 720, 6578, 98285, 14332, 6148, 23297, 4898, 34148, 720, 8164, 2233, 9542, 38438, 13999, 12, 5591, 4655, 1830, 4329, 17394, 774... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:55:52 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '99', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998698', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '15ms', 'x-request-id': 'req_3d6df3428e5ec02b56c1ed7619684d99', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e929e460ec9c02e-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_3d6df3428e5ec02b56c1ed7619684d99", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000283D2138C20>, 'json_data': {'input': [[7094, 14009, 21923, 23297, 8164, 56857, 18999, 5524, 7486, 9542, 17721, 44786, 6850, 32330, 46177, 6850, 32330, 5927, 9136, 2233, 35667, 1482, 12, 8164, 21956, 17721, 14082, 32985, 29256, 18437, 68742, 570, 33006, 17279, 31203, 49103, 12507, 19175, 7952, 29256, 44155, 13433, 50819, 5524, 23446, 17394, 17618, 11047, 10298, 8164, 7753, 8131, 3865, 39103, 5927, 35387, 3865, 10693, 1506, 5927, 76401, 86610, 84198, 11, 5524, 14837, 3114, 18437, 13999, 220, 20, 13, 17, 11, 720, 5591, 45658, 7975, 9706, 34613, 28114, 1840, 9706, 25756, 87878, 13, 33006, 17279, 31203, 13373, 91216, 47273, 11047, 98285, 2156, 7975, 14837, 81301, 17165, 10693, 86995, 50693, 6856, 14332, 12415, 46177, 18154, 53280, 91459, 13373, 41291, 15298, 67589, 27717, 20440, 720, 8164, 9706, 7094, 58669, 39280, 86995, 50693, 3865, 10298, 63233, 67... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:55:53 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '143', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998422', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '18ms', 'x-request-id': 'req_fd61e0264c0541731abbb8e1ffb16460', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e929e4d18d9c02e-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_fd61e0264c0541731abbb8e1ffb16460", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000283D2138C20>, 'json_data': {'input': [[1, 2297, 3865, 10693, 67745, 1, 5927, 19190, 1840, 11320, 20346, 10298, 63233, 18868, 61390, 90877, 11, 21923, 23297, 8164, 56857, 28089, 1506, 90457, 67745, 74726, 5927, 19190, 1840, 14009, 15458, 12182, 13373, 20346, 17394, 44786, 5524, 8341, 21708, 4390, 19, 23227, 31203, 41291, 15298, 67589, 14332, 1840, 58317, 64292, 63233, 11122, 7094, 14332, 12415, 11, 17756, 84350, 44786, 7952, 12507, 6856, 13373, 53419, 2156, 3865, 46177, 19175, 66144, 54570, 5524, 10298, 21708, 345, 4898, 13337, 1830, 13404, 17394, 21708, 11, 11047, 1506, 35297, 10693, 1506, 44155, 6856, 7740, 40842, 14082, 44786, 11122, 7094, 14332, 12415, 11, 5927, 2156, 38521, 2233, 5372, 23446, 1532, 5524, 8341, 1840, 7820, 7486, 72331, 54686, 38153, 63233, 40842, 52520, 1506, 70129, 21204, 198, 4898, 16248, 7820, 39233, 19190, 22911, 11320, 91... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:55:54 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '209', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998419', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '18ms', 'x-request-id': 'req_716455f056ed44b82e9f179817f251e6', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e929e542bddc02e-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_716455f056ed44b82e9f179817f251e6", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000283D2138C20>, 'json_data': {'input': [[8164, 44075, 2156, 19188, 31281, 5372, 44786, 20440, 12561, 21956, 28089, 39280, 53419, 39988, 5524, 10298, 4929, 1840, 320, 14082, 34694, 30656, 4655, 42078, 7094, 28089, 48262, 3865, 39127, 39900, 58317, 1840, 11320, 14476, 39900, 720, 51745, 1482, 56008, 94071, 1237, 33006, 12, 58317, 64292, 63233, 7952, 12507, 6856, 5524, 51548, 34082, 35034, 12507, 49103, 38657, 21708, 19175, 14391, 7975, 50506, 86995, 98285, 11, 92175, 61390, 14476, 67745, 23934, 19175, 66144, 17461, 17165, 10693, 91394, 15088, 6856, 720, 7, 79862, 14391, 7975, 50506, 7952, 1532, 21204, 23311, 705, 89666, 35723, 23934, 38153, 63233, 57925, 2156, 19188, 31281, 5372, 20440, 12561, 21956, 28089, 39280, 53419, 39988, 5524, 10298, 4929, 1840, 11, 720, 16494, 1532, 8341, 21923, 14476, 34148, 18868, 5372, 3865, 320, 55257, 50306, 18868, 79686... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:55:55 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '92', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999195', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '9ms', 'x-request-id': 'req_4f727f144b07311afe63695bcadacc7b', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e929e5a0e0dc02e-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_4f727f144b07311afe63695bcadacc7b", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000283D2138C20>, 'json_data': {'input': [[8164, 12507, 86610, 18999, 10693, 11, 5927, 38153, 63233, 21477, 7094, 44100, 70129, 21204, 5927, 44075, 44065, 25756, 19188, 4655, 11, 63780, 4655, 46177, 21022, 68506, 2233, 20219, 7975, 1840, 5524, 5173, 3114, 13337, 61379, 12182, 14391, 7975, 50506, 720, 8164, 3114, 13337, 68742, 5927, 35387, 3865, 10693, 1506, 11, 7952, 29256, 44155, 13433, 50819, 89327, 18482, 93099, 4655, 21923, 14476, 1532, 14082, 38972, 39988, 11562, 98285, 14332, 6148, 23297, 4898, 16742, 720, 5591, 19190, 1840, 14009, 57186, 13, 33006, 22, 13, 17, 13, 1691, 23784, 19190, 1840, 14009, 71829, 76401, 86610, 62491, 5524, 61565, 31274, 31274, 11, 19175, 21923, 9239, 37013, 6856, 28241, 10693, 93099, 16742, 20879, 49899, 1506, 89715, 67187, 1830, 6856, 720, 15752, 9239, 18999, 5927, 21022, 1830, 6578, 23630, 19916, 7753, 3865, 11, 68088... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:55:56 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '185', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998434', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '18ms', 'x-request-id': 'req_fbd760c237b39df1550ed86e6a8dc8d8', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e929e60efefc02e-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_fbd760c237b39df1550ed86e6a8dc8d8", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000283D2138C20>, 'json_data': {'input': [[14082, 34694, 13404, 19479, 94975, 5927, 53419, 2156, 3865, 93099, 3865, 37405, 97991, 6856, 47273, 14257, 68462, 17165, 12561, 13337, 28089, 29256, 21956, 17721, 39900, 6850, 32330, 39127, 13999, 720, 13337, 95565, 1830, 22885, 48446, 19619, 7486, 1506, 13373, 5524, 10124, 9239, 94962, 5927, 35387, 3865, 10693, 6856, 9706, 1532, 12561, 13810, 1482, 13404, 19479, 90875, 16742, 25756, 87221, 4655, 76401, 86610, 62491, 13, 33006, 27435, 81376, 47805, 39988, 25756, 87221, 1532, 76401, 86610, 62491, 93129, 73181, 20879, 13999, 2297, 18264, 25756, 87221, 4655, 76401, 86610, 62491, 11, 21923, 14476, 36497, 5173, 39865, 14476, 23680, 4929, 720, 4898, 36594, 63233, 720, 10124, 17461, 60009, 720, 55257, 21708, 720, 8164, 39865, 14476, 23680, 1840, 720, 8164, 2233, 13810, 1482, 13404, 19479, 90875, 63233, 720, 8164, 1... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:55:57 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '136', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998522', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '17ms', 'x-request-id': 'req_a06b0020d584922216d2ca63b4f4fdee', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e929e6709fcc02e-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_a06b0020d584922216d2ca63b4f4fdee", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000283D2138C20>, 'json_data': {'input': [[4898, 11320, 6578, 8131, 81301, 4898, 12507, 25190, 117, 17766, 1532, 11, 21022, 50945, 59138, 18154, 53280, 91459, 13373, 41291, 15298, 67589, 27717, 5927, 81842, 67745, 90189, 6578, 8131, 81301, 17165, 10693, 720, 11001, 117, 74828, 10693, 13, 33006, 22, 13, 16, 13, 1114, 23784, 35387, 3865, 12426, 48150, 7952, 3865, 30480, 24803, 27717, 18154, 6735, 61390, 2156, 44786, 25190, 109, 38438, 67745, 11562, 37277, 93129, 73181, 57925, 44155, 6578, 8131, 2233, 28089, 18482, 720, 14525, 20346, 17394, 12648, 6578, 720, 5591, 35387, 3865, 10693, 12507, 720, 1840, 11320, 720, 2297, 6578, 23297, 89052, 720, 14525, 20346, 17394, 39900, 720, 1840, 720, 2233, 1532, 15458, 2233, 36352, 14009, 15458, 17766, 39900, 720, 5591, 35387, 3865, 10693, 1506, 11, 720, 1840, 11320, 720, 1482, 10693, 3114, 80205, 5372, 12648, 6578, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:55:57 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '151', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998607', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '16ms', 'x-request-id': 'req_f037feda2537bb4d71df805f2713a889', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e929e6aeac7c02e-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_f037feda2537bb4d71df805f2713a889", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000283D2138C20>, 'json_data': {'input': [[5591, 35387, 3865, 10693, 20219, 38722, 9239, 44065, 720, 3865, 77911, 94071, 720, 14082, 9239, 37013, 6856, 18482, 720, 8164, 2233, 13337, 28089, 29256, 21956, 17721, 12648, 6578, 720, 2156, 32330, 39127, 13999, 720, 13337, 95565, 87008, 6578, 720, 4898, 3114, 19619, 7486, 12507, 13, 33006, 22, 13, 18, 13, 1419, 23784, 19190, 1840, 14009, 15458, 12182, 18868, 61390, 2156, 15088, 68828, 94866, 14082, 64292, 21708, 11, 5927, 51745, 1482, 5372, 44786, 5927, 21923, 14476, 35034, 5372, 44065, 11122, 7094, 39280, 11, 720, 7094, 29256, 44155, 13433, 50819, 81376, 86630, 14009, 29893, 21477, 1830, 4329, 17394, 12648, 6578, 5927, 35387, 3865, 10693, 12507, 20879, 93099, 21923, 14476, 1532, 14082, 38972, 39988, 5927, 19190, 1840, 14009, 57186, 720, 7094, 28241, 10693, 11122, 7094, 14332, 12415, 320, 9136, 1506, 7740,... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:55:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:56:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:56:00 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '222', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998635', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '16ms', 'x-request-id': 'req_d9039e54758915a7225f75295c228a6c', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e929e6deb93c02e-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:56:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_d9039e54758915a7225f75295c228a6c", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:56:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000283D2138C20>, 'json_data': {'input': [[16, 35889, 1532, 89159, 97747, 17756, 84350, 34082, 39900, 46177, 29619, 39900, 20879, 52520, 18999, 93099, 5927, 19190, 1840, 14009, 57186, 56449, 14525, 720, 29256, 44075, 44100, 29893, 21204, 18154, 11047, 98285, 2156, 7975, 14837, 81301, 4898, 16494, 86995, 50693, 6856, 39280, 6578, 13, 33006, 17, 39903, 14009, 76401, 86610, 62491, 11, 48835, 1532, 90457, 67745, 74726, 93099, 3865, 18600, 29471, 39988, 5524, 70397, 14525, 11320, 9136, 54686, 8379, 5173, 21956, 17721, 1532, 11, 93129, 73181, 720, 8164, 44075, 44155, 6578, 8131, 2233, 28089, 18482, 7952, 35111, 7486, 15458, 17766, 48150, 20879, 52520, 17618, 93099, 5927, 19190, 1840, 14009, 57186, 11, 21923, 41036, 56999, 28089, 1506, 90457, 67745, 21599, 23311, 720, 8164, 12507, 86610, 18999, 11, 7740, 5927, 52520, 17618, 93099, 12561, 13337, 28089, 9706,... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:56:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:56:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:56:00 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '96', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998590', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '16ms', 'x-request-id': 'req_8f6ce01ff888509ee1e475726069c5fd', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e929e7d7883c02e-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:56:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_8f6ce01ff888509ee1e475726069c5fd", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:56:01", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 16:56:00. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n- \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0438\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u043e\u043a\u0432\u0430\u0440\u0442\u0438\u0440\u043d\u044b\u0445 \u043f\u0440\u0438\u0442\u043e\u0447\u043d\u043e-\u0432\u044b\u0442\u044f\u0436\u043d\u044b\u0445 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043e\u043a \u0441 \\n\u0440\u0435\u043a\u0443\u043f\u0435\u0440\u0430\u0446\u0438\u0435\u0439 \u0442\u0435\u043f\u043b\u0430 \u0432\u044b\u0442\u044f\u0436\u043d\u043e\u0433\u043e \u0432\u043e\u0437\u0434\u0443\u0445\u0430; \\n \\n- \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u0441\u043f\u0443\u0442\u043d\u0438\u043a\u043e\u0432, \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c\u044b\u0445 \u043a \u0441\u0431\u043e\u0440\u043d\u043e\u043c\u0443 \u0432\u043e\u0437\u0434\u0443\u0445\u043e\u0432\u043e\u0434\u0443, \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u043d\u043e\u043c\u0443 \u0432 \\n\u043c\u0435\u0436\u043a\u0432\u0430\u0440\u0442\u0438\u0440\u043d\u043e\u043c \u043a\u043e\u0440\u0438... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:56:01", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:56:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 13:56:20 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '15425'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '783632'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '1.227s'), ('x-request-id', 'req_e235027cee08135f6aa0bb6475f70392'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=hmU_A8KaNK9QuDzTDZrkQyQbpwHsB1JI_nlHPiI3UrU-1732715780-1.0.1.1-hYzTnPHK76aVlr3OzhgKIddaC9E3uk_rUZ6McUb7NuXBIxrlvQBm3FsH6i1W4FTs4z91o27y48nlAxEEeYHnWw; path=/; expires=Wed, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:56:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_e235027cee08135f6aa0bb6475f70392", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:56:20", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:56:20", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0414\u043b\u044f \u0447\u0430\u0441\u0442\u043d\u043e\u0433\u043e \u0434\u043e\u043c\u0430 \u0432 \u041b\u0435\u043d\u0438\u043d\u0433\u0440\u0430\u0434\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u0443\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u0438, \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u044f \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u0440\u0435\u0433\u0438\u043e\u043d\u0430. \u0412\u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432:\\n\\n1. <b>\u041c\u0435\u0445\u0430\u043d\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043f\u0440\u0438\u0442\u043e\u0447\u043d\u043e-\u0432\u044b\u0442\u044f\u0436\u043d\u0430\u044f \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044f \u0441 \u0440\u0435\u043a\u0443\u043f\u0435\u0440\u0430\u0446\u0438\u0435\u0439 \u0442\u0435\u043f\u043b\u0430</b>:\\n\u2022 \u041e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u044b\u0439 \u043f\u0440\u0438\u0442\u043e\u043a \u0441\u0432\u0435\u0436\u0435\u0433\u043e \u0432\u043e\u0437\u0434\u0443\u0445\u0430 \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043e\u0442\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u043e\u0433\u043e.\\n\u2022 \u0420\u0435\u043a\u0443\u043f\u0435\u0440\u0430\u0442\u043e\u0440 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c \u0442\u0435\u043f\u043b\u043e, \u0447\u0442\u043e \u044d\u043a\u043e\u043d\u043e\u043c\u0438\u0442 \u044d\u043d\u0435\u0440\u0433\u0438\u044e \u0432 \u0445\u043e\u043b\u043e\u0434\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f \u0433\u043e\u0434\u0430.\\n\u2022 \u0422\u0430\u043a\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f \u043a\u0440\u0443\u0433\u043b\u043e\u0433\u043e\u0434\u0438\u0447\u043d\u043e\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u044f \u043a\u043e\u043c\u0444\u043e\u0440\u0442\u043d\u043e\u0433\u043e \u043c\u0438\u043a\u0440\u043e\u043a\u043b\u0438\u043c\u0430\u0442\u0430.\\n\\n2. <b>\u0418\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u043e\u043a\u043e\u043c\u043d\u0430\u0442\u043d\u044b\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 (\u0431\u0440\u0438\u0437\u0435\u0440\u044b)</b>:\\n\u2022 \u041f\u043e\u0434\u0445\u043e\u0434\u044f\u0442 \u0434\u043b\u044f \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0435\u043d\u0438\u044f \u043f\u0440\u0438\u0442\u043e\u043a\u0430 \u0441\u0432\u0435\u0436\u0435\u0433\u043e \u0432\u043e\u0437\u0434\u0443\u0445\u0430 \u0432 \u043a\u0430\u0436\u0434\u043e\u0439 \u043a\u043e\u043c\u043d\u0430\u0442\u0435.\\n\u2022 \u041c\u043e\u0433\u0443\u0442 \u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044e \u0438 \u043f\u043e\u0434\u043e\u0433\u0440\u0435\u0432 \u0432\u043e\u0437\u0434\u0443\u0445\u0430.\\n\u2022 \u041f\u0440\u043e\u0441\u0442\u043e\u0439 \u043c\u043e\u043d\u0442\u0430\u0436 \u0438 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0435\u0433\u0443\u043b\u0438\u0440\u043e\u0432\u043a\u0438 \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u043f\u043e\u0442\u0440\u0435\u0431\u043d\u043e\u0441\u0442\u0435\u0439 \u0436\u0438\u043b\u044c\u0446\u043e\u0432.\\n\\n3. <b>\u0415\u0441\u0442\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044f \u0441 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438 \u0432\u044b\u0442\u044f\u0436\u043d\u044b\u043c\u0438 \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0442\u043e\u0440\u0430\u043c\u0438</b>:\\n\u2022 \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0435\u0441\u0442\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u043e\u0439 \u0442\u044f\u0433\u0438 \u0434\u043b\u044f \u0432\u043e\u0437\u0434\u0443\u0445\u043e\u043e\u0431\u043c\u0435\u043d\u0430.\\n\u2022 \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0432\u044b\u0442\u044f\u0436\u043d\u044b\u0445 \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0442\u043e\u0440\u043e\u0432 \u0432 \u043a\u0443\u0445\u043d\u0435 \u0438 \u0441\u0430\u043d\u0443... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:56:20", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:56:21", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:56:21", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='841f64e3-d3cb-497a-9e89-47b93b1d08e1'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:56:21", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:25", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 16:58:27", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 16:58:27", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 16:58:28", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 16:58:33", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:33", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:33", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:34", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:34", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:34", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:34", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:34", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: ru", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:35", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:35", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:35", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x000001F0FFDAB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 13, 58, 33, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2346, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193549), <telegram.ext._callbackcontext.CallbackContext object at 0x000001F0A541EE40>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:35", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x000001F0822D0CA0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:35", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:35", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:39", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:39", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:39", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:39", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:39", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x000001F0FFDAB7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), id='1051116659513146790', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 13, 58, 35, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2347, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations')... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:39", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x000001F0A410B8A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:39", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:39", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:39", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x000001F0A54F57C0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:39", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:39", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x000001F0A54F57C0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:39", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:39", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:39", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:39", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:39", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:39", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:39", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:40", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:58:40", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:31", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:31", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:31", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:31", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u043a\u0430\u043a\u0443\u044e \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432 \u0447\u0430\u0441\u0442\u043d\u043e\u043c \u0434\u043e\u043c\u0435 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:31", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x000001F0FFDAB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 13, 59, 30, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2349, supergroup_chat_created=False, text='\u043a\u0430\u043a\u0443\u044e \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432 \u0447\u0430\u0441\u0442\u043d\u043e\u043c \u0434\u043e\u043c\u0435 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438'), update_id=881193551), <telegram.ext._callbackcontext.CallbackContext object at 0x000001F0A541EE40>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:31", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x000001F0A54E89A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:31", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='8328aa3b-bc68-40a8-bd47-764223165066' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:31", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='8328aa3b-bc68-40a8-bd47-764223165066'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:31", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:31", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x000001F0A54F57C0>, '\u043a\u0430\u043a\u0443\u044e \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432 \u0447\u0430\u0441\u0442\u043d\u043e\u043c \u0434\u043e\u043c\u0435 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438'), kwargs: {'chat_history': [HumanMessage(content='\u043a\u0430\u043a\u0443\u044e \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432 \u0447\u0430\u0441\u0442\u043d\u043e\u043c \u0434\u043e\u043c\u0435 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043a\u0430\u043a\u0443\u044e \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432 \u0447\u0430\u0441\u0442\u043d\u043e\u043c \u0434\u043e\u043c\u0435 \u0432 \u043b\u0435\u043d\u0438\u043d\u0433\u0440\u0430\u0434\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0414\u043b\u044f \u0447\u0430\u0441\u0442\u043d\u043e\u0433\u043e \u0434\u043e\u043c\u0430 \u0432 \u041b\u0435\u043d\u0438\u043d\u0433\u0440\u0430\u0434\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u0443\u044e \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u0438, \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u044f \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u0440\u0435\u0433\u0438\u043e\u043d\u0430. \u0412\u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432:\\n\\n1. <b>\u041c\u0435\u0445\u0430\u043d\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043f\u0440\u0438\u0442\u043e\u0447\u043d\u043e-\u0432\u044b\u0442\u044f\u0436\u043d\u0430\u044f \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044f \u0441 \u0440\u0435\u043a\u0443\u043f\u0435\u0440\u0430\u0446\u0438\u0435\u0439 \u0442\u0435\u043f\u043b\u0430</b>:\\n\u2022 \u041e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u044b\u0439 \u043f\u0440\u0438\u0442\u043e\u043a \u0441\u0432\u0435\u0436\u0435\u0433\u043e \u0432\u043e\u0437\u0434\u0443\u0445\u0430 \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043e\u0442\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u043e\u0433\u043e.\\n\u2022 \u0420\u0435\u043a\u0443\u043f\u0435\u0440\u0430\u0442\u043e\u0440 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c \u0442\u0435\u043f\u043b\u043e, \u0447\u0442\u043e \u044d\u043a\u043e\u043d\u043e\u043c\u0438\u0442 \u044d\u043d\u0435\u0440\u0433\u0438\u044e \u0432 \u0445\u043e\u043b\u043e\u0434\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f \u0433\u043e\u0434\u0430.\\n\u2022 \u0422\u0430\u043a\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f \u043a\u0440\u0443\u0433\u043b\u043e\u0433\u043e\u0434\u0438\u0447\u043d\u043e\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u0438 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u044f \u043a\u043e\u043c\u0444\u043e\u0440\u0442\u043d\u043e\u0433\u043e \u043c\u0438\u043a\u0440\u043e\u043a\u043b\u0438\u043c\u0430\u0442\u0430.\\n\\n2. <b>\u0418\u043d... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:31", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F0A54E3D80>, 'json_data': {'input': [[4898, 16248, 34148, 5927, 19190, 1840, 14009, 15458, 12182, 14257, 68462, 18264, 5927, 17756, 84350, 94962, 7952, 12507, 1532, 5927, 11562, 23630, 90877, 66144, 16742, 21923, 31443, 55523]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:31", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:32", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 13:59:32 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '81'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999972'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_c14c10f74030efec262d282a0a6e478c'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=g3j.4zE9EjJdlV70ugUNk6JZ0bJwUKC7erVnPrbAzd0-1732715972-1.0.1.1-0JS.VZlfWpXDNkXokVPJTX_Ot2I5cgVfVc1Ksu... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:32", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_c14c10f74030efec262d282a0a6e478c", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:32", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:32", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F0A3D08C20>, 'json_data': {'input': [[4898, 16248, 34148, 5927, 19190, 1840, 14009, 15458, 12182, 14257, 68462, 18264, 5927, 17756, 84350, 94962, 7952, 12507, 1532, 5927, 11562, 23630, 90877, 66144, 16742, 21923, 31443, 55523]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:32", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:33", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:59:33 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '73', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999972', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_a0a287d4f20787c7f2ab98602d22d878', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92a3ac7f602dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:33", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_a0a287d4f20787c7f2ab98602d22d878", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:33", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F0A3D08C20>, 'json_data': {'input': [[12, 12561, 16494, 5372, 18999, 42078, 7094, 28089, 48262, 3865, 39127, 44786, 5173, 15088, 5591, 17721, 23311, 2233, 44786, 12561, 9542, 38438, 13999, 12, 5591, 4655, 1830, 4329, 17394, 44786, 14257, 68462, 15088, 5524, 720, 2233, 15298, 49907, 7753, 30436, 21708, 11047, 67124, 31443, 21477, 1830, 4329, 17394, 39900, 5927, 35387, 3865, 10693, 1506, 26, 33006, 12, 14257, 77911, 94071, 84714, 38521, 70959, 6856, 11, 40842, 52520, 32062, 63233, 7820, 5524, 10124, 9239, 2156, 72952, 5927, 35387, 3865, 10693, 6856, 9706, 3865, 11, 78876, 8164, 7975, 21956, 5372, 2156, 72952, 5927, 720, 6578, 50436, 4898, 5591, 17721, 23311, 2233, 94962, 67969, 48262, 9239, 1532, 40842, 81803, 7975, 4898, 12507, 21477, 12426, 12394, 50436, 1506, 14476, 47295, 49103, 38657, 1506, 18154, 220, 22, 13, 806, 13, 972, 26, 33006, 17279, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:33", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:59:34 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '179', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998575', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '17ms', 'x-request-id': 'req_f7b4b60e415d7f3d7241b97bee6d7741', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92a3b1ea3d2dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_f7b4b60e415d7f3d7241b97bee6d7741", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F0A3D08C20>, 'json_data': {'input': [[12, 47353, 67445, 39103, 11562, 38822, 2233, 15088, 11320, 6578, 43203, 7740, 7820, 50223, 52744, 5927, 35387, 3865, 10693, 1506, 19175, 21923, 23297, 8164, 56857, 28089, 1506, 70129, 21204, 5927, 19190, 1840, 14009, 15458, 21708, 720, 2297, 22918, 6735, 35034, 5372, 12648, 6578, 5173, 14082, 56999, 7094, 9882, 10298, 5927, 11047, 56857, 17618, 25756, 87878, 26, 33006, 12, 20440, 76401, 86610, 62491, 7740, 11122, 17766, 92457, 22918, 6735, 35034, 5372, 39900, 62315, 8341, 2233, 28089, 39280, 13, 33006, 22, 13, 16, 13, 19, 720, 25079, 14009, 720, 55257, 35034, 5372, 44786, 720, 9136, 7094, 14332, 12415, 720, 41036, 13404, 73181, 720, 8164, 44075, 44155, 6578, 8131, 2233, 28089, 18482, 720, 6578, 98285, 14332, 6148, 23297, 4898, 34148, 720, 8164, 2233, 9542, 38438, 13999, 12, 5591, 4655, 1830, 4329, 17394, 774... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:35", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:59:34 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '163', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998698', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '15ms', 'x-request-id': 'req_871024430f64011060c2151d5a65a1d6', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92a3b72d162dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:35", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_871024430f64011060c2151d5a65a1d6", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:35", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F0A3D08C20>, 'json_data': {'input': [[7094, 14009, 21923, 23297, 8164, 56857, 18999, 5524, 7486, 9542, 17721, 44786, 6850, 32330, 46177, 6850, 32330, 5927, 9136, 2233, 35667, 1482, 12, 8164, 21956, 17721, 14082, 32985, 29256, 18437, 68742, 570, 33006, 17279, 31203, 49103, 12507, 19175, 7952, 29256, 44155, 13433, 50819, 5524, 23446, 17394, 17618, 11047, 10298, 8164, 7753, 8131, 3865, 39103, 5927, 35387, 3865, 10693, 1506, 5927, 76401, 86610, 84198, 11, 5524, 14837, 3114, 18437, 13999, 220, 20, 13, 17, 11, 720, 5591, 45658, 7975, 9706, 34613, 28114, 1840, 9706, 25756, 87878, 13, 33006, 17279, 31203, 13373, 91216, 47273, 11047, 98285, 2156, 7975, 14837, 81301, 17165, 10693, 86995, 50693, 6856, 14332, 12415, 46177, 18154, 53280, 91459, 13373, 41291, 15298, 67589, 27717, 20440, 720, 8164, 9706, 7094, 58669, 39280, 86995, 50693, 3865, 10298, 63233, 67... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:35", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:36", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:59:35 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '122', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998422', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '18ms', 'x-request-id': 'req_dadc501f77bcf44ad3062e2b4a73c80d', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92a3ba8e592dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:36", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_dadc501f77bcf44ad3062e2b4a73c80d", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:36", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F0A551F740>, 'json_data': {'input': [[1, 2297, 3865, 10693, 67745, 1, 5927, 19190, 1840, 11320, 20346, 10298, 63233, 18868, 61390, 90877, 11, 21923, 23297, 8164, 56857, 28089, 1506, 90457, 67745, 74726, 5927, 19190, 1840, 14009, 15458, 12182, 13373, 20346, 17394, 44786, 5524, 8341, 21708, 4390, 19, 23227, 31203, 41291, 15298, 67589, 14332, 1840, 58317, 64292, 63233, 11122, 7094, 14332, 12415, 11, 17756, 84350, 44786, 7952, 12507, 6856, 13373, 53419, 2156, 3865, 46177, 19175, 66144, 54570, 5524, 10298, 21708, 345, 4898, 13337, 1830, 13404, 17394, 21708, 11, 11047, 1506, 35297, 10693, 1506, 44155, 6856, 7740, 40842, 14082, 44786, 11122, 7094, 14332, 12415, 11, 5927, 2156, 38521, 2233, 5372, 23446, 1532, 5524, 8341, 1840, 7820, 7486, 72331, 54686, 38153, 63233, 40842, 52520, 1506, 70129, 21204, 198, 4898, 16248, 7820, 39233, 19190, 22911, 11320, 91... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:36", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:36", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:59:36 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '206', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998419', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '18ms', 'x-request-id': 'req_853055fbc936b9483dabd75ceab1024e', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92a3c1891d2dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:36", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_853055fbc936b9483dabd75ceab1024e", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:36", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F0A551F740>, 'json_data': {'input': [[5591, 35387, 3865, 10693, 20219, 38722, 9239, 44065, 720, 3865, 77911, 94071, 720, 14082, 9239, 37013, 6856, 18482, 720, 8164, 2233, 13337, 28089, 29256, 21956, 17721, 12648, 6578, 720, 2156, 32330, 39127, 13999, 720, 13337, 95565, 87008, 6578, 720, 4898, 3114, 19619, 7486, 12507, 13, 33006, 22, 13, 18, 13, 1419, 23784, 19190, 1840, 14009, 15458, 12182, 18868, 61390, 2156, 15088, 68828, 94866, 14082, 64292, 21708, 11, 5927, 51745, 1482, 5372, 44786, 5927, 21923, 14476, 35034, 5372, 44065, 11122, 7094, 39280, 11, 720, 7094, 29256, 44155, 13433, 50819, 81376, 86630, 14009, 29893, 21477, 1830, 4329, 17394, 12648, 6578, 5927, 35387, 3865, 10693, 12507, 20879, 93099, 21923, 14476, 1532, 14082, 38972, 39988, 5927, 19190, 1840, 14009, 57186, 720, 7094, 28241, 10693, 11122, 7094, 14332, 12415, 320, 9136, 1506, 7740,... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:36", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:37", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:59:36 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '146', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998636', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '16ms', 'x-request-id': 'req_58f4e0fe3b7a80f4e067c55052def925', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92a3c4ab2c2dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:37", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_58f4e0fe3b7a80f4e067c55052def925", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:37", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F0A551F740>, 'json_data': {'input': [[8164, 44075, 2156, 19188, 31281, 5372, 44786, 20440, 12561, 21956, 28089, 39280, 53419, 39988, 5524, 10298, 4929, 1840, 320, 14082, 34694, 30656, 4655, 42078, 7094, 28089, 48262, 3865, 39127, 39900, 58317, 1840, 11320, 14476, 39900, 720, 51745, 1482, 56008, 94071, 1237, 33006, 12, 58317, 64292, 63233, 7952, 12507, 6856, 5524, 51548, 34082, 35034, 12507, 49103, 38657, 21708, 19175, 14391, 7975, 50506, 86995, 98285, 11, 92175, 61390, 14476, 67745, 23934, 19175, 66144, 17461, 17165, 10693, 91394, 15088, 6856, 720, 7, 79862, 14391, 7975, 50506, 7952, 1532, 21204, 23311, 705, 89666, 35723, 23934, 38153, 63233, 57925, 2156, 19188, 31281, 5372, 20440, 12561, 21956, 28089, 39280, 53419, 39988, 5524, 10298, 4929, 1840, 11, 720, 16494, 1532, 8341, 21923, 14476, 34148, 18868, 5372, 3865, 320, 55257, 50306, 18868, 79686... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:37", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:37", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:59:37 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '97', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999194', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '9ms', 'x-request-id': 'req_cb310adbc231f6c0cf696b0d2835e117', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92a3c7acba2dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:37", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_cb310adbc231f6c0cf696b0d2835e117", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:37", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F0A551F740>, 'json_data': {'input': [[8164, 12507, 86610, 18999, 10693, 11, 5927, 38153, 63233, 21477, 7094, 44100, 70129, 21204, 5927, 44075, 44065, 25756, 19188, 4655, 11, 63780, 4655, 46177, 21022, 68506, 2233, 20219, 7975, 1840, 5524, 5173, 3114, 13337, 61379, 12182, 14391, 7975, 50506, 720, 8164, 3114, 13337, 68742, 5927, 35387, 3865, 10693, 1506, 11, 7952, 29256, 44155, 13433, 50819, 89327, 18482, 93099, 4655, 21923, 14476, 1532, 14082, 38972, 39988, 11562, 98285, 14332, 6148, 23297, 4898, 16742, 720, 5591, 19190, 1840, 14009, 57186, 13, 33006, 22, 13, 17, 13, 1691, 23784, 19190, 1840, 14009, 71829, 76401, 86610, 62491, 5524, 61565, 31274, 31274, 11, 19175, 21923, 9239, 37013, 6856, 28241, 10693, 93099, 16742, 20879, 49899, 1506, 89715, 67187, 1830, 6856, 720, 15752, 9239, 18999, 5927, 21022, 1830, 6578, 23630, 19916, 7753, 3865, 11, 68088... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:37", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:38", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:59:38 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '76', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998434', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '18ms', 'x-request-id': 'req_f65b28f11d3f21dbed43704e77fa73fd', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92a3c9cdca2dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:38", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_f65b28f11d3f21dbed43704e77fa73fd", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:38", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F0A551F740>, 'json_data': {'input': [[14082, 34694, 13404, 19479, 94975, 5927, 53419, 2156, 3865, 93099, 3865, 37405, 97991, 6856, 47273, 14257, 68462, 17165, 12561, 13337, 28089, 29256, 21956, 17721, 39900, 6850, 32330, 39127, 13999, 720, 13337, 95565, 1830, 22885, 48446, 19619, 7486, 1506, 13373, 5524, 10124, 9239, 94962, 5927, 35387, 3865, 10693, 6856, 9706, 1532, 12561, 13810, 1482, 13404, 19479, 90875, 16742, 25756, 87221, 4655, 76401, 86610, 62491, 13, 33006, 27435, 81376, 47805, 39988, 25756, 87221, 1532, 76401, 86610, 62491, 93129, 73181, 20879, 13999, 2297, 18264, 25756, 87221, 4655, 76401, 86610, 62491, 11, 21923, 14476, 36497, 5173, 39865, 14476, 23680, 4929, 720, 4898, 36594, 63233, 720, 10124, 17461, 60009, 720, 55257, 21708, 720, 8164, 39865, 14476, 23680, 1840, 720, 8164, 2233, 13810, 1482, 13404, 19479, 90875, 63233, 720, 8164, 1... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:38", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:38", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:59:38 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '106', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998523', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '17ms', 'x-request-id': 'req_8fbb8947b2e5fb0b5556ba9c7e23b40a', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92a3cf782f2dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:38", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_8fbb8947b2e5fb0b5556ba9c7e23b40a", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:38", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F0A551F740>, 'json_data': {'input': [[1032, 13, 18, 81529, 2156, 7753, 15752, 23630, 10124, 7753, 50436, 17618, 93099, 5927, 2156, 38521, 2233, 5372, 2156, 47295, 11047, 67124, 39865, 12, 45658, 7975, 9706, 23630, 2156, 38722, 17394, 18999, 11, 20879, 29256, 62776, 11, 720, 5591, 19190, 1840, 14009, 57186, 7740, 38098, 7094, 1840, 15458, 17766, 59921, 39280, 5927, 35387, 3865, 10693, 1506, 11122, 7094, 14332, 12415, 7740, 34943, 9239, 56999, 62491, 93129, 73181, 21923, 23297, 8164, 56857, 28089, 18482, 44946, 720, 2297, 64322, 63229, 9239, 1506, 21477, 2297, 15088, 13337, 98285, 2156, 7975, 14837, 34082, 39900, 21923, 9239, 37013, 6856, 39280, 11, 89327, 39280, 21599, 2156, 7753, 66349, 68506, 19916, 19916, 15298, 98695, 44786, 720, 2297, 10693, 10298, 44786, 18600, 47067, 62491, 7740, 46339, 1830, 16494, 41873, 54686, 14257, 44646, 62776, 93099... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:38", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:39", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:59:39 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '162', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998756', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '14ms', 'x-request-id': 'req_9bf0d30721125ed3109930a3ad83da4f', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92a3d1f9792dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:39", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_9bf0d30721125ed3109930a3ad83da4f", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:39", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F0A551F740>, 'json_data': {'input': [[16, 35889, 1532, 89159, 97747, 17756, 84350, 34082, 39900, 46177, 29619, 39900, 20879, 52520, 18999, 93099, 5927, 19190, 1840, 14009, 57186, 56449, 14525, 720, 29256, 44075, 44100, 29893, 21204, 18154, 11047, 98285, 2156, 7975, 14837, 81301, 4898, 16494, 86995, 50693, 6856, 39280, 6578, 13, 33006, 17, 39903, 14009, 76401, 86610, 62491, 11, 48835, 1532, 90457, 67745, 74726, 93099, 3865, 18600, 29471, 39988, 5524, 70397, 14525, 11320, 9136, 54686, 8379, 5173, 21956, 17721, 1532, 11, 93129, 73181, 720, 8164, 44075, 44155, 6578, 8131, 2233, 28089, 18482, 7952, 35111, 7486, 15458, 17766, 48150, 20879, 52520, 17618, 93099, 5927, 19190, 1840, 14009, 57186, 11, 21923, 41036, 56999, 28089, 1506, 90457, 67745, 21599, 23311, 720, 8164, 12507, 86610, 18999, 11, 7740, 5927, 52520, 17618, 93099, 12561, 13337, 28089, 9706,... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:39", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:39", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 13:59:39 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '132', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998589', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '16ms', 'x-request-id': 'req_0b7d8fd7b888d0a6f1d2075c36d09b36', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92a3d70cf92dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:39", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_0b7d8fd7b888d0a6f1d2075c36d09b36", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:40", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 16:59:39. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n- \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0438\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u044b\u0445 \u043f\u043e\u043a\u0432\u0430\u0440\u0442\u0438\u0440\u043d\u044b\u0445 \u043f\u0440\u0438\u0442\u043e\u0447\u043d\u043e-\u0432\u044b\u0442\u044f\u0436\u043d\u044b\u0445 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043e\u043a \u0441 \\n\u0440\u0435\u043a\u0443\u043f\u0435\u0440\u0430\u0446\u0438\u0435\u0439 \u0442\u0435\u043f\u043b\u0430 \u0432\u044b\u0442\u044f\u0436\u043d\u043e\u0433\u043e \u0432\u043e\u0437\u0434\u0443\u0445\u0430; \\n \\n- \u0443\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u0441\u043f\u0443\u0442\u043d\u0438\u043a\u043e\u0432, \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u043c\u044b\u0445 \u043a \u0441\u0431\u043e\u0440\u043d\u043e\u043c\u0443 \u0432\u043e\u0437\u0434\u0443\u0445\u043e\u0432\u043e\u0434\u0443, \u0440\u0430\u0441\u043f\u043e\u043b\u043e\u0436\u0435\u043d\u043d\u043e\u043c\u0443 \u0432 \\n\u043c\u0435\u0436\u043a\u0432\u0430\u0440\u0442\u0438\u0440\u043d\u043e\u043c \u043a\u043e\u0440\u0438... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:40", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 13:59:56 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '14708'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '783705'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '1.222s'), ('x-request-id', 'req_e2b7845e07a8a56509b5bc529b3f3f37'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=AjF63DffA0Inqh6WLz0Ob.sO2_0jB8NpORwI45100B4-1732715996-1.0.1.1-yKQVyarEAzru.2wp8iq98mFc26xPtzlE8vWpuFFL_zj6K42YW0DpbQxm1hWoy5i4eNHvNw5zsELZKPZ0cZxuFA; path=/; expires=Wed, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_e2b7845e07a8a56509b5bc529b3f3f37", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:56", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:56", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0414\u043b\u044f \u0447\u0430\u0441\u0442\u043d\u043e\u0433\u043e \u0434\u043e\u043c\u0430 \u0432 \u041c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0431\u0443\u0434\u0435\u0442 \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e \u0441\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c\u0441\u044f \u0441 \u043c\u0435\u0441\u0442\u043d\u044b\u043c \u043a\u043b\u0438\u043c\u0430\u0442\u043e\u043c \u0438 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0442\u044c \u043a\u043e\u043c\u0444\u043e\u0440\u0442\u043d\u043e\u0435 \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u043d\u0438\u0435. \u0412\u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432:\\n\\n1. <b>\u041c\u0435\u0445\u0430\u043d\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043f\u0440\u0438\u0442\u043e\u0447\u043d\u043e-\u0432\u044b\u0442\u044f\u0436\u043d\u0430\u044f \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044f \u0441 \u0440\u0435\u043a\u0443\u043f\u0435\u0440\u0430\u0446\u0438\u0435\u0439 \u0442\u0435\u043f\u043b\u0430</b>:\\n\u2022 \u041e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u044b\u0439 \u043f\u0440\u0438\u0442\u043e\u043a \u0441\u0432\u0435\u0436\u0435\u0433\u043e \u0432\u043e\u0437\u0434\u0443\u0445\u0430 \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043e\u0442\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u043e\u0433\u043e.\\n\u2022 \u0420\u0435\u043a\u0443\u043f\u0435\u0440\u0430\u0442\u043e\u0440 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c \u0442\u0435\u043f\u043b\u043e, \u0447\u0442\u043e \u0441\u043d\u0438\u0436\u0430\u0435\u0442 \u0437\u0430\u0442\u0440\u0430\u0442\u044b \u043d\u0430 \u043e\u0442\u043e\u043f\u043b\u0435\u043d\u0438\u0435 \u0432 \u0445\u043e\u043b\u043e\u0434\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f \u0433\u043e\u0434\u0430.\\n\u2022 \u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f \u043a\u0440\u0443\u0433\u043b\u043e\u0433\u043e\u0434\u0438\u0447\u043d\u043e\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f, \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044f \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0439 \u043c\u0438\u043a\u0440\u043e\u043a\u043b\u0438\u043c\u0430\u0442.\\n\\n2. <b>\u0418\u043d\u0434\u0438\u0432\u0438\u0434\u0443\u0430\u043b\u044c\u043d\u044b\u0435 \u043f\u043e\u043a\u043e\u043c\u043d\u0430\u0442\u043d\u044b\u0435 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0438 (\u0431\u0440\u0438\u0437\u0435\u0440\u044b)</b>:\\n\u2022 \u041e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u044e\u0442 \u043f\u0440\u0438\u0442\u043e\u043a \u0441\u0432\u0435\u0436\u0435\u0433\u043e \u0432\u043e\u0437\u0434\u0443\u0445\u0430 \u0432 \u043a\u0430\u0436\u0434\u0443\u044e \u043a\u043e\u043c\u043d\u0430\u0442\u0443.\\n\u2022 \u0423\u0441\u0442\u0440\u043e\u0439\u0441\u0442\u0432\u0430 \u043c\u043e\u0433\u0443\u0442 \u0432\u043a\u043b\u044e\u0447\u0430\u0442\u044c \u0444\u0438\u043b\u044c\u0442\u0440\u0430\u0446\u0438\u044e \u0438 \u043f\u043e\u0434\u043e\u0433\u0440\u0435\u0432 \u0432\u043e\u0437\u0434\u0443\u0445\u0430.\\n\u2022 \u041b\u0435\u0433\u043a\u043e \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u0438 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u0440\u0435\u0433\u0443\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432\u043e\u0437\u0434\u0443\u0445\u043e\u043e\u0431\u043c\u0435\u043d \u043f\u043e \u043c\u0435\u0440\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438.\\n\\n3. <b>\u0415\u0441\u0442\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044f \u0441 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u043c\u0438 \u0432\u044b\u0442\u044f\u0436\u043d\u044b\u043c\u0438 \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0442\u043e\u0440\u0430\u043c\u0438</b>:\\n\u2022 \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0435\u0441\u0442\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u0443\u044e \u0442\u044f\u0433\u0443 \u0434\u043b\u044f \u0432\u043e\u0437\u0434\u0443\u0445\u043e\u043e\u0431\u043c\u0435\u043d\u0430.\\n\u2022 \u0412\u044b... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:56", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:57", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:57", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='8328aa3b-bc68-40a8-bd47-764223165066'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 16:59:57", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:21:46", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 17:21:48", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:21:48", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:21:48", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:22:15", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:15", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:15", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:16", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:16", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:16", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:16", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:16", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: ru", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:16", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:16", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:16", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x000002DDB66DB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 14, 22, 14, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2351, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193552), <telegram.ext._callbackcontext.CallbackContext object at 0x000002DDDBCEB0E0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:16", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x000002DDDBBAB9A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:17", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:17", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:18", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:18", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:18", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:18", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:18", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x000002DDB66DB7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), id='1051116658678438928', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 14, 22, 16, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2352, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations')... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:18", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x000002DDDB9A78A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:19", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:19", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:19", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x000002DDDBDC6DB0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:19", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:19", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x000002DDDBDC6DB0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:19", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:19", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:19", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:19", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:19", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:19", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:19", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:19", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:22:19", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:23:53", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:23:53", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:23:53", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:23:53", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u043a\u0430\u043a \u0440\u0430\u0441\u0447\u0438\u0442\u0430\u0442\u044c \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u044c \u043a\u043e\u043d\u0434\u0438\u0446\u0438\u043e\u043d\u0435\u0440\u0430 \u0434\u043b\u044f \u0447\u0430\u0441\u0442\u043d\u043e\u0433\u043e \u0434\u043e\u043c\u0430 \u0432 100 \u043c2'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:23:53", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x000002DDB66DB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 14, 23, 52, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2354, supergroup_chat_created=False, text='\u043a\u0430\u043a \u0440\u0430\u0441\u0447\u0438\u0442\u0430\u0442\u044c \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u044c \u043a\u043e\u043d\u0434\u0438\u0446\u0438\u043e\u043d\u0435\u0440\u0430 \u0434\u043b\u044f \u0447\u0430\u0441\u0442\u043d\u043e\u0433\u043e \u0434\u043e\u043c\u0430 \u0432 100 \u043c2'), update_id=881193554), <telegram.ext._callbackcontext.CallbackContext object at 0x000002DDDBCE9470>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:23:53", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x000002DDDBDB89A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:23:53", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='1e609789-76c5-4457-9093-d6cd8b6b6a83' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:23:53", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='1e609789-76c5-4457-9093-d6cd8b6b6a83'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:23:53", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:23:53", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x000002DDDBDC6DB0>, '\u043a\u0430\u043a \u0440\u0430\u0441\u0447\u0438\u0442\u0430\u0442\u044c \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u044c \u043a\u043e\u043d\u0434\u0438\u0446\u0438\u043e\u043d\u0435\u0440\u0430 \u0434\u043b\u044f \u0447\u0430\u0441\u0442\u043d\u043e\u0433\u043e \u0434\u043e\u043c\u0430 \u0432 100 \u043c2'), kwargs: {'chat_history': [HumanMessage(content='\u043a\u0430\u043a \u0440\u0430\u0441\u0447\u0438\u0442\u0430\u0442\u044c \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u044c \u043a\u043e\u043d\u0434\u0438\u0446\u0438\u043e\u043d\u0435\u0440\u0430 \u0434\u043b\u044f \u0447\u0430\u0441\u0442\u043d\u043e\u0433\u043e \u0434\u043e\u043c\u0430 \u0432 100 \u043c2', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043a\u0430\u043a\u0443\u044e \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044e \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0432 \u0447\u0430\u0441\u0442\u043d\u043e\u043c \u0434\u043e\u043c\u0435 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0414\u043b\u044f \u0447\u0430\u0441\u0442\u043d\u043e\u0433\u043e \u0434\u043e\u043c\u0430 \u0432 \u041c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0441\u0438\u0441\u0442\u0435\u043c\u0443 \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u0438, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0431\u0443\u0434\u0435\u0442 \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e \u0441\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c\u0441\u044f \u0441 \u043c\u0435\u0441\u0442\u043d\u044b\u043c \u043a\u043b\u0438\u043c\u0430\u0442\u043e\u043c \u0438 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0442\u044c \u043a\u043e\u043c\u0444\u043e\u0440\u0442\u043d\u043e\u0435 \u043f\u0440\u043e\u0436\u0438\u0432\u0430\u043d\u0438\u0435. \u0412\u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0438\u0445 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432:\\n\\n1. <b>\u041c\u0435\u0445\u0430\u043d\u0438\u0447\u0435\u0441\u043a\u0430\u044f \u043f\u0440\u0438\u0442\u043e\u0447\u043d\u043e-\u0432\u044b\u0442\u044f\u0436\u043d\u0430\u044f \u0432\u0435\u043d\u0442\u0438\u043b\u044f\u0446\u0438\u044f \u0441 \u0440\u0435\u043a\u0443\u043f\u0435\u0440\u0430\u0446\u0438\u0435\u0439 \u0442\u0435\u043f\u043b\u0430</b>:\\n\u2022 \u041e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0435\u0442 \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u044b\u0439 \u043f\u0440\u0438\u0442\u043e\u043a \u0441\u0432\u0435\u0436\u0435\u0433\u043e \u0432\u043e\u0437\u0434\u0443\u0445\u0430 \u0438 \u0443\u0434\u0430\u043b\u0435\u043d\u0438\u0435 \u043e\u0442\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u043e\u0433\u043e.\\n\u2022 \u0420\u0435\u043a\u0443\u043f\u0435\u0440\u0430\u0442\u043e\u0440 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442\u044c \u0442\u0435\u043f\u043b\u043e, \u0447\u0442\u043e \u0441\u043d\u0438\u0436\u0430\u0435\u0442 \u0437\u0430\u0442\u0440\u0430\u0442\u044b \u043d\u0430 \u043e\u0442\u043e\u043f\u043b\u0435\u043d\u0438\u0435 \u0432 \u0445\u043e\u043b\u043e\u0434\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f \u0433\u043e\u0434\u0430.\\n\u2022 \u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f \u043a\u0440\u0443\u0433\u043b\u043e\u0433\u043e\u0434\u0438\u0447\u043d\u043e\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f, \u043f\u043e\u0434\u0434\u0435\u0440\u0436... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:23:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002DDDBDEF880>, 'json_data': {'input': [[4898, 16248, 78876, 91353, 18482, 11562, 92506, 61379, 38098, 7094, 1840, 15458, 17766, 91883, 20440, 17756, 84350, 39900, 7952, 12507, 1506, 5927, 220, 1041, 11562, 17]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:23:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:23:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 14:23:53 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '57'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999973'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_e60c55fee5a3557f2975f32ddc19ed63'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=jFizKa_iLGd1z72lIZI4skwsabm.i7EAkQkuppwHcKU-1732717433-1.0.1.1-xOFWS5davSTRcTzp7MzP2CntuPslsxyH55ce_P... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:23:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_e60c55fee5a3557f2975f32ddc19ed63", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:23:54", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with relevance scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:23:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"You are a project assistant from the consultant side on design and construction projects. If you don't know the answer, say that you don't know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 17:23:54. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n8.21 \\n\u0421\u0438\u0441\u0442\u0435\u043c\u044b \\n\u0445\u043e\u043b\u043e\u0434\u043e\u0441\u043d\u0430\u0431\u0436\u0435\u043d\u0438\u044f \\n\u0441\u043b\u0435\u0434\u0443\u0435\u0442 \\n\u043f\u0440\u043e\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \\n\u0441 \\n\u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \\n\u044d\u043d\u0435\u0440\u0433\u043e\u044d\u043a\u043e\u043d\u043e\u043c\u0438\u0447\u043d\u043e\u0433\u043e \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u044f \u043d\u0435 \u043d\u0438\u0436\u0435 \u0434\u0432\u0443\u0445 \u0432\u044b\u0441\u0448\u0438\u0445 \u043a\u043b\u0430\u0441\u0441\u043e\u0432 \u044d\u043d\u0435\u0440\u0433\u043e\u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 (\u0410 \\n\u0438 \\n\u0412). \\n\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u043c\u044b\u0435 \\n\u043c\u0438\u043d\u0438\u043c\u0430\u043b\u044c\u043d\u044b\u0435 \\n\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:23:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:24:04", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 14:24:04 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '9928'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '788741'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '844ms'), ('x-request-id', 'req_ec708addddb7536c7e0be35de76eb2cb'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=VGGVfSisOMDVaPzRxQ7b6alOnIcK0yGtsdbeqo797lM-1732717444-1.0.1.1-kGCZyDd_MRiPiqKngOR_6pxLii013exmkNk85Tbbt0v9cUGftje4u7pq02q.OwegJjyNYjdL_2K4.8mEw8liqQ; path=/; expires=Wed, 27... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:24:04", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_ec708addddb7536c7e0be35de76eb2cb", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:24:04", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:24:04", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0420\u0430\u0441\u0447\u0435\u0442 \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u0438 \u043a\u043e\u043d\u0434\u0438\u0446\u0438\u043e\u043d\u0435\u0440\u0430 \u0434\u043b\u044f \u0447\u0430\u0441\u0442\u043d\u043e\u0433\u043e \u0434\u043e\u043c\u0430 \u043f\u043b\u043e\u0449\u0430\u0434\u044c\u044e 100 \u043c\u00b2 \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c, \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u0444\u0430\u043a\u0442\u043e\u0440\u043e\u0432, \u0442\u0430\u043a\u0438\u0445 \u043a\u0430\u043a \u043f\u043b\u043e\u0449\u0430\u0434\u044c \u043f\u043e\u043c\u0435\u0449\u0435\u043d\u0438\u044f, \u0432\u044b\u0441\u043e\u0442\u0430 \u043f\u043e\u0442\u043e\u043b\u043a\u043e\u0432, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0438 \u0440\u0430\u0437\u043c\u0435\u0440 \u043e\u043a\u043e\u043d, \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0441\u043e\u043b\u043d\u0435\u0447\u043d\u043e\u0433\u043e \u043e\u0441\u0432\u0435\u0449\u0435\u043d\u0438\u044f, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043b\u044e\u0434\u0435\u0439 \u0438 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0442\u0435\u043f\u043b\u043e\u0432\u044b\u0434\u0435\u043b\u044f\u044e\u0449\u0438\u0445 \u043f\u0440\u0438\u0431\u043e\u0440\u043e\u0432. \u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0431\u0430\u0437\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0430 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0443\u043f\u0440\u043e\u0449\u0435\u043d\u043d\u0443\u044e \u0444\u043e\u0440\u043c\u0443\u043b\u0443:\\n\\n1. <b>\u0411\u0430\u0437\u043e\u0432\u0430\u044f \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u044c</b>:\\n\u2022 \u041f\u0440\u0438\u043c\u0435\u0440\u043d\u043e 1 \u043a\u0412\u0442 \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u0438 \u043a\u043e\u043d\u0434\u0438\u0446\u0438\u043e\u043d\u0435\u0440\u0430 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043d\u0430 \u043a\u0430\u0436\u0434\u044b\u0435 10 \u043c\u00b2 \u043f\u043b\u043e\u0449\u0430\u0434\u0438. \u0414\u043b\u044f \u0434\u043e\u043c\u0430 \u0432 100 \u043c\u00b2 \u044d\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043e\u043a\u043e\u043b\u043e 10 \u043a\u0412\u0442.\\n\\n2. <b>\u041a\u043e\u0440\u0440\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043d\u0430 \u0432\u044b\u0441\u043e\u0442\u0443 \u043f\u043e\u0442\u043e\u043b\u043a\u043e\u0432</b>:\\n\u2022 \u0415\u0441\u043b\u0438 \u0432\u044b\u0441\u043e\u0442\u0430 \u043f\u043e\u0442\u043e\u043b\u043a\u043e\u0432 \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u0435\u0442 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0435 2.5-2.7 \u043c\u0435\u0442\u0440\u0430, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0440\u0430\u0441\u0447\u0435\u0442. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043f\u0440\u0438 \u0432\u044b\u0441\u043e\u0442\u0435 3 \u043c\u0435\u0442\u0440\u0430 \u043c\u043e\u0436\u043d\u043e \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u043e\u043a\u043e\u043b\u043e 10% \u043a \u0431\u0430\u0437\u043e\u0432\u043e\u0439 \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u0438.\\n\\n3. <b>\u0423\u0447\u0435\u0442 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u0444\u0430\u043a\u0442\u043e\u0440\u043e\u0432</b>:\\n\u2022 \u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 0.1-0.2 \u043a\u0412\u0442 \u0437\u0430 \u043a\u0430\u0436\u0434\u043e\u0435 \u0431\u043e\u043b\u044c\u0448\u043e\u0435 \u043e\u043a\u043d\u043e, \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0435\u0441\u043b\u0438 \u043e\u043d\u0438 \u0432\u044b\u0445\u043e\u0434\u044f\u0442 \u043d\u0430 \u044e\u0433 \u0438\u043b\u0438 \u0437\u0430\u043f\u0430\u0434 \u0438 \u043d\u0435 \u0438\u043c\u0435\u044e\u0442 \u0441\u043e\u043b\u043d\u0446\u0435\u0437\u0430\u0449\u0438\u0442\u043d\u044b\u0445 \u0441\u0440\u0435\u0434\u0441\u0442\u0432.\\n\u2022 \u0414\u043e\u0431\u0430\u0432\u044c\u0442\u0435 0.1-0.2 \u043a\u0412\u0442 \u043d\u0430 \u043a\u0430\u0436\u0434\u043e\u0433\u043e \u043f\u043e\u0441\u0442\u043e\u044f\u043d\u043d\u043e \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0435\u0433\u043e \u0447\u0435\u043b\u043e\u0432... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:24:04", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:24:06", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:24:06", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='1e609789-76c5-4457-9093-d6cd8b6b6a83'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:24:06", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:25:35", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 17:25:37", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:25:37", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:25:37", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:28:21", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 17:28:22", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:28:22", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:28:23", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:28:35", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 17:28:36", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:28:37", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:28:37", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:28:42", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:42", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:42", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:43", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:43", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:43", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:43", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:43", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: ru", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:43", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:43", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:43", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x0000018917D8B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 14, 28, 41, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2356, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193555), <telegram.ext._callbackcontext.CallbackContext object at 0x000001893D36AE40>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:43", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x000001891A220CA0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:44", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:44", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:50", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:50", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:50", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:50", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:50", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x0000018917D8B7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), id='1051116661376422849', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 14, 28, 43, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2357, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations')... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:50", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x000001893D02B8A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:51", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:51", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:51", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x000001893D4757F0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:51", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:51", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x000001893D4757F0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:51", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:51", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:51", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:51", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:51", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:51", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:51", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:51", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:28:51", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:29:01", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:29:01", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:29:01", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:29:01", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u043a\u0430\u043a \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044c \u0441\u0442\u0435\u043d \u0434\u043b\u044f \u0434\u043e\u043c\u0430 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:29:01", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x0000018917D8B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 14, 29, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2359, supergroup_chat_created=False, text='\u043a\u0430\u043a \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044c \u0441\u0442\u0435\u043d \u0434\u043b\u044f \u0434\u043e\u043c\u0430 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438'), update_id=881193557), <telegram.ext._callbackcontext.CallbackContext object at 0x000001893D36AE40>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:29:01", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x000001893D4689A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:29:01", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='6de22531-827c-4a8d-b067-9e5cb524202a' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:29:01", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='6de22531-827c-4a8d-b067-9e5cb524202a'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:29:01", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:29:01", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x000001893D4757F0>, '\u043a\u0430\u043a \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044c \u0441\u0442\u0435\u043d \u0434\u043b\u044f \u0434\u043e\u043c\u0430 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438'), kwargs: {'chat_history': [HumanMessage(content='\u043a\u0430\u043a \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044c \u0441\u0442\u0435\u043d \u0434\u043b\u044f \u0434\u043e\u043c\u0430 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043a\u0430\u043a \u0440\u0430\u0441\u0447\u0438\u0442\u0430\u0442\u044c \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u044c \u043a\u043e\u043d\u0434\u0438\u0446\u0438\u043e\u043d\u0435\u0440\u0430 \u0434\u043b\u044f \u0447\u0430\u0441\u0442\u043d\u043e\u0433\u043e \u0434\u043e\u043c\u0430 \u0432 100 \u043c2', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0420\u0430\u0441\u0447\u0435\u0442 \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u0438 \u043a\u043e\u043d\u0434\u0438\u0446\u0438\u043e\u043d\u0435\u0440\u0430 \u0434\u043b\u044f \u0447\u0430\u0441\u0442\u043d\u043e\u0433\u043e \u0434\u043e\u043c\u0430 \u043f\u043b\u043e\u0449\u0430\u0434\u044c\u044e 100 \u043c\u00b2 \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u043f\u043e\u043b\u043d\u0438\u0442\u044c, \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u044f \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u0444\u0430\u043a\u0442\u043e\u0440\u043e\u0432, \u0442\u0430\u043a\u0438\u0445 \u043a\u0430\u043a \u043f\u043b\u043e\u0449\u0430\u0434\u044c \u043f\u043e\u043c\u0435\u0449\u0435\u043d\u0438\u044f, \u0432\u044b\u0441\u043e\u0442\u0430 \u043f\u043e\u0442\u043e\u043b\u043a\u043e\u0432, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0438 \u0440\u0430\u0437\u043c\u0435\u0440 \u043e\u043a\u043e\u043d, \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0441\u043e\u043b\u043d\u0435\u0447\u043d\u043e\u0433\u043e \u043e\u0441\u0432\u0435\u0449\u0435\u043d\u0438\u044f, \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u043b\u044e\u0434\u0435\u0439 \u0438 \u043d\u0430\u043b\u0438\u0447\u0438\u0435 \u0442\u0435\u043f\u043b\u043e\u0432\u044b\u0434\u0435\u043b\u044f\u044e\u0449\u0438\u0445 \u043f\u0440\u0438\u0431\u043e\u0440\u043e\u0432. \u0412 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u0431\u0430\u0437\u043e\u0432\u043e\u0433\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0430 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0443\u044e \u0443\u043f\u0440\u043e\u0449\u0435\u043d\u043d\u0443\u044e \u0444\u043e\u0440\u043c\u0443\u043b\u0443:\\n\\n1. <b>\u0411\u0430\u0437\u043e\u0432\u0430\u044f \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u044c</b>:\\n\u2022 \u041f\u0440\u0438\u043c\u0435\u0440\u043d\u043e 1 \u043a\u0412\u0442 \u043c\u043e\u0449\u043d\u043e\u0441\u0442\u0438 \u043a\u043e\u043d\u0434\u0438\u0446\u0438\u043e\u043d\u0435\u0440\u0430 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u043d\u0430 \u043a\u0430\u0436\u0434\u044b\u0435 10 \u043c\u00b2 \u043f\u043b\u043e\u0449\u0430\u0434\u0438. \u0414\u043b\u044f \u0434\u043e\u043c\u0430 \u0432 100 \u043c\u00b2 \u044d\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u043e\u043a\u043e\u043b\u043e 10 \u043a\u0412\u0442.\\n\\n2. <b>\u041a\u043e\u0440\u0440\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u043a\u0430 \u043d\u0430 \u0432\u044b\u0441\u043e\u0442\u0443... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:29:01", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001893D49F100>, 'json_data': {'input': [[4898, 16248, 63229, 2233, 18482, 14257, 1830, 67124, 3114, 56008, 18868, 5372, 20440, 7952, 12507, 1506, 5927, 11562, 23630, 90877, 66144, 16742, 21923, 31443, 55523]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:29:01", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:29:02", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 14:29:02 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '58'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999974'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_9b2faf7d9a0a1d58fdf0194c22fdcbfc'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=4BJp8dpMPDDb6I1UZIt5_6Jence_guUsECjZ5h534zk-1732717742-1.0.1.1-TBs8yMHzLXPYc8ttKVwHNEJcryrZtw28g1zykx... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:29:02", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_9b2faf7d9a0a1d58fdf0194c22fdcbfc", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:29:02", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with relevance scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:29:02", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 17:29:02. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0440\u0430\u0441\u0447\u0435\u0442\u043e\u0432 \u0442\u0435\u043c\u043f\u0435\u0440\u0430\u0442\u0443\u0440\u043d\u044b\u0445 \u043f\u043e\u043b\u0435\u0439  \\n\u041d.1 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438, \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0439 \u0434\u043b\u044f \u0440\u0430\u0441\u0447\u0435\u0442\u0430 \\n  \\n\u0421\u0442\u0435\u043d\u0430 \u0441 \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0444\u0430\u0441\u0430\u0434\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439 \u0441 \u0442\u043e\u043d\u043a\u0438\u043c \u0448\u0442\u0443\u043a\u0430\u0442\u0443\u0440\u043d\u044b\u043c \u0441\u043b\u043e\u0435\u043c. \\n\u0424\u0430\u0441\u0430\u0434\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u043c\u043e\u043d\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u043d\u0430 \u0441\u0442\u0435\u043d\u0443... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:29:02", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:29:13", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 14:29:13 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '8554'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '779825'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '1.513s'), ('x-request-id', 'req_d2b6f28786243e6160e797a686a00306'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=KK28oyCESdvhqSnNh7D1MqMXJO_j46ohxGhzcHHyTOg-1732717753-1.0.1.1-JBpGwr829GYJqz9j_oWAd1rEOPRxCNIR1jlFp29_bc4oTEg63stPJ6jV4Pji9gfU2AvIbX_jWl0wH1ExJZNDtw; path=/; expires=Wed, 2... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:29:13", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_d2b6f28786243e6160e797a686a00306", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:29:13", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:29:13", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0412\u044b\u0431\u043e\u0440 \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044f \u0434\u043b\u044f \u0441\u0442\u0435\u043d \u0434\u043e\u043c\u0430 \u0432 \u041c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u0444\u0430\u043a\u0442\u043e\u0440\u043e\u0432, \u0442\u0430\u043a\u0438\u0445 \u043a\u0430\u043a \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f, \u0442\u0438\u043f \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u0438 \u0431\u044e\u0434\u0436\u0435\u0442. \u0412\u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0439 \u043f\u043e \u0432\u044b\u0431\u043e\u0440\u0443 \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044f:\\n\\n1. <b>\u041c\u0438\u043d\u0435\u0440\u0430\u043b\u044c\u043d\u0430\u044f \u0432\u0430\u0442\u0430 (\u043a\u0430\u043c\u0435\u043d\u043d\u0430\u044f \u0438\u043b\u0438 \u0441\u0442\u0435\u043a\u043b\u043e\u0432\u0430\u0442\u0430)</b>:\\n\u2022 \u0425\u043e\u0440\u043e\u0448\u0438\u0435 \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430.\\n\u2022 \u0412\u044b\u0441\u043e\u043a\u0430\u044f \u043e\u0433\u043d\u0435\u0441\u0442\u043e\u0439\u043a\u043e\u0441\u0442\u044c.\\n\u2022 \u041f\u0430\u0440\u043e\u043f\u0440\u043e\u043d\u0438\u0446\u0430\u0435\u043c\u043e\u0441\u0442\u044c, \u0447\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0441\u0442\u0435\u043d\u0430\u043c \"\u0434\u044b\u0448\u0430\u0442\u044c\".\\n\u2022 \u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f \u0443\u0442\u0435\u043f\u043b\u0435\u043d\u0438\u044f \u043a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0445 \u0441\u0442\u0435\u043d \u0438 \u0432\u0435\u043d\u0442\u0438\u043b\u0438\u0440\u0443\u0435\u043c\u044b\u0445 \u0444\u0430\u0441\u0430\u0434\u043e\u0432.\\n\\n2. <b>\u042d\u043a\u0441\u0442\u0440\u0443\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u043d\u043e\u043f\u043e\u043b\u0438\u0441\u0442\u0438\u0440\u043e\u043b (\u042d\u041f\u0421)</b>:\\n\u2022 \u041e\u0442\u043b\u0438\u0447\u043d\u044b\u0435 \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0438 \u043f\u0440\u0438 \u043c\u0435\u043d\u044c\u0448\u0435\u0439 \u0442\u043e\u043b\u0449\u0438\u043d\u0435.\\n\u2022 \u041d\u0438\u0437\u043a\u043e\u0435 \u0432\u043e\u0434\u043e\u043f\u043e\u0433\u043b\u043e\u0449\u0435\u043d\u0438\u0435, \u0447\u0442\u043e \u0434\u0435\u043b\u0430\u0435\u0442 \u0435\u0433\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0438\u043c \u0434\u043b\u044f \u0432\u043b\u0430\u0436\u043d\u043e\u0433\u043e \u043a\u043b\u0438\u043c\u0430\u0442\u0430.\\n\u2022 \u041f\u0440\u043e\u0447\u043d\u044b\u0439 \u0438 \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u044b\u0439 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b.\\n\u2022 \u041c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0442\u044c\u0441\u044f \u0434\u043b\u044f \u0444\u0430\u0441\u0430\u0434\u043e\u0432 \u0441 \u0448\u0442\u0443\u043a\u0430\u0442\u0443\u0440\u043d\u044b\u043c \u0441\u043b\u043e\u0435\u043c \u0438 \u0443\u0442\u0435\u043f\u043b\u0435\u043d\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432.\\n\\n3. <b>\u041f\u0435\u043d\u043e\u043f\u043e\u043b\u0438\u0443\u0440\u0435\u0442\u0430\u043d</b>:\\n\u2022 \u0412\u044b\u0441\u043e\u043a\u0430\u044f \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u0430\u044f \u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u044c.\\n\u2022 \u041f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0431\u0435\u0441\u0448\u043e\u0432\u043d\u044b\u0439 \u0441\u043b\u043e\u0439, \u043c\u0438\u043d\u0438\u043c\u0438\u0437\u0438\u0440\u0443\u044f \u0442\u0435\u043f\u043b\u043e\u043f\u043e\u0442\u0435\u0440\u0438.\\n\u2022 \u041e\u0442\u043b\u0438\u0447\u043d\u043e \u043f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f \u0441\u043b\u043e\u0436\u043d\u044b\u0445 \u043f\u043e\u0432\u0435\u0440\u0445\u043d\u043e\u0441\u0442\u0435\u0439 \u0438 \u0442\u0440\u0443\u0434\u043d\u043e\u0434\u043e\u0441\u0442\u0443\u043f\u043d\u044b\u0445 \u043c\u0435\u0441\u0442... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:29:13", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:29:14", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:29:14", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='6de22531-827c-4a8d-b067-9e5cb524202a'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:29:14", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:34:28", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 17:34:29", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:34:29", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:34:29", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:35:54", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 17:35:55", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:35:55", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:35:56", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:35:59", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:35:59", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:00", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:01", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:01", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:01", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:01", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:01", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: ru", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:01", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:01", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:01", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x0000024BC82BB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 14, 35, 59, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2361, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193558), <telegram.ext._callbackcontext.CallbackContext object at 0x0000024BED90EC10>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:01", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x0000024BCA7C0CA0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:01", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:01", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:04", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:04", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:04", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:04", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:04", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x0000024BC82BB7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), id='1051116661795996426', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 14, 36, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2362, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations'),), ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:04", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x0000024BEC5FB8A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:05", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:05", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:05", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x0000024BED9F5A30>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:05", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:05", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x0000024BED9F5A30>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:05", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:05", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:05", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:05", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:05", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:05", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:05", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:05", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:05", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:12", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:13", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:13", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:13", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:13", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x0000024BC82BB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 14, 36, 12, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2364, supergroup_chat_created=False, text='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), update_id=881193560), <telegram.ext._callbackcontext.CallbackContext object at 0x0000024BED90EC10>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:13", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x0000024BED9E89A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:13", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='3a399506-e9df-4bea-a87c-7cbd4ab9bbfa' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:13", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='3a399506-e9df-4bea-a87c-7cbd4ab9bbfa'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:13", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:13", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x0000024BED9F5A30>, '\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), kwargs: {'chat_history': [HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043a\u0430\u043a \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044c \u0441\u0442\u0435\u043d \u0434\u043b\u044f \u0434\u043e\u043c\u0430 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0412\u044b\u0431\u043e\u0440 \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044f \u0434\u043b\u044f \u0441\u0442\u0435\u043d \u0434\u043e\u043c\u0430 \u0432 \u041c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u043a\u043b\u044e\u0447\u0435\u0432\u044b\u0445 \u0444\u0430\u043a\u0442\u043e\u0440\u043e\u0432, \u0442\u0430\u043a\u0438\u0445 \u043a\u0430\u043a \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f, \u0442\u0438\u043f \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u0438 \u0431\u044e\u0434\u0436\u0435\u0442. \u0412\u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0439 \u043f\u043e \u0432\u044b\u0431\u043e\u0440\u0443 \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044f:\\n\\n1. <b>\u041c\u0438\u043d\u0435\u0440\u0430\u043b\u044c\u043d\u0430\u044f \u0432\u0430\u0442\u0430 (\u043a\u0430\u043c\u0435\u043d\u043d\u0430\u044f \u0438\u043b\u0438 \u0441\u0442\u0435\u043a\u043b\u043e\u0432\u0430\u0442\u0430)</b>:\\n\u2022 \u0425\u043e\u0440\u043e\u0448\u0438\u0435 \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430.\\n\u2022 \u0412\u044b\u0441\u043e\u043a\u0430\u044f \u043e\u0433\u043d\u0435\u0441\u0442\u043e\u0439\u043a\u043e\u0441\u0442\u044c.\\n\u2022 \u041f\u0430\u0440\u043e\u043f\u0440\u043e\u043d\u0438\u0446\u0430\u0435\u043c\u043e\u0441\u0442\u044c, \u0447\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0441\u0442\u0435\u043d\u0430\u043c \"\u0434\u044b\u0448\u0430\u0442\u044c\".\\n\u2022 \u041f\u043e\u0434\u0445\u043e\u0434\u0438\u0442 \u0434\u043b\u044f \u0443\u0442\u0435\u043f\u043b\u0435\u043d\u0438\u044f \u043a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0445 \u0441\u0442\u0435\u043d \u0438 \u0432\u0435\u043d\u0442\u0438\u043b\u0438\u0440\u0443\u0435\u043c\u044b\u0445 \u0444\u0430\u0441\u0430\u0434\u043e\u0432.\\n\\n2. <b>\u042d\u043a\u0441\u0442\u0440\u0443\u0434\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043f\u0435\u043d\u043e\u043f\u043e\u043b\u0438\u0441\u0442\u0438\u0440\u043e\u043b (\u042d\u041f\u0421)</b>:\\n\u2022 \u041e\u0442\u043b\u0438\u0447\u043d\u044b\u0435 \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u044b\u0435 \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a\u0438 \u043f\u0440\u0438 \u043c\u0435\u043d\u044c\u0448\u0435\u0439 \u0442\u043e\u043b\u0449\u0438\u043d\u0435.\\n\u2022 \u041d\u0438\u0437\u043a\u043e\u0435 \u0432\u043e\u0434\u043e\u043f\u043e\u0433\u043b\u043e\u0449\u0435... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:13", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000024BEDA1F7E0>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:13", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:14", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 14:36:14 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '63'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999982'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_463a837a4dbc74e219274b84258c6a77'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=rVSD3.7J1jsnpZAl6lbU1FcW742OL1Uy2WhE9tVFvoU-1732718174-1.0.1.1-A7FbnnF98P3yc3vUdXo0AWzMqGqmSzo2.0jBS_... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:14", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_463a837a4dbc74e219274b84258c6a77", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:14", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:14", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000024BEC208C20>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:14", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:15", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 14:36:15 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '57', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999982', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_e63bce9f5d3dc66074d5e8fb67a23477', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92d96fbc65c02e-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:15", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_e63bce9f5d3dc66074d5e8fb67a23477", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:15", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000024BEC208C20>, 'json_data': {'input': [[74598, 96256, 1506, 220, 4364, 23934, 220, 14815, 33006, 868, 13, 21, 23784, 11047, 12507, 90226, 1506, 1532, 11, 47353, 40842, 9136, 10298, 44858, 17756, 1506, 35592, 34943, 9239, 56999, 18999, 30392, 1482, 97334, 5927, 7820, 13337, 3114, 6856, 7486, 1532, 40842, 44946, 14476, 9542, 16742, 720, 1, 6735, 79686, 5927, 25756, 20346, 2156, 51627, 1, 46177, 8379, 15752, 11001, 114, 7094, 18999, 23934, 25756, 20346, 2156, 25657, 10589, 10298, 19190, 44786, 45916, 19039, 11, 21022, 19175, 2297, 43293, 44938, 7820, 17721, 13433, 2297, 34943, 9239, 56999, 18999, 68088, 720, 13810, 8164, 4655, 1830, 35667, 18482, 6850, 7753, 18226, 2156, 50619, 44065, 81376, 23680, 17165, 11, 25756, 48262, 2233, 1482, 41873, 96485, 15458, 17766, 34613, 7820, 6856, 7753, 23934, 12, 8164, 9706, 40842, 1482, 12426, 5591, 4655, 18034, 35... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:15", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:16", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 14:36:16 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '113', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998465', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '18ms', 'x-request-id': 'req_59bf64b527f306ed29780eb85c5707f3', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92d975ede1c02e-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:16", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_59bf64b527f306ed29780eb85c5707f3", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:16", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000024BEC208C20>, 'json_data': {'input': [[74598, 96256, 1506, 220, 7994, 23934, 220, 14815, 33006, 49899, 17766, 67124, 2233, 17766, 1840, 10589, 32062, 85864, 13, 23784, 12561, 13337, 28089, 94962, 90226, 1506, 1532, 93129, 73181, 12561, 16494, 5372, 94975, 12561, 35111, 5372, 34613, 7952, 2233, 5372, 38657, 13, 720, 868, 13, 1032, 23784, 330, 10693, 7975, 9706, 44786, 1, 55617, 94538, 10693, 18034, 35297, 7094, 24697, 19190, 39988, 5173, 3114, 9542, 4655, 11, 21022, 50945, 59138, 13373, 14257, 6148, 84350, 53671, 22918, 1532, 5524, 29256, 2233, 4329, 17394, 18999, 34943, 330, 6735, 5372, 16742, 720, 5591, 25756, 20346, 2156, 51627, 1, 46177, 13373, 20346, 17394, 39988, 18868, 5372, 16742, 34943, 9239, 56999, 18999, 19175, 89159, 1482, 14257, 52037, 18226, 11320, 5591, 18482, 84714, 1532, 15458, 39127, 44065, 720, 15752, 48262, 2233, 1482, 12426, 8... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:16", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 14:36:17 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '180', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998826', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '14ms', 'x-request-id': 'req_36a4a23ff75d7b1688908c72bd7180a2', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92d97c9f64c02e-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_36a4a23ff75d7b1688908c72bd7180a2", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000024BEC208C20>, 'json_data': {'input': [[74598, 96256, 1506, 220, 2287, 23934, 220, 14815, 33006, 806, 13, 2983, 23227, 31203, 86291, 36750, 84198, 18034, 35297, 7094, 24697, 19190, 6856, 7740, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 19175, 89159, 1482, 78085, 2233, 7975, 59921, 18482, 720, 15752, 3114, 64569, 19479, 3865, 7740, 10693, 11122, 16331, 21956, 18999, 11, 100147, 4655, 7740, 78876, 8164, 7975, 21956, 17618, 5927, 5173, 3114, 7486, 1532, 11, 14257, 77911, 20812, 1482, 20879, 49284, 6735, 44938, 7740, 6850, 1840, 12426, 11, 99396, 17618, 720, 15752, 48262, 2233, 1482, 41873, 96485, 57186, 7740, 7820, 50223, 52744, 12561, 16494, 5372, 5372, 44786, 96573, 7753, 1840, 16331, 6856, 7740, 38098, 79370, 15458, 12415, 13, 35889, 1506, 14257, 77911, 20812, 1482, 320, 8164, 9706, 15752, 13337, 6856, 36352, 8, 720, 23630, 47805, 39280... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 14:36:18 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '85', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '12ms', 'x-request-id': 'req_c4fe4a2861beb695b02c657b364dac97', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92d9837903c02e-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_c4fe4a2861beb695b02c657b364dac97", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 17:36:18. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 120 \u0438\u0437 239 \\n \\n15.6 \u0412 \u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u0435\u0441\u043b\u0438 \u043f\u043e\u0434\u0437\u0435\u043c\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u0438\u0442\u0441\u044f \u0432 \u043a\u043e\u0442\u043b\u043e\u0432\u0430\u043d\u0435 \u043f\u043e\u0434 \u0437\u0430\u0449\u0438\u0442\u043e\u0439 \\n\"\u0441\u0442\u0435\u043d\u044b \u0432 \u0433\u0440\u0443\u043d\u0442\u0435\" \u0438\u043b\u0438 \u043e\u0433\u0440\u0430\u0436\u0434\u0435\u043d\u0438\u044f \u0438\u0437 \u0433\u0440\u0443\u043d\u0442\u043e\u0446\u0435\u043c\u0435\u043d\u0442\u043d\u044b\u0445 \u0441\u0432\u0430\u0439, \u0430 \u043d\u0435\u0441\u0443\u0449\u0438\u0439 \u043a\u0430\u0440\u043a\u0430\u0441 \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \\n\u0438\u0441\u043f\u044b\u0442\u044b\u0432\u0430\u0442\u044c... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:24", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 14:36:24 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '4686'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '792653'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '551ms'), ('x-request-id', 'req_7ea5261029e78db6abea5085bb4a7519'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=pwWK2XATwG6ygz2_HnJn.fsc9JeSAgKnQmX7bSQSG9M-1732718184-1.0.1.1-CTP1BnTS92FJX6IAjvGpgc9uxhRVa4Pi7MfagTwCTp7Ff.lhKoMwk4tYhKYf5feW1nomAKx2gRUCfxycbO_Vwg; path=/; expires=Wed, 27... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:24", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_7ea5261029e78db6abea5085bb4a7519", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:24", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:24", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430. \u041e\u043d\u0430 \u0438\u0433\u0440\u0430\u0435\u0442 \u043a\u043b\u044e\u0447\u0435\u0432\u0443\u044e \u0440\u043e\u043b\u044c \u0432 \u0437\u0430\u0449\u0438\u0442\u0435 \u0437\u0434\u0430\u043d\u0438\u044f \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u0447\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u0438 \u0441\u043d\u0438\u0436\u0435\u043d\u0438\u044e \u0435\u0435 \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u0438. \u0412\u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u0438\u0447\u0438\u043d, \u043f\u043e\u0447\u0435\u043c\u0443 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0432\u0430\u0436\u043d\u0430:\\n\\n1. <b>\u0417\u0430\u0449\u0438\u0442\u0430 \u043e\u0442 \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434</b>: \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u0435 \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u0432 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442, \u0447\u0442\u043e \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432\u0430\u0436\u043d\u043e \u0432 \u0440\u0435\u0433\u0438\u043e\u043d\u0430\u0445 \u0441 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u0438\u043b\u0438 \u0441\u0435\u0437\u043e\u043d\u043d\u044b\u043c\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u043c\u0438 \u0438\u0445 \u0443\u0440\u043e\u0432\u043d\u044f.\\n\\n2. <b>\u041f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u0435 \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u0438</b>: \u041d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u0430 \u0432 \u0436\u0435\u043b\u0435\u0437\u043e\u0431\u0435\u0442\u043e\u043d\u0435, \u043f\u043e\u0434\u0432\u0435\u0440\u0436\u0435\u043d\u044b \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u0438 \u043f\u0440\u0438 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0438 \u0432\u043b\u0430\u0433\u0438. \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u044d\u0442\u043e\u0433\u043e.\\n\\n3. <b>\u0423\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u0435 \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u0438</b>: \u0421\u0443\u0445\u043e\u0439 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442 \u043b\u0443\u0447\u0448\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0442\u0435\u043f\u043b\u043e, \u0447\u0442\u043e \u0441\u043f\u043e\u0441\u043e\u0431\u0441\u0442\u0432\u0443\u0435\u0442 \u044d\u043d\u0435\u0440\u0433\u043e\u044d\u0444\u0444\u0435\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438 \u0437\u0434\u0430\u043d\u0438\u044f.\\n\\n4. <b>\u041f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u0435 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u043b\u0435\u0441\u0435\u043d\u0438 \u0438 \u0433\u0440\u0438\u0431\u043a\u0430</b>: \u0412\u043b\u0430\u0433\u0430 \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u0440\u0430\u0437\u0432\u0438\u0442\u0438\u044e \u043f\u043b\u0435\u0441\u0435\u043d\u0438 \u0438 \u0433\u0440\u0438\u0431\u043a\u0430, \u0447\u0442\u043e \u043d\u0435\u0433\u0430\u0442\u0438\u0432\u043d\u043e \u0432\u043b\u0438\u044f\u0435\u0442 \u043d\u0430 \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u0435 \u043e\u0431\u0438\u0442\u0430\u0442\u0435\u043b\u0435\u0439 \u0434\u043e\u043c\u0430.\\n\\n5. <b>\u041f\u0440\u043e\u0434\u043b\u0435\u043d\u0438\u0435 \u0441\u0440\u043e\u043a\u0430 \u0441\u043b\u0443\u0436\u0431\u044b \u0437\u0434\u0430\u043d\u0438\u044f</b>: \u0417\u0430\u0449\u0438\u0442\u0430 \u0444\u0443\u043d\u0434\u0430... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:24", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:25", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:25", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='3a399506-e9df-4bea-a87c-7cbd4ab9bbfa'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:36:25", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:37:04", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:37:04", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:37:04", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:37:04", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='get_file:file_0'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:37:04", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: send_file with args: (<handlers.BotHandlers object at 0x0000024BC82BB7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='get_file:file_0', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), id='1051116661486659567', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 14, 36, 25, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=23, offset=235, type=<MessageEntityType.BOLD>), MessageEntity(length=23, offset=432, type=<MessageEntityType.BOLD>), MessageEntity(length=23, offset=599, type=<MessageEntityType.BOLD>), MessageEntity(length=43, offset=712, type=<MessageEntityType.BOLD>), MessageEntity(length=29, offset=861, type=<MessageEntityType.BOLD>)), from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, us... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:37:04", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: send_file with result: <coroutine object BotHandlers.send_file at 0x0000024BED900460>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:37:05", "name": "handlers", "levelname": "DEBUG", "message": "Initiated async task to send file '\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf' to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:37:05", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:37:08", "name": "handlers", "levelname": "INFO", "message": "File '\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf' sent successfully to user_id=244732168.", "taskName": "Task-30"}
{"asctime": "2024-11-27 17:40:36", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 17:40:37", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:40:38", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:40:38", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:40:53", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:40:53", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:40:53", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:40:54", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:40:54", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:40:54", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:40:54", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:40:54", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: ru", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:40:54", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:40:54", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:40:54", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x000002222DE1B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 14, 40, 53, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2367, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193562), <telegram.ext._callbackcontext.CallbackContext object at 0x000002225341CDE0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:40:54", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x00000222302D0CA0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:40:55", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:40:55", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:40:59", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:40:59", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:40:59", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:40:59", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:40:59", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x000002222DE1B7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), id='1051116658836742984', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 14, 40, 55, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2368, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations')... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:40:59", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x00000222530D78A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:40:59", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:40:59", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:40:59", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x00000222534F4BC0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:40:59", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:40:59", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x00000222534F4BC0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:40:59", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:40:59", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:40:59", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:00", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:00", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:00", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:00", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:00", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:00", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:14", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:15", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:15", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:15", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:15", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x000002222DE1B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 14, 41, 14, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2370, supergroup_chat_created=False, text='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), update_id=881193564), <telegram.ext._callbackcontext.CallbackContext object at 0x000002225341D470>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:15", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x00000222534E89A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:15", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='c7b1f5d6-3c2d-428e-ab95-9d96106c23b2' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:15", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='c7b1f5d6-3c2d-428e-ab95-9d96106c23b2'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:15", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:15", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x00000222534F4BC0>, '\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), kwargs: {'chat_history': [HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430. \u041e\u043d\u0430 \u0438\u0433\u0440\u0430\u0435\u0442 \u043a\u043b\u044e\u0447\u0435\u0432\u0443\u044e \u0440\u043e\u043b\u044c \u0432 \u0437\u0430\u0449\u0438\u0442\u0435 \u0437\u0434\u0430\u043d\u0438\u044f \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u0447\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u0438 \u0441\u043d\u0438\u0436\u0435\u043d\u0438\u044e \u0435\u0435 \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u0438. \u0412\u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u0438\u0447\u0438\u043d, \u043f\u043e\u0447\u0435\u043c\u0443 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0432\u0430\u0436\u043d\u0430:\\n\\n1. <b>\u0417\u0430\u0449\u0438\u0442\u0430 \u043e\u0442 \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434</b>: \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u0435 \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u0432 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442, \u0447\u0442\u043e \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432\u0430\u0436\u043d\u043e \u0432 \u0440\u0435\u0433\u0438\u043e\u043d\u0430\u0445 \u0441 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u0438\u043b\u0438 \u0441\u0435\u0437\u043e\u043d\u043d\u044b\u043c\u0438 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f\u043c\u0438 \u0438\u0445 \u0443\u0440\u043e\u0432\u043d\u044f.\\n\\n2. <b>\u041f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0435\u043d\u0438\u0435 \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u0438</b>: \u041d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u0430 \u0432 \u0436\u0435\u043b\u0435\u0437\u043e\u0431\u0435\u0442\u043e\u043d\u0435, \u043f\u043e\u0434\u0432\u0435\u0440\u0436\u0435\u043d\u044b \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u0438 \u043f\u0440\u0438 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0438 \u0432\u043b\u0430\u0433\u0438. \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u0438\u0437\u0431\u0435\u0436\u0430\u0442... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:15", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002225351F920>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:15", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:16", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 14:41:16 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '112'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999982'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_25f4d0ff0b9bca63e0d783e75e0cdd9a'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=2HbvNkw9qsW5BVlfr1uT9Qu7H7mJmh0LzQSMTj0.wH0-1732718476-1.0.1.1-1tmbd3IHF2I7lG1FDX.TM5JT4cERuH6xZlO46... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:16", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_25f4d0ff0b9bca63e0d783e75e0cdd9a", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:16", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:16", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022251D08C20>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:16", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:17", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 14:41:17 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '52', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999983', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_4ca705309abeddc996f7305a23ade93c', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92e0cddfda2df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:17", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_4ca705309abeddc996f7305a23ade93c", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:17", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022251D08C20>, 'json_data': {'input': [[74598, 96256, 1506, 220, 4364, 23934, 220, 14815, 33006, 868, 13, 21, 23784, 11047, 12507, 90226, 1506, 1532, 11, 47353, 40842, 9136, 10298, 44858, 17756, 1506, 35592, 34943, 9239, 56999, 18999, 30392, 1482, 97334, 5927, 7820, 13337, 3114, 6856, 7486, 1532, 40842, 44946, 14476, 9542, 16742, 720, 1, 6735, 79686, 5927, 25756, 20346, 2156, 51627, 1, 46177, 8379, 15752, 11001, 114, 7094, 18999, 23934, 25756, 20346, 2156, 25657, 10589, 10298, 19190, 44786, 45916, 19039, 11, 21022, 19175, 2297, 43293, 44938, 7820, 17721, 13433, 2297, 34943, 9239, 56999, 18999, 68088, 720, 13810, 8164, 4655, 1830, 35667, 18482, 6850, 7753, 18226, 2156, 50619, 44065, 81376, 23680, 17165, 11, 25756, 48262, 2233, 1482, 41873, 96485, 15458, 17766, 34613, 7820, 6856, 7753, 23934, 12, 8164, 9706, 40842, 1482, 12426, 5591, 4655, 18034, 35... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:17", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 14:41:18 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '103', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998465', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '18ms', 'x-request-id': 'req_bab3ba20c56519f8a2f5d7c31fe7b22b', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92e0d44b282df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_bab3ba20c56519f8a2f5d7c31fe7b22b", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022251D08C20>, 'json_data': {'input': [[74598, 96256, 1506, 220, 7994, 23934, 220, 14815, 33006, 49899, 17766, 67124, 2233, 17766, 1840, 10589, 32062, 85864, 13, 23784, 12561, 13337, 28089, 94962, 90226, 1506, 1532, 93129, 73181, 12561, 16494, 5372, 94975, 12561, 35111, 5372, 34613, 7952, 2233, 5372, 38657, 13, 720, 868, 13, 1032, 23784, 330, 10693, 7975, 9706, 44786, 1, 55617, 94538, 10693, 18034, 35297, 7094, 24697, 19190, 39988, 5173, 3114, 9542, 4655, 11, 21022, 50945, 59138, 13373, 14257, 6148, 84350, 53671, 22918, 1532, 5524, 29256, 2233, 4329, 17394, 18999, 34943, 330, 6735, 5372, 16742, 720, 5591, 25756, 20346, 2156, 51627, 1, 46177, 13373, 20346, 17394, 39988, 18868, 5372, 16742, 34943, 9239, 56999, 18999, 19175, 89159, 1482, 14257, 52037, 18226, 11320, 5591, 18482, 84714, 1532, 15458, 39127, 44065, 720, 15752, 48262, 2233, 1482, 12426, 8... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:19", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 14:41:19 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '71', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998825', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '14ms', 'x-request-id': 'req_cb06bcb22fab8e0475bd3ea353b9eb32', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92e0da1d232df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:19", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_cb06bcb22fab8e0475bd3ea353b9eb32", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:19", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022251D08C20>, 'json_data': {'input': [[74598, 96256, 1506, 220, 2287, 23934, 220, 14815, 33006, 806, 13, 2983, 23227, 31203, 86291, 36750, 84198, 18034, 35297, 7094, 24697, 19190, 6856, 7740, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 19175, 89159, 1482, 78085, 2233, 7975, 59921, 18482, 720, 15752, 3114, 64569, 19479, 3865, 7740, 10693, 11122, 16331, 21956, 18999, 11, 100147, 4655, 7740, 78876, 8164, 7975, 21956, 17618, 5927, 5173, 3114, 7486, 1532, 11, 14257, 77911, 20812, 1482, 20879, 49284, 6735, 44938, 7740, 6850, 1840, 12426, 11, 99396, 17618, 720, 15752, 48262, 2233, 1482, 41873, 96485, 57186, 7740, 7820, 50223, 52744, 12561, 16494, 5372, 5372, 44786, 96573, 7753, 1840, 16331, 6856, 7740, 38098, 79370, 15458, 12415, 13, 35889, 1506, 14257, 77911, 20812, 1482, 320, 8164, 9706, 15752, 13337, 6856, 36352, 8, 720, 23630, 47805, 39280... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:19", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 14:41:19 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '145', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '12ms', 'x-request-id': 'req_e2b6441f362fd3c40f51052b5abd9249', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92e0e0af562df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_e2b6441f362fd3c40f51052b5abd9249", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022251D08C20>, 'json_data': {'input': [[806, 33006, 20, 13, 23, 13, 16, 13, 17, 23227, 15088, 39103, 23311, 4329, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 320, 4898, 7486, 16331, 6856, 11, 51548, 9706, 10589, 33742, 11, 18868, 38438, 44786, 18600, 32985, 7753, 5591, 3865, 17721, 6856, 8, 720, 7094, 48181, 12648, 48835, 8341, 4929, 25756, 48262, 2233, 1482, 41873, 96485, 15458, 12182, 20440, 57925, 13337, 5591, 52866, 18999, 5173, 29256, 23680, 39280, 5927, 9706, 4655, 5927, 2156, 38521, 2233, 4929, 720, 2297, 1482, 9239, 56999, 62491, 13, 720, 20, 13, 23, 13, 16, 13, 18, 39903, 14009, 14257, 77911, 94071, 5927, 3114, 34493, 1482, 41873, 96485, 57186, 46177, 25756, 48262, 2233, 1482, 41873, 96485, 57186, 12561, 16494, 5372, 4329, 70129, 18600, 3865, 3114, 17766, 44065, 720, 4898, 24803, 26503, 44065, 7740, 25756, 48262, 2233, 1482, 418... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 14:41:20 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '158', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998401', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '19ms', 'x-request-id': 'req_674a8bd624bdcecfc1f0a5e06be70b67', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92e0e3786b2df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_674a8bd624bdcecfc1f0a5e06be70b67", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 17:41:20. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 120 \u0438\u0437 239 \\n \\n15.6 \u0412 \u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u0435\u0441\u043b\u0438 \u043f\u043e\u0434\u0437\u0435\u043c\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u0438\u0442\u0441\u044f \u0432 \u043a\u043e\u0442\u043b\u043e\u0432\u0430\u043d\u0435 \u043f\u043e\u0434 \u0437\u0430\u0449\u0438\u0442\u043e\u0439 \\n\"\u0441\u0442\u0435\u043d\u044b \u0432 \u0433\u0440\u0443\u043d\u0442\u0435\" \u0438\u043b\u0438 \u043e\u0433\u0440\u0430\u0436\u0434\u0435\u043d\u0438\u044f \u0438\u0437 \u0433\u0440\u0443\u043d\u0442\u043e\u0446\u0435\u043c\u0435\u043d\u0442\u043d\u044b\u0445 \u0441\u0432\u0430\u0439, \u0430 \u043d\u0435\u0441\u0443\u0449\u0438\u0439 \u043a\u0430\u0440\u043a\u0430\u0441 \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \\n\u0438\u0441\u043f\u044b\u0442\u044b\u0432\u0430\u0442\u044c... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:26", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 14:41:26 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '4284'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '791378'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '646ms'), ('x-request-id', 'req_aa5b38741eff721473ad1d90301e1a5a'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=N9mJbIaB0s9ozGTmKMb6nwj1oHRvwOf0iOmjhDWCgR4-1732718486-1.0.1.1-EOWx6PgLoVkpowjquu8hq9Ui1FM4ACoyaVErjjHzlRE0gUM5uy6p.kWA4yosT5FfB9I7B0FgxAOrdq3j80.5eA; path=/; expires=Wed, 27... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:26", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_aa5b38741eff721473ad1d90301e1a5a", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:26", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:26", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e \u0437\u0434\u0430\u043d\u0438\u044f \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u0447\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044e \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u0430, \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u0438 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b \u0438 \u0441\u043d\u0438\u0436\u0435\u043d\u0438\u044e \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u0438 \u0432\u0441\u0435\u0439 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438. \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0442\u0438\u0442\u044c \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u0435 \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434, \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043b\u0435\u0441\u0435\u043d\u0438 \u0438 \u0433\u0440\u0438\u0431\u043a\u0430, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0441\u043f\u043e\u0441\u043e\u0431\u0441\u0442\u0432\u0443\u0435\u0442 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u044e \u043a\u043e\u043c\u0444\u043e\u0440\u0442\u043d\u043e\u0433\u043e \u043c\u0438\u043a\u0440\u043e\u043a\u043b\u0438\u043c\u0430\u0442\u0430 \u0432 \u043f\u043e\u043c\u0435\u0449\u0435\u043d\u0438\u0438. \u0412\u044b\u0431\u043e\u0440 \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0435\u0433\u043e \u0442\u0438\u043f\u0430 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u0438 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u0443\u0441\u043b\u043e\u0432\u0438\u0439 \u043d\u0430 \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u043b\u043e\u0449\u0430\u0434\u043a\u0435, \u0442\u0438\u043f\u0430 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430 \u0438 \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0435\u0439 \u0440\u0435\u0433\u0438\u043e\u043d\u0430.\\n\\n------------------\\nReferences:\\n\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf, pages: 65, 119, 120\\n\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0435 \u0414\u043e\u043c\u0430_\u0421\u041f 31-105-2002 .pdf, pages: 10\\n', {'\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf', '\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0435 \u0414\u043e\u043c\u0430_\u0421\u041f 31-105-2002 .pdf'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:26", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:27", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:27", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='c7b1f5d6-3c2d-428e-ab95-9d96106c23b2'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:27", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:36", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:37", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:37", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:37", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='get_file:file_1'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:37", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: send_file with args: (<handlers.BotHandlers object at 0x000002222DE1B7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='get_file:file_1', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), id='1051116660851144332', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 14, 41, 26, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2371, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='get_file:file_0', text='\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf'),), (InlineKeyboardButton(callback_data='get_file:file_1', text='\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0435 \u0414\u043e\u043c\u0430_\u0421\u041f 31-105-2002 .pdf'),))), supergroup_chat_created=False, text='\u0414\u0430... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:37", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: send_file with result: <coroutine object BotHandlers.send_file at 0x0000022253410460>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:37", "name": "handlers", "levelname": "DEBUG", "message": "Initiated async task to send file '\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0435 \u0414\u043e\u043c\u0430_\u0421\u041f 31-105-2002 .pdf' to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:37", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:41:40", "name": "handlers", "levelname": "INFO", "message": "File '\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0435 \u0414\u043e\u043c\u0430_\u0421\u041f 31-105-2002 .pdf' sent successfully to user_id=244732168.", "taskName": "Task-29"}
{"asctime": "2024-11-27 17:42:49", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 17:42:51", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:42:51", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:42:51", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:44:01", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 17:44:03", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:44:03", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:44:03", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:44:36", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:36", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:36", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:37", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:37", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:37", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:37", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:37", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: ru", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:37", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:37", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:37", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x000001F6FEF6B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 14, 44, 35, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2373, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193566), <telegram.ext._callbackcontext.CallbackContext object at 0x000001F6A45DF000>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:37", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x000001F6A44979A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:38", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:38", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:39", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:39", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:40", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:40", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:40", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x000001F6FEF6B7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), id='1051116659447839056', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 14, 44, 37, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2374, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations')... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:40", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x000001F6A32CB8A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:40", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:40", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:40", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x000001F6A46E6750>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:40", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:40", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x000001F6A46E6750>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:40", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:40", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:40", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:40", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:40", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:40", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:40", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:40", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:40", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:44", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:44", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:44", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:44", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:44", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x000001F6FEF6B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 14, 44, 43, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2376, supergroup_chat_created=False, text='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), update_id=881193568), <telegram.ext._callbackcontext.CallbackContext object at 0x000001F6A45DF000>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:44", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x000001F6A46F89A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:44", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='7fd5224b-be1a-4bdb-939a-3ce4d3618ffa' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:44", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='7fd5224b-be1a-4bdb-939a-3ce4d3618ffa'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:44", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:44", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x000001F6A46E6750>, '\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), kwargs: {'chat_history': [HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e \u0437\u0434\u0430\u043d\u0438\u044f \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u0447\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044e \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u0430, \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u0438 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b \u0438 \u0441\u043d\u0438\u0436\u0435\u043d\u0438\u044e \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u0438 \u0432\u0441\u0435\u0439 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438. \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0442\u0438\u0442\u044c \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u0435 \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434, \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043b\u0435\u0441\u0435\u043d\u0438 \u0438 \u0433\u0440\u0438\u0431\u043a\u0430, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0441\u043f\u043e\u0441\u043e\u0431\u0441\u0442\u0432\u0443\u0435\u0442 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u044e \u043a\u043e\u043c\u0444\u043e\u0440\u0442\u043d\u043e\u0433\u043e \u043c\u0438\u043a\u0440\u043e\u043a\u043b\u0438\u043c\u0430\u0442\u0430 \u0432 \u043f\u043e\u043c\u0435\u0449\u0435\u043d\u0438\u0438. \u0412\u044b\u0431\u043e\u0440 \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0435\u0433\u043e \u0442\u0438\u043f\u0430 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u0438 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u0443\u0441\u043b\u043e\u0432\u0438\u0439 \u043d\u0430 \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u043b\u043e\u0449\u0430\u0434\u043a\u0435, \u0442\u0438\u043f\u0430 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430 \u0438 \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0435\u0439 \u0440\u0435\u0433\u0438\u043e\u043d\u0430.\\n\\n------------------\\nReferences:\\n\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf, pages: 65, 119, 120\\n\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F6A472F060>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 14:44:45 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '75'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999982'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_9f1265aca09aa8ba579019df65fdbce3'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=AOgkY_BQG9XvQkejp60x6UzJ4UJuW5DXSwiY5zrJYbQ-1732718685-1.0.1.1-VU9n4Osr2gcAquC9x._1wSMsAt5ldIPCVXZIRk... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_9f1265aca09aa8ba579019df65fdbce3", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:45", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F6A2ED8C20>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 14:44:46 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '224', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999983', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_b97727d9bc266120df0c9f4d2bd6977c', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92e5e77c652dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_b97727d9bc266120df0c9f4d2bd6977c", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F6A2ED8C20>, 'json_data': {'input': [[74598, 96256, 1506, 220, 4364, 23934, 220, 14815, 33006, 868, 13, 21, 23784, 11047, 12507, 90226, 1506, 1532, 11, 47353, 40842, 9136, 10298, 44858, 17756, 1506, 35592, 34943, 9239, 56999, 18999, 30392, 1482, 97334, 5927, 7820, 13337, 3114, 6856, 7486, 1532, 40842, 44946, 14476, 9542, 16742, 720, 1, 6735, 79686, 5927, 25756, 20346, 2156, 51627, 1, 46177, 8379, 15752, 11001, 114, 7094, 18999, 23934, 25756, 20346, 2156, 25657, 10589, 10298, 19190, 44786, 45916, 19039, 11, 21022, 19175, 2297, 43293, 44938, 7820, 17721, 13433, 2297, 34943, 9239, 56999, 18999, 68088, 720, 13810, 8164, 4655, 1830, 35667, 18482, 6850, 7753, 18226, 2156, 50619, 44065, 81376, 23680, 17165, 11, 25756, 48262, 2233, 1482, 41873, 96485, 15458, 17766, 34613, 7820, 6856, 7753, 23934, 12, 8164, 9706, 40842, 1482, 12426, 5591, 4655, 18034, 35... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 14:44:47 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '161', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998465', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '18ms', 'x-request-id': 'req_25c5edfc976004a0b608e5eec4139ef5', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92e5ee8fae2dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_25c5edfc976004a0b608e5eec4139ef5", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F6A2ED8C20>, 'json_data': {'input': [[74598, 96256, 1506, 220, 7994, 23934, 220, 14815, 33006, 49899, 17766, 67124, 2233, 17766, 1840, 10589, 32062, 85864, 13, 23784, 12561, 13337, 28089, 94962, 90226, 1506, 1532, 93129, 73181, 12561, 16494, 5372, 94975, 12561, 35111, 5372, 34613, 7952, 2233, 5372, 38657, 13, 720, 868, 13, 1032, 23784, 330, 10693, 7975, 9706, 44786, 1, 55617, 94538, 10693, 18034, 35297, 7094, 24697, 19190, 39988, 5173, 3114, 9542, 4655, 11, 21022, 50945, 59138, 13373, 14257, 6148, 84350, 53671, 22918, 1532, 5524, 29256, 2233, 4329, 17394, 18999, 34943, 330, 6735, 5372, 16742, 720, 5591, 25756, 20346, 2156, 51627, 1, 46177, 13373, 20346, 17394, 39988, 18868, 5372, 16742, 34943, 9239, 56999, 18999, 19175, 89159, 1482, 14257, 52037, 18226, 11320, 5591, 18482, 84714, 1532, 15458, 39127, 44065, 720, 15752, 48262, 2233, 1482, 12426, 8... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 14:44:47 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '151', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998826', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '14ms', 'x-request-id': 'req_8cd4c0df03b24aafcc69338e0a0327f1', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92e5f3c9732dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_8cd4c0df03b24aafcc69338e0a0327f1", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F6A472F100>, 'json_data': {'input': [[74598, 96256, 1506, 220, 2287, 23934, 220, 14815, 33006, 806, 13, 2983, 23227, 31203, 86291, 36750, 84198, 18034, 35297, 7094, 24697, 19190, 6856, 7740, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 19175, 89159, 1482, 78085, 2233, 7975, 59921, 18482, 720, 15752, 3114, 64569, 19479, 3865, 7740, 10693, 11122, 16331, 21956, 18999, 11, 100147, 4655, 7740, 78876, 8164, 7975, 21956, 17618, 5927, 5173, 3114, 7486, 1532, 11, 14257, 77911, 20812, 1482, 20879, 49284, 6735, 44938, 7740, 6850, 1840, 12426, 11, 99396, 17618, 720, 15752, 48262, 2233, 1482, 41873, 96485, 57186, 7740, 7820, 50223, 52744, 12561, 16494, 5372, 5372, 44786, 96573, 7753, 1840, 16331, 6856, 7740, 38098, 79370, 15458, 12415, 13, 35889, 1506, 14257, 77911, 20812, 1482, 320, 8164, 9706, 15752, 13337, 6856, 36352, 8, 720, 23630, 47805, 39280... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 14:44:48 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '62', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '12ms', 'x-request-id': 'req_1c96cdbe8615c5248e5fec598ff59c0b', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92e5f65a4b2dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_1c96cdbe8615c5248e5fec598ff59c0b", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F6A472F100>, 'json_data': {'input': [[806, 33006, 20, 13, 23, 13, 16, 13, 17, 23227, 15088, 39103, 23311, 4329, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 320, 4898, 7486, 16331, 6856, 11, 51548, 9706, 10589, 33742, 11, 18868, 38438, 44786, 18600, 32985, 7753, 5591, 3865, 17721, 6856, 8, 720, 7094, 48181, 12648, 48835, 8341, 4929, 25756, 48262, 2233, 1482, 41873, 96485, 15458, 12182, 20440, 57925, 13337, 5591, 52866, 18999, 5173, 29256, 23680, 39280, 5927, 9706, 4655, 5927, 2156, 38521, 2233, 4929, 720, 2297, 1482, 9239, 56999, 62491, 13, 720, 20, 13, 23, 13, 16, 13, 18, 39903, 14009, 14257, 77911, 94071, 5927, 3114, 34493, 1482, 41873, 96485, 57186, 46177, 25756, 48262, 2233, 1482, 41873, 96485, 57186, 12561, 16494, 5372, 4329, 70129, 18600, 3865, 3114, 17766, 44065, 720, 4898, 24803, 26503, 44065, 7740, 25756, 48262, 2233, 1482, 418... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 14:44:49 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '113', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998401', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '19ms', 'x-request-id': 'req_16fecbd98daac15fc87476467ab45ef1', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92e5fcfd9e2dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_16fecbd98daac15fc87476467ab45ef1", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 17:44:50. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 120 \u0438\u0437 239 \\n \\n15.6 \u0412 \u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u0435\u0441\u043b\u0438 \u043f\u043e\u0434\u0437\u0435\u043c\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u0438\u0442\u0441\u044f \u0432 \u043a\u043e\u0442\u043b\u043e\u0432\u0430\u043d\u0435 \u043f\u043e\u0434 \u0437\u0430\u0449\u0438\u0442\u043e\u0439 \\n\"\u0441\u0442\u0435\u043d\u044b \u0432 \u0433\u0440\u0443\u043d\u0442\u0435\" \u0438\u043b\u0438 \u043e\u0433\u0440\u0430\u0436\u0434\u0435\u043d\u0438\u044f \u0438\u0437 \u0433\u0440\u0443\u043d\u0442\u043e\u0446\u0435\u043c\u0435\u043d\u0442\u043d\u044b\u0445 \u0441\u0432\u0430\u0439, \u0430 \u043d\u0435\u0441\u0443\u0449\u0438\u0439 \u043a\u0430\u0440\u043a\u0430\u0441 \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \\n\u0438\u0441\u043f\u044b\u0442\u044b\u0432\u0430\u0442\u044c... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 14:44:57 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '5671'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '791935'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '604ms'), ('x-request-id', 'req_f7dbd7fb730efd95c1e71c3e3965c615'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=_EkDceNjIV3XGfZwcqSIkJCut5HjwKuicD1AmD3nAtQ-1732718697-1.0.1.1-.DAO.qw_1N9f8SOeZ.t.CTnfHnsg8BCYjfQKMyzmQW9ZpbeO9hcJVrtTGMiwVKtovPqf4S_2XiN9jGqbicIxPg; path=/; expires=Wed, 27... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_f7dbd7fb730efd95c1e71c3e3965c615", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:57", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:57", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442 \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u0447\u0442\u043e \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438, \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u044e \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b \u0438 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043b\u0435\u0441\u0435\u043d\u0438. \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u044c \u0438 \u043f\u0440\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u0437\u0434\u0430\u043d\u0438\u044f, \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u043f\u043e\u0432\u044b\u0448\u0435\u043d\u043d\u043e\u0439 \u0432\u043b\u0430\u0436\u043d\u043e\u0441\u0442\u0438 \u0438 \u0432 \u0440\u0435\u0433\u0438\u043e\u043d\u0430\u0445 \u0441 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434. \u0412\u044b\u0431\u043e\u0440 \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0435\u0433\u043e \u0442\u0438\u043f\u0430 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u0438 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0445 \u0443\u0441\u043b\u043e\u0432\u0438\u0439 \u043d\u0430 \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u043b\u043e\u0449\u0430\u0434\u043a\u0435 \u0438 \u0442\u0438\u043f\u0430 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430.\\n\\n------------------\\nReferences:\\n\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf, pages: 65, 119, 120\\n\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0435 \u0414\u043e\u043c\u0430_\u0421\u041f 31-105-2002 .pdf, pages: 10\\n', {'\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf', '\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0435 \u0414\u043e\u043c\u0430_\u0421\u041f 31-105-2002 .pdf'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:57", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:58", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:58", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='7fd5224b-be1a-4bdb-939a-3ce4d3618ffa'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:44:58", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:45:58", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 17:46:00", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:46:00", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:46:00", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 17:46:44", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:45", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:45", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:45", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:45", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:45", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: ru", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:45", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:45", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/start'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:45", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: start with args: (<handlers.BotHandlers object at 0x000001FD63088590>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 14, 46, 44, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=6, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2378, supergroup_chat_created=False, text='/start'), update_id=881193569), <telegram.ext._callbackcontext.CallbackContext object at 0x000001FD6321EE40>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:45", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: start with result: <coroutine object BotHandlers.start at 0x000001FD630C30F0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:45", "name": "handlers", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:46", "name": "handlers", "levelname": "INFO", "message": "Sent welcome message to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:46", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:48", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:49", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:49", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:49", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:49", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x000001FD63088590>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 14, 46, 48, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2380, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193570), <telegram.ext._callbackcontext.CallbackContext object at 0x000001FD6321D470>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:49", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x000001FD630D7520>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:49", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:49", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:51", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:51", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:51", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:51", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:51", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x000001FD63088590>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), id='1051116658071943839', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 14, 46, 49, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2381, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations')... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:51", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x000001FD62ED78A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:51", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:51", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:51", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x000001FD6326F080>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:51", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:51", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x000001FD6326F080>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:51", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:51", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:51", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:51", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:51", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:51", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:51", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:51", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:46:51", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:02", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:02", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:02", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:02", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:02", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x000001FD63088590>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 14, 47, 2, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2383, supergroup_chat_created=False, text='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), update_id=881193572), <telegram.ext._callbackcontext.CallbackContext object at 0x000001FD6321D470>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:02", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x000001FD632E8B30>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:02", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='db1f16ee-1639-46cd-abe9-bf03e05c949c' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:02", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='db1f16ee-1639-46cd-abe9-bf03e05c949c'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:02", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:02", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x000001FD6326F080>, '\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), kwargs: {'chat_history': [HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442 \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u0447\u0442\u043e \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438, \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u044e \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b \u0438 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043b\u0435\u0441\u0435\u043d\u0438. \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u044c \u0438 \u043f\u0440\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u0437\u0434\u0430\u043d\u0438\u044f, \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u043f\u043e\u0432\u044b\u0448\u0435\u043d\u043d\u043e\u0439 \u0432\u043b\u0430\u0436\u043d\u043e\u0441\u0442\u0438 \u0438 \u0432 \u0440\u0435\u0433\u0438\u043e\u043d\u0430\u0445 \u0441 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434. \u0412\u044b\u0431\u043e\u0440 \u043f\u043e\u0434\u0445\u043e\u0434\u044f\u0449\u0435\u0433\u043e \u0442\u0438\u043f\u0430 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u0438 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0445 \u0443\u0441\u043b\u043e\u0432\u0438\u0439 \u043d\u0430 \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043f\u043b\u043e\u0449\u0430\u0434\u043a\u0435 \u0438 \u0442\u0438\u043f\u0430 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430.\\n\\n------------------\\nReferences:\\n\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf, pages: 65, 119, 120\\n\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0435 \u0414\u043e\u043c\u0430_\u0421\u041f 31-105-2002 .pdf, pages: 10', additional_kwargs={}, res... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:03", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001FD6331BEC0>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:03", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:04", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 14:47:03 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '175'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999983'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_8754553e43fe927f9b201076d9952a22'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=PbRS49ju8JXAzct6FNn4Ax4t0IWzRK4W6XCykJM_i.g-1732718823-1.0.1.1-z5Gdh2FVGYp9Z0b8l7mS6UsQPP6oUhiy8IbCD... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:04", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_8754553e43fe927f9b201076d9952a22", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:04", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:04", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001FD61B08C20>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:04", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:05", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 14:47:05 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '117', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999982', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_3ce4fd93b69b915ff894f3b381a6cc76', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92e94a6e29c02e-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:05", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_3ce4fd93b69b915ff894f3b381a6cc76", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:05", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001FD61B08C20>, 'json_data': {'input': [[74598, 96256, 1506, 220, 4364, 23934, 220, 14815, 33006, 868, 13, 21, 23784, 11047, 12507, 90226, 1506, 1532, 11, 47353, 40842, 9136, 10298, 44858, 17756, 1506, 35592, 34943, 9239, 56999, 18999, 30392, 1482, 97334, 5927, 7820, 13337, 3114, 6856, 7486, 1532, 40842, 44946, 14476, 9542, 16742, 720, 1, 6735, 79686, 5927, 25756, 20346, 2156, 51627, 1, 46177, 8379, 15752, 11001, 114, 7094, 18999, 23934, 25756, 20346, 2156, 25657, 10589, 10298, 19190, 44786, 45916, 19039, 11, 21022, 19175, 2297, 43293, 44938, 7820, 17721, 13433, 2297, 34943, 9239, 56999, 18999, 68088, 720, 13810, 8164, 4655, 1830, 35667, 18482, 6850, 7753, 18226, 2156, 50619, 44065, 81376, 23680, 17165, 11, 25756, 48262, 2233, 1482, 41873, 96485, 15458, 17766, 34613, 7820, 6856, 7753, 23934, 12, 8164, 9706, 40842, 1482, 12426, 5591, 4655, 18034, 35... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:05", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 14:47:05 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '136', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998465', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '18ms', 'x-request-id': 'req_2511e0727b181022d292186771164bd4', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92e950bfd7c02e-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_2511e0727b181022d292186771164bd4", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001FD61B08C20>, 'json_data': {'input': [[74598, 96256, 1506, 220, 7994, 23934, 220, 14815, 33006, 49899, 17766, 67124, 2233, 17766, 1840, 10589, 32062, 85864, 13, 23784, 12561, 13337, 28089, 94962, 90226, 1506, 1532, 93129, 73181, 12561, 16494, 5372, 94975, 12561, 35111, 5372, 34613, 7952, 2233, 5372, 38657, 13, 720, 868, 13, 1032, 23784, 330, 10693, 7975, 9706, 44786, 1, 55617, 94538, 10693, 18034, 35297, 7094, 24697, 19190, 39988, 5173, 3114, 9542, 4655, 11, 21022, 50945, 59138, 13373, 14257, 6148, 84350, 53671, 22918, 1532, 5524, 29256, 2233, 4329, 17394, 18999, 34943, 330, 6735, 5372, 16742, 720, 5591, 25756, 20346, 2156, 51627, 1, 46177, 13373, 20346, 17394, 39988, 18868, 5372, 16742, 34943, 9239, 56999, 18999, 19175, 89159, 1482, 14257, 52037, 18226, 11320, 5591, 18482, 84714, 1532, 15458, 39127, 44065, 720, 15752, 48262, 2233, 1482, 12426, 8... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 14:47:06 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '132', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998826', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '14ms', 'x-request-id': 'req_786f7189bcf5a5d4b2b77fbf114aa50e', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92e956c99cc02e-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_786f7189bcf5a5d4b2b77fbf114aa50e", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001FD61B08C20>, 'json_data': {'input': [[74598, 96256, 1506, 220, 2287, 23934, 220, 14815, 33006, 806, 13, 2983, 23227, 31203, 86291, 36750, 84198, 18034, 35297, 7094, 24697, 19190, 6856, 7740, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 19175, 89159, 1482, 78085, 2233, 7975, 59921, 18482, 720, 15752, 3114, 64569, 19479, 3865, 7740, 10693, 11122, 16331, 21956, 18999, 11, 100147, 4655, 7740, 78876, 8164, 7975, 21956, 17618, 5927, 5173, 3114, 7486, 1532, 11, 14257, 77911, 20812, 1482, 20879, 49284, 6735, 44938, 7740, 6850, 1840, 12426, 11, 99396, 17618, 720, 15752, 48262, 2233, 1482, 41873, 96485, 57186, 7740, 7820, 50223, 52744, 12561, 16494, 5372, 5372, 44786, 96573, 7753, 1840, 16331, 6856, 7740, 38098, 79370, 15458, 12415, 13, 35889, 1506, 14257, 77911, 20812, 1482, 320, 8164, 9706, 15752, 13337, 6856, 36352, 8, 720, 23630, 47805, 39280... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 14:47:06 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '89', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '12ms', 'x-request-id': 'req_e8432a4e922c24a6108186cc213fb5f6', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92e9595a41c02e-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_e8432a4e922c24a6108186cc213fb5f6", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001FD61B08C20>, 'json_data': {'input': [[806, 33006, 20, 13, 23, 13, 16, 13, 17, 23227, 15088, 39103, 23311, 4329, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 320, 4898, 7486, 16331, 6856, 11, 51548, 9706, 10589, 33742, 11, 18868, 38438, 44786, 18600, 32985, 7753, 5591, 3865, 17721, 6856, 8, 720, 7094, 48181, 12648, 48835, 8341, 4929, 25756, 48262, 2233, 1482, 41873, 96485, 15458, 12182, 20440, 57925, 13337, 5591, 52866, 18999, 5173, 29256, 23680, 39280, 5927, 9706, 4655, 5927, 2156, 38521, 2233, 4929, 720, 2297, 1482, 9239, 56999, 62491, 13, 720, 20, 13, 23, 13, 16, 13, 18, 39903, 14009, 14257, 77911, 94071, 5927, 3114, 34493, 1482, 41873, 96485, 57186, 46177, 25756, 48262, 2233, 1482, 41873, 96485, 57186, 12561, 16494, 5372, 4329, 70129, 18600, 3865, 3114, 17766, 44065, 720, 4898, 24803, 26503, 44065, 7740, 25756, 48262, 2233, 1482, 418... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:08", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 14:47:07 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '86', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998401', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '19ms', 'x-request-id': 'req_80e86eaf53866007f487bb48572c6ea7', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e92e95beb60c02e-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:08", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_80e86eaf53866007f487bb48572c6ea7", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:08", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 17:47:08. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 120 \u0438\u0437 239 \\n \\n15.6 \u0412 \u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u0435\u0441\u043b\u0438 \u043f\u043e\u0434\u0437\u0435\u043c\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u0438\u0442\u0441\u044f \u0432 \u043a\u043e\u0442\u043b\u043e\u0432\u0430\u043d\u0435 \u043f\u043e\u0434 \u0437\u0430\u0449\u0438\u0442\u043e\u0439 \\n\"\u0441\u0442\u0435\u043d\u044b \u0432 \u0433\u0440\u0443\u043d\u0442\u0435\" \u0438\u043b\u0438 \u043e\u0433\u0440\u0430\u0436\u0434\u0435\u043d\u0438\u044f \u0438\u0437 \u0433\u0440\u0443\u043d\u0442\u043e\u0446\u0435\u043c\u0435\u043d\u0442\u043d\u044b\u0445 \u0441\u0432\u0430\u0439, \u0430 \u043d\u0435\u0441\u0443\u0449\u0438\u0439 \u043a\u0430\u0440\u043a\u0430\u0441 \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \\n\u0438\u0441\u043f\u044b\u0442\u044b\u0432\u0430\u0442\u044c... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:08", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:12", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 14:47:12 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '2712'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '792418'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '568ms'), ('x-request-id', 'req_722b676b6c15ade5856899eb44d0ef61'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=yroSGgGJmcBq0ks5xEGsNDM2DLyalCnqoa80xz7a3RI-1732718832-1.0.1.1-Vhe_4lqCA82N5FNew6XjoK4JNKVTLkjm0lNEVemw..BNMXHBDuVo2vKBLQL0DeCjgdraShR3qApmX1n8soUzkg; path=/; expires=Wed, 27... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:12", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_722b676b6c15ade5856899eb44d0ef61", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:12", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:12", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442 \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u0447\u0442\u043e \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0430\u043a\u0438\u0435 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b, \u043a\u0430\u043a \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u044f \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b, \u0440\u0430\u0437\u0440\u0443\u0448\u0435\u043d\u0438\u0435 \u0431\u0435\u0442\u043e\u043d\u0430 \u0438 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043b\u0435\u0441\u0435\u043d\u0438. \u042d\u0442\u043e \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432\u0430\u0436\u043d\u043e \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u043f\u043e\u0432\u044b\u0448\u0435\u043d\u043d\u043e\u0439 \u0432\u043b\u0430\u0436\u043d\u043e\u0441\u0442\u0438 \u0438 \u0432 \u0440\u0430\u0439\u043e\u043d\u0430\u0445 \u0441 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434. \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u043f\u0440\u043e\u0434\u043b\u0438\u0442\u044c \u0441\u0440\u043e\u043a \u0441\u043b\u0443\u0436\u0431\u044b \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0435\u0435 \u043f\u0440\u043e\u0447\u043d\u043e\u0441\u0442\u044c.\\n\\n------------------\\nReferences:\\n\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf, pages: 65, 119, 120\\n\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0435 \u0414\u043e\u043c\u0430_\u0421\u041f 31-105-2002 .pdf, pages: 10\\n', {'\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0435 \u0414\u043e\u043c\u0430_\u0421\u041f 31-105-2002 .pdf', '\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:12", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:13", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:13", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='db1f16ee-1639-46cd-abe9-bf03e05c949c'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 17:47:13", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:20", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 18:06:21", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 18:06:22", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 18:06:22", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 18:06:36", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:37", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:37", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:37", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:37", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:37", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: ru", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:37", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:37", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/start'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:37", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: start with args: (<handlers.BotHandlers object at 0x000001FA418DB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 15, 6, 36, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=6, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2385, supergroup_chat_created=False, text='/start'), update_id=881193573), <telegram.ext._callbackcontext.CallbackContext object at 0x000001FA66EB8DE0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:37", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: start with result: <coroutine object BotHandlers.start at 0x000001FA66D63480>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:37", "name": "handlers", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:38", "name": "handlers", "levelname": "INFO", "message": "Sent welcome message to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:38", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:41", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:42", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:42", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:42", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/status'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:42", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: status with args: (<handlers.BotHandlers object at 0x000001FA418DB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 15, 6, 41, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=7, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2387, supergroup_chat_created=False, text='/status'), update_id=881193574), <telegram.ext._callbackcontext.CallbackContext object at 0x000001FA66EB9FD0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:42", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: status with result: <coroutine object BotHandlers.status at 0x000001FA66D6ACE0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:42", "name": "handlers", "levelname": "INFO", "message": "Provided status to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:42", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:51", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:51", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:51", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:51", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:51", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x000001FA418DB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 15, 6, 51, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2389, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193575), <telegram.ext._callbackcontext.CallbackContext object at 0x000001FA66EBB150>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:51", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x000001FA66D7F400>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:52", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:52", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:54", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:54", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:54", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:54", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:54", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x000001FA418DB7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), id='1051116659886794916', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 15, 6, 52, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2390, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations'),... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:54", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x000001FA65BAB8A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:54", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:54", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:54", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x000001FA66FE63F0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:54", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:54", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x000001FA66FE63F0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:54", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:54", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:54", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:54", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:54", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:54", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:54", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:55", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:06:55", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:18", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:18", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:18", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:18", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:18", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x000001FA418DB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 15, 7, 18, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2392, supergroup_chat_created=False, text='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), update_id=881193577), <telegram.ext._callbackcontext.CallbackContext object at 0x000001FA66EBB150>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:18", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x000001FA66FD8CC0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:18", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='c9c06525-c4a9-4c74-92da-f219832d8378' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:18", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='c9c06525-c4a9-4c74-92da-f219832d8378'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:18", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:18", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x000001FA66FE63F0>, '\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), kwargs: {'chat_history': [HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442 \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u0447\u0442\u043e \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0430\u043a\u0438\u0435 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b, \u043a\u0430\u043a \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u044f \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b, \u0440\u0430\u0437\u0440\u0443\u0448\u0435\u043d\u0438\u0435 \u0431\u0435\u0442\u043e\u043d\u0430 \u0438 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043b\u0435\u0441\u0435\u043d\u0438. \u042d\u0442\u043e \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432\u0430\u0436\u043d\u043e \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u043f\u043e\u0432\u044b\u0448\u0435\u043d\u043d\u043e\u0439 \u0432\u043b\u0430\u0436\u043d\u043e\u0441\u0442\u0438 \u0438 \u0432 \u0440\u0430\u0439\u043e\u043d\u0430\u0445 \u0441 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434. \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u043f\u0440\u043e\u0434\u043b\u0438\u0442\u044c \u0441\u0440\u043e\u043a \u0441\u043b\u0443\u0436\u0431\u044b \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0435\u0435 \u043f\u0440\u043e\u0447\u043d\u043e\u0441\u0442\u044c.\\n\\n------------------\\nReferences:\\n\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf, pages: 65, 119, 120\\n\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0435 \u0414\u043e\u043c\u0430_\u0421\u041f 31-105-2002 .pdf, pages: 10', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:19", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001FA6700F740>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:19", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 15:07:19 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '138'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999982'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_c9e26b23372ef30a2fd68a89a1dfad4d'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=5DQCTKfauhGcUIpX66OGtaJrag05zFi8wdCD8f98DWI-1732720039-1.0.1.1-xWbCYEvkFGSbu6NJBd2TVZxJWdpiVa1.Xcb_T... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_c9e26b23372ef30a2fd68a89a1dfad4d", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:20", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001FA657A8C20>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:07:20 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '190', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999983', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_d2d5434a06a568d386392056cc932916', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9306f90dc0b5d2-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_d2d5434a06a568d386392056cc932916", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001FA657A8C20>, 'json_data': {'input': [[74598, 96256, 1506, 220, 4364, 23934, 220, 14815, 33006, 868, 13, 21, 23784, 11047, 12507, 90226, 1506, 1532, 11, 47353, 40842, 9136, 10298, 44858, 17756, 1506, 35592, 34943, 9239, 56999, 18999, 30392, 1482, 97334, 5927, 7820, 13337, 3114, 6856, 7486, 1532, 40842, 44946, 14476, 9542, 16742, 720, 1, 6735, 79686, 5927, 25756, 20346, 2156, 51627, 1, 46177, 8379, 15752, 11001, 114, 7094, 18999, 23934, 25756, 20346, 2156, 25657, 10589, 10298, 19190, 44786, 45916, 19039, 11, 21022, 19175, 2297, 43293, 44938, 7820, 17721, 13433, 2297, 34943, 9239, 56999, 18999, 68088, 720, 13810, 8164, 4655, 1830, 35667, 18482, 6850, 7753, 18226, 2156, 50619, 44065, 81376, 23680, 17165, 11, 25756, 48262, 2233, 1482, 41873, 96485, 15458, 17766, 34613, 7820, 6856, 7753, 23934, 12, 8164, 9706, 40842, 1482, 12426, 5591, 4655, 18034, 35... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:07:20 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '179', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998465', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '18ms', 'x-request-id': 'req_f949bfc3fa5750828e4a2396af902fb7', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9306fd5938b5d2-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_f949bfc3fa5750828e4a2396af902fb7", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001FA657A8C20>, 'json_data': {'input': [[74598, 96256, 1506, 220, 7994, 23934, 220, 14815, 33006, 49899, 17766, 67124, 2233, 17766, 1840, 10589, 32062, 85864, 13, 23784, 12561, 13337, 28089, 94962, 90226, 1506, 1532, 93129, 73181, 12561, 16494, 5372, 94975, 12561, 35111, 5372, 34613, 7952, 2233, 5372, 38657, 13, 720, 868, 13, 1032, 23784, 330, 10693, 7975, 9706, 44786, 1, 55617, 94538, 10693, 18034, 35297, 7094, 24697, 19190, 39988, 5173, 3114, 9542, 4655, 11, 21022, 50945, 59138, 13373, 14257, 6148, 84350, 53671, 22918, 1532, 5524, 29256, 2233, 4329, 17394, 18999, 34943, 330, 6735, 5372, 16742, 720, 5591, 25756, 20346, 2156, 51627, 1, 46177, 13373, 20346, 17394, 39988, 18868, 5372, 16742, 34943, 9239, 56999, 18999, 19175, 89159, 1482, 14257, 52037, 18226, 11320, 5591, 18482, 84714, 1532, 15458, 39127, 44065, 720, 15752, 48262, 2233, 1482, 12426, 8... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:07:21 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '63', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998825', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '14ms', 'x-request-id': 'req_f15667d946e4b1997180b06d729c35cb', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9307001b76b5d2-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_f15667d946e4b1997180b06d729c35cb", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001FA657A8C20>, 'json_data': {'input': [[74598, 96256, 1506, 220, 2287, 23934, 220, 14815, 33006, 806, 13, 2983, 23227, 31203, 86291, 36750, 84198, 18034, 35297, 7094, 24697, 19190, 6856, 7740, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 19175, 89159, 1482, 78085, 2233, 7975, 59921, 18482, 720, 15752, 3114, 64569, 19479, 3865, 7740, 10693, 11122, 16331, 21956, 18999, 11, 100147, 4655, 7740, 78876, 8164, 7975, 21956, 17618, 5927, 5173, 3114, 7486, 1532, 11, 14257, 77911, 20812, 1482, 20879, 49284, 6735, 44938, 7740, 6850, 1840, 12426, 11, 99396, 17618, 720, 15752, 48262, 2233, 1482, 41873, 96485, 57186, 7740, 7820, 50223, 52744, 12561, 16494, 5372, 5372, 44786, 96573, 7753, 1840, 16331, 6856, 7740, 38098, 79370, 15458, 12415, 13, 35889, 1506, 14257, 77911, 20812, 1482, 320, 8164, 9706, 15752, 13337, 6856, 36352, 8, 720, 23630, 47805, 39280... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:22", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:07:22 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '167', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '12ms', 'x-request-id': 'req_8c02b2ef626d7acd603fc2df80fcb6bc', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9307034da3b5d2-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:22", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_8c02b2ef626d7acd603fc2df80fcb6bc", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:22", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001FA657A8C20>, 'json_data': {'input': [[806, 33006, 20, 13, 23, 13, 16, 13, 17, 23227, 15088, 39103, 23311, 4329, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 320, 4898, 7486, 16331, 6856, 11, 51548, 9706, 10589, 33742, 11, 18868, 38438, 44786, 18600, 32985, 7753, 5591, 3865, 17721, 6856, 8, 720, 7094, 48181, 12648, 48835, 8341, 4929, 25756, 48262, 2233, 1482, 41873, 96485, 15458, 12182, 20440, 57925, 13337, 5591, 52866, 18999, 5173, 29256, 23680, 39280, 5927, 9706, 4655, 5927, 2156, 38521, 2233, 4929, 720, 2297, 1482, 9239, 56999, 62491, 13, 720, 20, 13, 23, 13, 16, 13, 18, 39903, 14009, 14257, 77911, 94071, 5927, 3114, 34493, 1482, 41873, 96485, 57186, 46177, 25756, 48262, 2233, 1482, 41873, 96485, 57186, 12561, 16494, 5372, 4329, 70129, 18600, 3865, 3114, 17766, 44065, 720, 4898, 24803, 26503, 44065, 7740, 25756, 48262, 2233, 1482, 418... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:22", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:23", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:07:22 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '150', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998401', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '19ms', 'x-request-id': 'req_a2bdbc0bf30812152b46ce482ef16fef', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9307079949b5d2-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:23", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_a2bdbc0bf30812152b46ce482ef16fef", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:23", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 18:07:23. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 120 \u0438\u0437 239 \\n \\n15.6 \u0412 \u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u0435\u0441\u043b\u0438 \u043f\u043e\u0434\u0437\u0435\u043c\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u0438\u0442\u0441\u044f \u0432 \u043a\u043e\u0442\u043b\u043e\u0432\u0430\u043d\u0435 \u043f\u043e\u0434 \u0437\u0430\u0449\u0438\u0442\u043e\u0439 \\n\"\u0441\u0442\u0435\u043d\u044b \u0432 \u0433\u0440\u0443\u043d\u0442\u0435\" \u0438\u043b\u0438 \u043e\u0433\u0440\u0430\u0436\u0434\u0435\u043d\u0438\u044f \u0438\u0437 \u0433\u0440\u0443\u043d\u0442\u043e\u0446\u0435\u043c\u0435\u043d\u0442\u043d\u044b\u0445 \u0441\u0432\u0430\u0439, \u0430 \u043d\u0435\u0441\u0443\u0449\u0438\u0439 \u043a\u0430\u0440\u043a\u0430\u0441 \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \\n\u0438\u0441\u043f\u044b\u0442\u044b\u0432\u0430\u0442\u044c... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:23", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:25", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 15:07:25 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '2125'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '793129'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '515ms'), ('x-request-id', 'req_10464b2cedd3796258c013673c0c13ba'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=Xde_7og.49qX4wEk5hyq9ooN4_ThJC6yOY3FDNG4T7E-1732720045-1.0.1.1-H5F1doTxvEkS832BnrPvHKwcbKh.kDB50AWw8HsNdnRgYel.fQr0mU.I5tqU6wmUS43p_LmaN._o_DmboiS4rw; path=/; expires=Wed, 27... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:25", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_10464b2cedd3796258c013673c0c13ba", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:25", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:25", "name": "decorators", "levelname": "ERROR", "message": "Exception occurred in generate_response: 'ChatPromptTemplate' object has no attribute 'split'", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\decorators.py\", line 25, in wrapper\n    result = func(*args, **kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\llm_service.py\", line 322, in generate_response\n    return parser_html(answer_with_references), set([doc.metadata.get(\"source\") for doc in relevant_docs])\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\helpers.py\", line 33, in parser_html\n    lines = text.split('\\n')\n            ^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\pydantic\\main.py\", line 856, in __getattr__\n    raise AttributeError(f'{type(self).__name__!r} object has no attribute {item!r}')\nAttributeError: 'ChatPromptTemplate' object has no attribute 'split'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:25", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:26", "name": "handlers", "levelname": "INFO", "message": "Sent response to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:26", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='c9c06525-c4a9-4c74-92da-f219832d8378'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:07:26", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:01", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 18:15:03", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 18:15:03", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 18:15:03", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 18:15:28", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:28", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:28", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:29", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:29", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:29", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:29", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:29", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: ru", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:29", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:29", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:29", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x00000127DE9CB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 15, 15, 28, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2394, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193578), <telegram.ext._callbackcontext.CallbackContext object at 0x00000127840CF0E0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:29", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x00000127E0E90CA0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:30", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:30", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:31", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:32", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:32", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:32", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:32", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x00000127DE9CB7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), id='1051116659900824875', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 15, 15, 30, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2395, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations')... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:32", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x0000012782DBB8A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:32", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:32", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:32", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x0000012784236D80>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:32", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:32", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x0000012784236D80>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:32", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:32", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:32", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:32", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:32", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:32", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:32", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:32", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:33", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:41", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:41", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:42", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:42", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:42", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x00000127DE9CB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 15, 15, 41, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2397, supergroup_chat_created=False, text='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), update_id=881193580), <telegram.ext._callbackcontext.CallbackContext object at 0x00000127840CD470>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:42", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x00000127842289A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:42", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='38fa4d61-06d5-426e-a43c-f6b4c1ea3292' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:42", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='38fa4d61-06d5-426e-a43c-f6b4c1ea3292'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:42", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:42", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x0000012784236D80>, '\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), kwargs: {'chat_history': [HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), AIMessage(content='An error occurred while generating a response.', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442 \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u0447\u0442\u043e \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0430\u043a\u0438\u0435 \u043f\u0440\u043e\u0431\u043b\u0435\u043c\u044b, \u043a\u0430\u043a \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u044f \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b, \u0440\u0430\u0437\u0440\u0443\u0448\u0435\u043d\u0438\u0435 \u0431\u0435\u0442\u043e\u043d\u0430 \u0438 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043b\u0435\u0441\u0435\u043d\u0438. \u042d\u0442\u043e \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432\u0430\u0436\u043d\u043e \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u043f\u043e\u0432\u044b\u0448\u0435\u043d\u043d\u043e\u0439 \u0432\u043b\u0430\u0436\u043d\u043e\u0441\u0442\u0438 \u0438 \u0432 \u0440\u0430\u0439\u043e\u043d\u0430\u0445 \u0441 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434. \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u043f\u0440\u043e\u0434\u043b\u0438\u0442\u044c \u0441\u0440\u043e\u043a \u0441\u043b\u0443\u0436\u0431\u044b \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0435\u0435 \u043f\u0440\u043e\u0447\u043d\u043e\u0441\u0442\u044c.\\n\\n------------------\\... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:42", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000127DC9ADC60>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:42", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:42", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 15:15:42 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '51'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999983'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_fa0ee3c650cccf889ebfbc65f2cdd5bb'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=ZecudOzkkkudypdFG9HkaIkHDsgyQNOPHF52smLN4v4-1732720542-1.0.1.1-pAHQLXkVcwJlR9lDdL2sczOKC5ZomI7slBXmhZ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:42", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_fa0ee3c650cccf889ebfbc65f2cdd5bb", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:42", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:42", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000127829B8C20>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:42", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:43", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:15:43 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '108', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999983', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_69fde975d70156ee7254344ea0ebf64a', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9313400a0b4ac7-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:43", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_69fde975d70156ee7254344ea0ebf64a", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:43", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000127829B8C20>, 'json_data': {'input': [[74598, 96256, 1506, 220, 4364, 23934, 220, 14815, 33006, 868, 13, 21, 23784, 11047, 12507, 90226, 1506, 1532, 11, 47353, 40842, 9136, 10298, 44858, 17756, 1506, 35592, 34943, 9239, 56999, 18999, 30392, 1482, 97334, 5927, 7820, 13337, 3114, 6856, 7486, 1532, 40842, 44946, 14476, 9542, 16742, 720, 1, 6735, 79686, 5927, 25756, 20346, 2156, 51627, 1, 46177, 8379, 15752, 11001, 114, 7094, 18999, 23934, 25756, 20346, 2156, 25657, 10589, 10298, 19190, 44786, 45916, 19039, 11, 21022, 19175, 2297, 43293, 44938, 7820, 17721, 13433, 2297, 34943, 9239, 56999, 18999, 68088, 720, 13810, 8164, 4655, 1830, 35667, 18482, 6850, 7753, 18226, 2156, 50619, 44065, 81376, 23680, 17165, 11, 25756, 48262, 2233, 1482, 41873, 96485, 15458, 17766, 34613, 7820, 6856, 7753, 23934, 12, 8164, 9706, 40842, 1482, 12426, 5591, 4655, 18034, 35... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:43", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:15:43 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '210', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998465', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '18ms', 'x-request-id': 'req_4509e4fb781bacddd8d9ca3b17786912', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9313441d4f4ac7-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_4509e4fb781bacddd8d9ca3b17786912", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000127829B8C20>, 'json_data': {'input': [[74598, 96256, 1506, 220, 7994, 23934, 220, 14815, 33006, 49899, 17766, 67124, 2233, 17766, 1840, 10589, 32062, 85864, 13, 23784, 12561, 13337, 28089, 94962, 90226, 1506, 1532, 93129, 73181, 12561, 16494, 5372, 94975, 12561, 35111, 5372, 34613, 7952, 2233, 5372, 38657, 13, 720, 868, 13, 1032, 23784, 330, 10693, 7975, 9706, 44786, 1, 55617, 94538, 10693, 18034, 35297, 7094, 24697, 19190, 39988, 5173, 3114, 9542, 4655, 11, 21022, 50945, 59138, 13373, 14257, 6148, 84350, 53671, 22918, 1532, 5524, 29256, 2233, 4329, 17394, 18999, 34943, 330, 6735, 5372, 16742, 720, 5591, 25756, 20346, 2156, 51627, 1, 46177, 13373, 20346, 17394, 39988, 18868, 5372, 16742, 34943, 9239, 56999, 18999, 19175, 89159, 1482, 14257, 52037, 18226, 11320, 5591, 18482, 84714, 1532, 15458, 39127, 44065, 720, 15752, 48262, 2233, 1482, 12426, 8... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:15:44 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '144', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998826', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '14ms', 'x-request-id': 'req_850e857117099cbfb2c6433a0051d5f7', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9313471feb4ac7-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_850e857117099cbfb2c6433a0051d5f7", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000127829B8C20>, 'json_data': {'input': [[74598, 96256, 1506, 220, 2287, 23934, 220, 14815, 33006, 806, 13, 2983, 23227, 31203, 86291, 36750, 84198, 18034, 35297, 7094, 24697, 19190, 6856, 7740, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 19175, 89159, 1482, 78085, 2233, 7975, 59921, 18482, 720, 15752, 3114, 64569, 19479, 3865, 7740, 10693, 11122, 16331, 21956, 18999, 11, 100147, 4655, 7740, 78876, 8164, 7975, 21956, 17618, 5927, 5173, 3114, 7486, 1532, 11, 14257, 77911, 20812, 1482, 20879, 49284, 6735, 44938, 7740, 6850, 1840, 12426, 11, 99396, 17618, 720, 15752, 48262, 2233, 1482, 41873, 96485, 57186, 7740, 7820, 50223, 52744, 12561, 16494, 5372, 5372, 44786, 96573, 7753, 1840, 16331, 6856, 7740, 38098, 79370, 15458, 12415, 13, 35889, 1506, 14257, 77911, 20812, 1482, 320, 8164, 9706, 15752, 13337, 6856, 36352, 8, 720, 23630, 47805, 39280... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:15:44 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '89', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '12ms', 'x-request-id': 'req_a09f31008f102794cf7cff91c587c72a', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93134aca964ac7-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_a09f31008f102794cf7cff91c587c72a", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000127829B8C20>, 'json_data': {'input': [[806, 33006, 20, 13, 23, 13, 16, 13, 17, 23227, 15088, 39103, 23311, 4329, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 320, 4898, 7486, 16331, 6856, 11, 51548, 9706, 10589, 33742, 11, 18868, 38438, 44786, 18600, 32985, 7753, 5591, 3865, 17721, 6856, 8, 720, 7094, 48181, 12648, 48835, 8341, 4929, 25756, 48262, 2233, 1482, 41873, 96485, 15458, 12182, 20440, 57925, 13337, 5591, 52866, 18999, 5173, 29256, 23680, 39280, 5927, 9706, 4655, 5927, 2156, 38521, 2233, 4929, 720, 2297, 1482, 9239, 56999, 62491, 13, 720, 20, 13, 23, 13, 16, 13, 18, 39903, 14009, 14257, 77911, 94071, 5927, 3114, 34493, 1482, 41873, 96485, 57186, 46177, 25756, 48262, 2233, 1482, 41873, 96485, 57186, 12561, 16494, 5372, 4329, 70129, 18600, 3865, 3114, 17766, 44065, 720, 4898, 24803, 26503, 44065, 7740, 25756, 48262, 2233, 1482, 418... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:15:45 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '167', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998401', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '19ms', 'x-request-id': 'req_0572bc40662094d1df7ce4b61f8794a9', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93134cfc4c4ac7-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_0572bc40662094d1df7ce4b61f8794a9", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 18:15:45. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 120 \u0438\u0437 239 \\n \\n15.6 \u0412 \u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u0435\u0441\u043b\u0438 \u043f\u043e\u0434\u0437\u0435\u043c\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u0438\u0442\u0441\u044f \u0432 \u043a\u043e\u0442\u043b\u043e\u0432\u0430\u043d\u0435 \u043f\u043e\u0434 \u0437\u0430\u0449\u0438\u0442\u043e\u0439 \\n\"\u0441\u0442\u0435\u043d\u044b \u0432 \u0433\u0440\u0443\u043d\u0442\u0435\" \u0438\u043b\u0438 \u043e\u0433\u0440\u0430\u0436\u0434\u0435\u043d\u0438\u044f \u0438\u0437 \u0433\u0440\u0443\u043d\u0442\u043e\u0446\u0435\u043c\u0435\u043d\u0442\u043d\u044b\u0445 \u0441\u0432\u0430\u0439, \u0430 \u043d\u0435\u0441\u0443\u0449\u0438\u0439 \u043a\u0430\u0440\u043a\u0430\u0441 \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \\n\u0438\u0441\u043f\u044b\u0442\u044b\u0432\u0430\u0442\u044c... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 15:15:47 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '2120'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '793686'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '473ms'), ('x-request-id', 'req_dc12b60b8b129eaf6f44e2eb92ee10e5'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=fOXutTEbNkZJJdDlVSDpqg_D8hWwBsICZB8004qYpPE-1732720547-1.0.1.1-KddDgj9r0B8YhPlH4PJ7RqfSAdgCgkvZS24OoJSq4P99CZzPoBS6OPCNJL5fqMesVPU8iiKJHnJN9gNWTiWi_g; path=/; expires=Wed, 27... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_dc12b60b8b129eaf6f44e2eb92ee10e5", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:48", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:48", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442 \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u0447\u0442\u043e \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0442\u0438\u0442\u044c \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438, \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u044e \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b \u0438 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043b\u0435\u0441\u0435\u043d\u0438. \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432\u0430\u0436\u043d\u0430 \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u043f\u043e\u0432\u044b\u0448\u0435\u043d\u043d\u043e\u0439 \u0432\u043b\u0430\u0436\u043d\u043e\u0441\u0442\u0438 \u0438 \u0432 \u0440\u0430\u0439\u043e\u043d\u0430\u0445 \u0441 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434, \u0442\u0430\u043a \u043a\u0430\u043a \u043e\u043d\u0430 \u0441\u043f\u043e\u0441\u043e\u0431\u0441\u0442\u0432\u0443\u0435\u0442 \u043f\u0440\u043e\u0434\u043b\u0435\u043d\u0438\u044e \u0441\u0440\u043e\u043a\u0430 \u0441\u043b\u0443\u0436\u0431\u044b \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044e \u0435\u0433\u043e \u043f\u0440\u043e\u0447\u043d\u043e\u0441\u0442\u0438.\\n\\n------------------\\nReferences:\\n\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf, pages: 65, 119, 120\\n\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0435 \u0414\u043e\u043c\u0430_\u0421\u041f 31-105-2002 .pdf, pages: 10\\n', {'\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf', '\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0435 \u0414\u043e\u043c\u0430_\u0421\u041f 31-105-2002 .pdf'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:48", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:48", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:48", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='38fa4d61-06d5-426e-a43c-f6b4c1ea3292'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:15:48", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:00", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:00", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:00", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:00", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='Hello'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:00", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x00000127DE9CB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 15, 15, 59, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2399, supergroup_chat_created=False, text='Hello'), update_id=881193581), <telegram.ext._callbackcontext.CallbackContext object at 0x00000127840CEDD0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:00", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x00000127842289A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:00", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='4cd1ee40-e5d6-4462-8153-d40a37cf3d00' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:00", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='4cd1ee40-e5d6-4462-8153-d40a37cf3d00'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:00", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:00", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x0000012784236D80>, 'Hello'), kwargs: {'chat_history': [HumanMessage(content='Hello', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442 \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u0447\u0442\u043e \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0442\u0438\u0442\u044c \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438, \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u044e \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b \u0438 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043b\u0435\u0441\u0435\u043d\u0438. \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432\u0430\u0436\u043d\u0430 \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u043f\u043e\u0432\u044b\u0448\u0435\u043d\u043d\u043e\u0439 \u0432\u043b\u0430\u0436\u043d\u043e\u0441\u0442\u0438 \u0438 \u0432 \u0440\u0430\u0439\u043e\u043d\u0430\u0445 \u0441 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434, \u0442\u0430\u043a \u043a\u0430\u043a \u043e\u043d\u0430 \u0441\u043f\u043e\u0441\u043e\u0431\u0441\u0442\u0432\u0443\u0435\u0442 \u043f\u0440\u043e\u0434\u043b\u0435\u043d\u0438\u044e \u0441\u0440\u043e\u043a\u0430 \u0441\u043b\u0443\u0436\u0431\u044b \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d\u0438\u044e \u0435\u0433\u043e \u043f\u0440\u043e\u0447\u043d\u043e\u0441\u0442\u0438.\\n\\n------------------\\nReferences:\\n\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf, pages: 65, 119, 120\\n\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0435 \u0414\u043e\u043c\u0430_\u0421\u041f 31-105-2002 .pdf, pages: 10', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001278425F880>, 'json_data': {'input': [[9906]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:01", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:16:00 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '218', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999999', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_8be99b736eff809813bfee7f3c830a42', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9313aef80ab5d5-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:01", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_8be99b736eff809813bfee7f3c830a42", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:01", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:01", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001278425F880>, 'json_data': {'input': [[9906]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:01", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:01", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:16:01 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '78', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999999', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_b27f46b3c6d09a1f4a4b69277c9c00c1', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9313b1fa9db5d5-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:01", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_b27f46b3c6d09a1f4a4b69277c9c00c1", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:01", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001278425F880>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 1644]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:01", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:02", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:16:01 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '55', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_5357ecaaff2d3d645328d42abe21285a', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9313b56dc8b5d5-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:02", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_5357ecaaff2d3d645328d42abe21285a", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:02", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001278425F880>, 'json_data': {'input': [[39091, 31274, 20807, 31274, 19871, 35095, 56191, 34604, 19871, 35095, 16604, 20976, 28599, 35095, 34604, 20976, 31274, 35095, 56191, 65014, 140, 105, 19871, 35095, 16604, 37255, 720, 31274, 1301, 244, 31274, 65014, 31274, 140, 102, 20807, 20976, 12, 27435, 20976, 39091, 39091, 41682, 20807, 37255, 65014, 140, 105, 20807, 20976, 38214, 20976, 1301, 98, 20976, 36551, 86491, 140, 247, 19871, 35095, 16604, 37255, 2355, 34604, 20976, 19871, 19871, 31274, 140, 247, 19871, 27435, 20976, 140, 247, 67891, 56191, 25079, 56191, 34604, 37255, 93899, 31274, 31274, 33006, 720, 19871, 16604, 20976, 25079, 23227, 34604, 37255, 16604, 31274, 65014, 2355, 33006, 33006, 49526, 33006, 19871, 17279, 220, 220, 17824, 13, 9413, 18216, 15, 13, 2366, 16, 33006, 33006, 33006, 33006, 31274, 20807, 140, 244, 56191, 20807, 56191, 34604,... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:02", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:02", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:16:02 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '92', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999790', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '2ms', 'x-request-id': 'req_228f3b802375f602907c10b5864fd666', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9313b79f78b5d5-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:02", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_228f3b802375f602907c10b5864fd666", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:02", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001278425F880>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 22]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:02", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:03", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:16:02 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '128', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_5140a40e6f953fd4a921fb58091a9dc9', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9313bbbb14b5d5-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:03", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_5140a40e6f953fd4a921fb58091a9dc9", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:03", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001278425F880>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 1958]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:03", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:03", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:16:03 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '60', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_477e6553b492b8376949ba5b2129fd7c', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9313bead53b5d5-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:03", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_477e6553b492b8376949ba5b2129fd7c", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:03", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"You are a project assistant from the consultant side on design and construction projects. If you don't know the answer, say that you don't know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 18:16:03. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u041f 29.13330.2011 \\n \\n33\\n\\n\u041c\u0418\u041d\u0418\u0421\u0422\u0415\u0420\u0421\u0422\u0412\u041e \u0421\u0422\u0420\u041e\u0418\u0422\u0415\u041b\u042c\u0421\u0422\u0412\u0410 \\n\u0418 \u0416\u0418\u041b\u0418\u0429\u041d\u041e-\u041a\u041e\u041c\u041c\u0423\u041d\u0410\u041b\u042c\u041d\u041e\u0413\u041e \u0425\u041e\u0417\u042f\u0419\u0421\u0422\u0412\u0410  \\n\u0420\u041e\u0421\u0421\u0418\u0419\u0421\u041a\u041e\u0419 \u0424\u0415\u0414\u0415\u0420\u0410\u0426\u0418\u0418 \\n \\n \\n\u0421\u0412\u041e\u0414 \u041f\u0420\u0410\u0412\u0418\u041b  \\n \\n \\n \\n \\n \\n  \\n \\n \\n\u0421\u041f  502.1325800.2021 \\n \\n \\n \\n \\n \\n \\n \\n\u0418\u041d\u0416\u0415\u041d\u0415\u0420\u041d\u041e... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:03", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:04", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:16:04 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '389', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '798919', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '81ms', 'x-request-id': 'req_c3aa57f45a8abc3a0aa632cd3b006ca8', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9313c20aeebe8d-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:04", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_c3aa57f45a8abc3a0aa632cd3b006ca8", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:04", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:04", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('Hello! How can I assist you today?\\n\\n------------------\\nReferences:\\n\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf, pages: 10, 36, 37\\n\u0418\u043d\u0436\u0435\u043d\u0435\u0440\u043d\u043e \u044d\u043a\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0437\u044b\u0441\u043a\u0430\u043d\u0438\u044f_\u0421\u041f 502.1325800.2021.pdf, pages: 0\\n', {'\u0418\u043d\u0436\u0435\u043d\u0435\u0440\u043d\u043e \u044d\u043a\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0437\u044b\u0441\u043a\u0430\u043d\u0438\u044f_\u0421\u041f 502.1325800.2021.pdf', '\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:04", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:05", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:05", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='4cd1ee40-e5d6-4462-8153-d40a37cf3d00'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:05", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:40", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:40", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:40", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:40", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='How are you'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:40", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x00000127DE9CB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 15, 16, 39, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2401, supergroup_chat_created=False, text='How are you'), update_id=881193582), <telegram.ext._callbackcontext.CallbackContext object at 0x0000012821EF1B00>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:40", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x00000127842289A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:40", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='1603e1a6-e1e8-4e8a-ab65-04e04ce9ea5a' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:40", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='1603e1a6-e1e8-4e8a-ab65-04e04ce9ea5a'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:40", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:40", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x0000012784236D80>, 'How are you'), kwargs: {'chat_history': [HumanMessage(content='How are you', additional_kwargs={}, response_metadata={}), HumanMessage(content='Hello', additional_kwargs={}, response_metadata={}), AIMessage(content='Hello! How can I assist you today?\\n\\n------------------\\nReferences:\\n\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf, pages: 10, 36, 37\\n\u0418\u043d\u0436\u0435\u043d\u0435\u0440\u043d\u043e \u044d\u043a\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0437\u044b\u0441\u043a\u0430\u043d\u0438\u044f_\u0421\u041f 502.1325800.2021.pdf, pages: 0', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442 \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u0447\u0442\u043e \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0442\u0438\u0442\u044c \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u0435 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438, \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u044e \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b \u0438 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043b\u0435\u0441\u0435\u043d\u0438. \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432\u0430\u0436\u043d\u0430 \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u043f\u043e\u0432\u044b\u0448\u0435\u043d\u043d\u043e\u0439 \u0432\u043b\u0430\u0436\u043d\u043e\u0441\u0442\u0438 \u0438 \u0432 \u0440\u0430\u0439\u043e\u043d\u0430\u0445 \u0441 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434, \u0442\u0430\u043a \u043a\u0430\u043a \u043e\u043d\u0430 \u0441\u043f\u043e\u0441\u043e\u0431\u0441\u0442\u0432\u0443\u0435\u0442 \u043f\u0440\u043e\u0434\u043b\u0435\u043d\u0438\u044e \u0441... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:40", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000012782998400>, 'json_data': {'input': [[4438, 527, 499]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:40", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:41", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:16:41 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '113', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999996', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_f2071c1b125be9b9473c88de3aa8c617', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9314a889862dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:41", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_f2071c1b125be9b9473c88de3aa8c617", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:41", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:41", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000127842239C0>, 'json_data': {'input': [[4438, 527, 499]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:41", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:42", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:16:42 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '133', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999997', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_6b501796d2f19cc9ad2137492be64d9b', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9314af9c262dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:42", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_6b501796d2f19cc9ad2137492be64d9b", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:42", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000127842239C0>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 1958]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:42", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:43", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:16:43 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '42', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_b85c1816be8a2a9e2baf397cc7eb5e01', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9314b47de82dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:43", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_b85c1816be8a2a9e2baf397cc7eb5e01", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:43", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000127842239C0>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 1691]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:43", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:16:44 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '112', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_fe1ca3b9f984af99b05df6ac6c19c951', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9314b9dffa2dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_fe1ca3b9f984af99b05df6ac6c19c951", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000127842239C0>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 22]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:16:44 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '40', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_9ac92a982606fd93b3431342dc59d384', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9314bfca112dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_9ac92a982606fd93b3431342dc59d384", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000127842239C0>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 1644]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:16:45 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '73', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_a2cf1f231d7beb3cb032e86556bb0653', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9314c51bbd2dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_a2cf1f231d7beb3cb032e86556bb0653", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"You are a project assistant from the consultant side on design and construction projects. If you don't know the answer, say that you don't know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 18:16:46. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u041f 29.13330.2011 \\n \\n34\\n\\n\u0421\u041f 29.13330.2011 \\n \\n21\\n\\n\u0421\u041f 29.13330.2011 \\n \\n7\\n\\n\u0421\u041f 29.13330.2011 \\n \\n33\", 'role': 'system'}, {'content': 'How are you', 'role': 'user'}, {'content': 'Hello', 'role': 'user'}, {'con... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:16:47 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '498', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '799239', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '57ms', 'x-request-id': 'req_337d29d24f055b12c2b9e2b203c848a9', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9314cb8c6a9185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_337d29d24f055b12c2b9e2b203c848a9", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:47", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:47", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: (\"I'm here and ready to help! How can I assist you today?\\n\\n------------------\\nReferences:\\n\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf, pages: 10, 24, 36, 37\\n\", {'\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:47", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:48", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:48", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='1603e1a6-e1e8-4e8a-ab65-04e04ce9ea5a'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:16:48", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:32", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:32", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:32", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:32", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='Hello'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:32", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x00000127DE9CB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 15, 17, 31, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2403, supergroup_chat_created=False, text='Hello'), update_id=881193583), <telegram.ext._callbackcontext.CallbackContext object at 0x00000127840CF4D0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:32", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x00000127842289A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:32", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='555abbb0-54ea-4d9e-9c2b-77bcb94db858' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:32", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='555abbb0-54ea-4d9e-9c2b-77bcb94db858'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:32", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:32", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x0000012784236D80>, 'Hello'), kwargs: {'chat_history': [HumanMessage(content='Hello', additional_kwargs={}, response_metadata={}), HumanMessage(content='How are you', additional_kwargs={}, response_metadata={}), AIMessage(content=\"I'm here and ready to help! How can I assist you today?\\n\\n------------------\\nReferences:\\n\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf, pages: 10, 24, 36, 37\", additional_kwargs={}, response_metadata={}), HumanMessage(content='Hello', additional_kwargs={}, response_metadata={}), AIMessage(content='Hello! How can I assist you today?\\n\\n------------------\\nReferences:\\n\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf, pages: 10, 36, 37\\n\u0418\u043d\u0436\u0435\u043d\u0435\u0440\u043d\u043e \u044d\u043a\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0437\u044b\u0441\u043a\u0430\u043d\u0438\u044f_\u0421\u041f 502.1325800.2021.pdf, pages: 0', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430. \u041e\u043d\u0430 \u0437\u0430... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:32", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000127829984A0>, 'json_data': {'input': [[9906]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:32", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:33", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:17:33 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '115', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999999', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_a1c0fa0cb8c67443cd422f9708674fab', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9315ee1ade9185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:33", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_a1c0fa0cb8c67443cd422f9708674fab", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:33", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:33", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001278425F240>, 'json_data': {'input': [[9906]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:33", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:17:33 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '64', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999999', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_5a342110e2719a939a88a6a6627cd33e', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9315f2fc939185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_5a342110e2719a939a88a6a6627cd33e", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001278425F240>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 1644]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:17:34 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '73', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_96f36dcd5b7a0663716f7b902e9f1a28', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9315f77dfc9185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_96f36dcd5b7a0663716f7b902e9f1a28", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001278425F240>, 'json_data': {'input': [[39091, 31274, 20807, 31274, 19871, 35095, 56191, 34604, 19871, 35095, 16604, 20976, 28599, 35095, 34604, 20976, 31274, 35095, 56191, 65014, 140, 105, 19871, 35095, 16604, 37255, 720, 31274, 1301, 244, 31274, 65014, 31274, 140, 102, 20807, 20976, 12, 27435, 20976, 39091, 39091, 41682, 20807, 37255, 65014, 140, 105, 20807, 20976, 38214, 20976, 1301, 98, 20976, 36551, 86491, 140, 247, 19871, 35095, 16604, 37255, 2355, 34604, 20976, 19871, 19871, 31274, 140, 247, 19871, 27435, 20976, 140, 247, 67891, 56191, 25079, 56191, 34604, 37255, 93899, 31274, 31274, 33006, 720, 19871, 16604, 20976, 25079, 23227, 34604, 37255, 16604, 31274, 65014, 2355, 33006, 33006, 49526, 33006, 19871, 17279, 220, 220, 17824, 13, 9413, 18216, 15, 13, 2366, 16, 33006, 33006, 33006, 33006, 31274, 20807, 140, 244, 56191, 20807, 56191, 34604,... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:17:34 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '86', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999790', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '2ms', 'x-request-id': 'req_0ad5b4746c8e3edd753710b23230dbf8', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9315f97ef89185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_0ad5b4746c8e3edd753710b23230dbf8", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001278425F240>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 22]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:35", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:17:35 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '89', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_cdcb36ff2e5b6554e8f4f11072a9d26a', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9315fb8fa29185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:35", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_cdcb36ff2e5b6554e8f4f11072a9d26a", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:35", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001278425F240>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 1958]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:35", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:35", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:17:35 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '126', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_6bdc489ddebd06eaed41daeb0bf84a8c', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e931600097f9185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:35", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_6bdc489ddebd06eaed41daeb0bf84a8c", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:35", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"You are a project assistant from the consultant side on design and construction projects. If you don't know the answer, say that you don't know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 18:17:35. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u041f 29.13330.2011 \\n \\n33\\n\\n\u041c\u0418\u041d\u0418\u0421\u0422\u0415\u0420\u0421\u0422\u0412\u041e \u0421\u0422\u0420\u041e\u0418\u0422\u0415\u041b\u042c\u0421\u0422\u0412\u0410 \\n\u0418 \u0416\u0418\u041b\u0418\u0429\u041d\u041e-\u041a\u041e\u041c\u041c\u0423\u041d\u0410\u041b\u042c\u041d\u041e\u0413\u041e \u0425\u041e\u0417\u042f\u0419\u0421\u0422\u0412\u0410  \\n\u0420\u041e\u0421\u0421\u0418\u0419\u0421\u041a\u041e\u0419 \u0424\u0415\u0414\u0415\u0420\u0410\u0426\u0418\u0418 \\n \\n \\n\u0421\u0412\u041e\u0414 \u041f\u0420\u0410\u0412\u0418\u041b  \\n \\n \\n \\n \\n \\n  \\n \\n \\n\u0421\u041f  502.1325800.2021 \\n \\n \\n \\n \\n \\n \\n \\n\u0418\u041d\u0416\u0415\u041d\u0415\u0420\u041d\u041e... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:35", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:36", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:17:36 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '382', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '799310', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '51ms', 'x-request-id': 'req_a137ddb473929702be9bc1f20d569ef1', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e931602bc5d2df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:36", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_a137ddb473929702be9bc1f20d569ef1", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:36", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:36", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('Hello! How can I assist you today?\\n\\n------------------\\nReferences:\\n\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf, pages: 10, 36, 37\\n\u0418\u043d\u0436\u0435\u043d\u0435\u0440\u043d\u043e \u044d\u043a\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0437\u044b\u0441\u043a\u0430\u043d\u0438\u044f_\u0421\u041f 502.1325800.2021.pdf, pages: 0\\n', {'\u0418\u043d\u0436\u0435\u043d\u0435\u0440\u043d\u043e \u044d\u043a\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0437\u044b\u0441\u043a\u0430\u043d\u0438\u044f_\u0421\u041f 502.1325800.2021.pdf', '\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:36", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:37", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:37", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='555abbb0-54ea-4d9e-9c2b-77bcb94db858'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:37", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:46", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:47", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:47", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:47", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='My name is Andrew'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:47", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x00000127DE9CB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 15, 17, 46, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2405, supergroup_chat_created=False, text='My name is Andrew'), update_id=881193584), <telegram.ext._callbackcontext.CallbackContext object at 0x0000012784736900>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:47", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x00000127842289A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:47", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='a9ec5e46-7414-4380-8190-1a22bc57cad3' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:47", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='a9ec5e46-7414-4380-8190-1a22bc57cad3'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:47", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:47", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x0000012784236D80>, 'My name is Andrew'), kwargs: {'chat_history': [HumanMessage(content='My name is Andrew', additional_kwargs={}, response_metadata={}), HumanMessage(content='Hello', additional_kwargs={}, response_metadata={}), AIMessage(content='Hello! How can I assist you today?\\n\\n------------------\\nReferences:\\n\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf, pages: 10, 36, 37\\n\u0418\u043d\u0436\u0435\u043d\u0435\u0440\u043d\u043e \u044d\u043a\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0437\u044b\u0441\u043a\u0430\u043d\u0438\u044f_\u0421\u041f 502.1325800.2021.pdf, pages: 0', additional_kwargs={}, response_metadata={}), HumanMessage(content='How are you', additional_kwargs={}, response_metadata={}), AIMessage(content=\"I'm here and ready to help! How can I assist you today?\\n\\n------------------\\nReferences:\\n\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf, pages: 10, 24, 36, 37\", additional_kwargs={}, response_metadata={}), HumanMessage(content='Hello', additional_kwargs={}, response_metadata={}), AIMessage(content='Hello! How can I assist you today?\\n\\n---------------... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000127829984A0>, 'json_data': {'input': [[5159, 836, 374, 13929]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:17:47 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '62', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999995', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_4c272ee2ea37b1828f78376fb2a88e45', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93164a2a76efab-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_4c272ee2ea37b1828f78376fb2a88e45", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:47", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000127829984A0>, 'json_data': {'input': [[5159, 836, 374, 13929]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:17:47 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '109', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999996', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_0803e7f1f90f1dc52ccf9fcdfd043329', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93164c4c24efab-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_0803e7f1f90f1dc52ccf9fcdfd043329", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000127829984A0>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 22]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:17:48 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '61', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_ab1a79e5e869d6274b9ed972bf96310f', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93164e8e22efab-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_ab1a79e5e869d6274b9ed972bf96310f", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000127829984A0>, 'json_data': {'input': [[27435, 37255, 34604, 35095, 37255, 53677, 25756, 662, 49520, 37255, 140, 247, 35448, 35889, 43896, 49520, 20976, 23784, 37255, 20807, 43896, 60376, 720, 19871, 56191, 16604, 56191, 34604, 20807, 20976, 140, 247, 1301, 100, 37255, 19871, 35095, 31274, 720, 56191, 16604, 34604, 20976, 17279, 60376, 140, 247, 28599, 27435, 20976, 1301, 247, 220, 51418, 56191, 34604, 34604, 31274, 51418, 20976, 49520, 31274, 43896, 2355, 34604, 20976, 19871, 19871, 31274, 1301, 247, 19871, 27435, 20976, 140, 247, 220, 67891, 56191, 25079, 56191, 34604, 37255, 93899, 31274, 31274, 23227, 20976, 720, 35095, 20976, 65014, 140, 102, 43896, 20807, 56191, 28599, 35095, 56191, 20807, 27435, 31274, 61565, 20976, 65014, 20976, 65014, 140, 223, 25079, 37255, 720, 20807, 37255, 23784, 140, 104, 19871, 20976, 35095, 56191, 220, 1049, 45458,... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:17:48 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '75', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998685', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '15ms', 'x-request-id': 'req_bf69f058d06b01071d860ef5545658f9', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e931650cf99efab-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_bf69f058d06b01071d860ef5545658f9", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000127829984A0>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 1544]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:17:49 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '94', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_7b554b1f02caa2ae7f8ce072e0952b39', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93165339d1efab-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_7b554b1f02caa2ae7f8ce072e0952b39", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000127829984A0>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 1419]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:17:49 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '117', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_48bc77ab97ca82e0199b2a8cedd6bac7', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e931655bbe7efab-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_48bc77ab97ca82e0199b2a8cedd6bac7", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 18:17:49. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u041f 29.13330.2011 \\n \\n7\\n\\n\u041a\u0410\u0420\u0422\u0410 \u0417 \u0433 . \u0420\u0410\u0419 \u041e \u041d \u0418 \u0420\u041e \u0412\u0410\u041d \u0418 \u0415 \\n\u0421\u0415\u0412\u0415\u0420\u041d\u041e\u0419 \u0427\u0410\u0421\u0422\u0418 \\n\u0415\u0412\u0420\u041e\u041f \u0415\u0419 \u0421\u041a\u041e \u0419  \u0422\u0415\u0420\u0420\u0418 \u0422\u041e \u0420\u0418 \u0418  \\n\u0420\u041e\u0421\u0421\u0418 \u0419\u0421\u041a\u041e\u0419  \u0424\u0415\u0414\u0415\u0420\u0410\u0426\u0418\u0418 \u041f\u041e \\n\u0422\u041e\u041b\u0429 \u0418\u041d\u0415 \u0421\u0422\u0415\u041d\u041a\u0418 \u0413\u041e\u041b\u041e\u041b\u0401\u0414\u0410 \\n\u041d\u0410 \u0412\u042b\u0421\u041e\u0422\u0415 200 \u041c\\nF \\n4 \\np i\\n\u043f-\u043e\u0432 \u0420\u044b\u0431\u0430\u0447\u0438\u0439/\\n/ ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:17:50 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '365', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '798681', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '98ms', 'x-request-id': 'req_99449fc18adb27013f8d52e118815c7e', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9316588ca6ee22-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_99449fc18adb27013f8d52e118815c7e", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:50", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:50", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('Hello, Andrew! How can I assist you today?\\n\\n------------------\\nReferences:\\n\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf, pages: 10, 26, 30\\n\u041d\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0438 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f_\u0421\u041f 20.13330.2016.pdf, pages: 88\\n', {'\u041d\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0438 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f_\u0421\u041f 20.13330.2016.pdf', '\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:50", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:51", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:51", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='a9ec5e46-7414-4380-8190-1a22bc57cad3'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:17:51", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:35:40", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 18:35:41", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 18:35:41", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 18:35:42", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 18:36:11", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:12", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:12", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:12", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:12", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:12", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: ru", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:12", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:12", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/start'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:12", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: start with args: (<handlers.BotHandlers object at 0x000001E9230BB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 15, 36, 11, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=6, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2407, supergroup_chat_created=False, text='/start'), update_id=881193585), <telegram.ext._callbackcontext.CallbackContext object at 0x000001E94864B150>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:12", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: start with result: <coroutine object BotHandlers.start at 0x000001E9484F3E00>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:12", "name": "handlers", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:13", "name": "handlers", "levelname": "INFO", "message": "Sent welcome message to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:13", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:17", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:17", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:17", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:17", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:17", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x000001E9230BB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 15, 36, 16, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2409, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193586), <telegram.ext._callbackcontext.CallbackContext object at 0x000001E94864B3F0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:17", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x000001E94850B9A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:18", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:18", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:19", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:19", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:19", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:19", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:19", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x000001E9230BB7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), id='1051116661514831661', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 15, 36, 17, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2410, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations')... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:19", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x000001E94733B8A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:20", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:20", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:20", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x000001E9470DE570>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:20", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:20", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x000001E9470DE570>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:20", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:20", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:20", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:20", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:20", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:20", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:20", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:20", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:20", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:28", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:28", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:29", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:29", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='Hello'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:29", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x000001E9230BB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 15, 36, 28, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2412, supergroup_chat_created=False, text='Hello'), update_id=881193588), <telegram.ext._callbackcontext.CallbackContext object at 0x000001E94864B3F0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:29", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x000001E948718B30>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:29", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='8d96706d-f3c3-494c-aaed-cdd8f83fe1c3' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:29", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='8d96706d-f3c3-494c-aaed-cdd8f83fe1c3'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:29", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:29", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x000001E9470DE570>, 'Hello'), kwargs: {'chat_history': [HumanMessage(content='Hello', additional_kwargs={}, response_metadata={}), HumanMessage(content='My name is Andrew', additional_kwargs={}, response_metadata={}), AIMessage(content='Hello, Andrew! How can I assist you today?\\n\\n------------------\\nReferences:\\n\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf, pages: 10, 26, 30\\n\u041d\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0438 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f_\u0421\u041f 20.13330.2016.pdf, pages: 88', additional_kwargs={}, response_metadata={}), HumanMessage(content='Hello', additional_kwargs={}, response_metadata={}), AIMessage(content='Hello! How can I assist you today?\\n\\n------------------\\nReferences:\\n\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf, pages: 10, 36, 37\\n\u0418\u043d\u0436\u0435\u043d\u0435\u0440\u043d\u043e \u044d\u043a\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0437\u044b\u0441\u043a\u0430\u043d\u0438\u044f_\u0421\u041f 502.1325800.2021.pdf, pages: 0', additional_kwargs={}, response_metadata={}), HumanMessage(content='How are you', additional_kwargs={}, response_metadata={}), AIMessage(content=\"I'm here and ready to help... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:29", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001E9487139C0>, 'json_data': {'input': [[9906]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:29", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:30", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 15:36:30 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '71'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999999'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_1a7b2e6603ed1f337a8117badf6677a7'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=owGDOG1yO_uNErEEvX.ek1mUMaXFJrkHcZmC5qhH50k-1732721790-1.0.1.1-giC1LmM1miiTHT6g2KjPbRa4liv1bIqmCS6niU... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:30", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_1a7b2e6603ed1f337a8117badf6677a7", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:30", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:30", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001E946F38C20>, 'json_data': {'input': [[9906]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:30", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:31", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:36:31 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '68', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999999', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_896caf9713292563289ffbb26a738251', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9331b4d8a99185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:31", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_896caf9713292563289ffbb26a738251", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:31", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001E946F38C20>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 1644]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:31", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:32", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:36:32 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '51', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_c28ba00f7ab417f115961dba6463908d', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9331bb7c759185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:32", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_c28ba00f7ab417f115961dba6463908d", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:32", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001E946F38C20>, 'json_data': {'input': [[39091, 31274, 20807, 31274, 19871, 35095, 56191, 34604, 19871, 35095, 16604, 20976, 28599, 35095, 34604, 20976, 31274, 35095, 56191, 65014, 140, 105, 19871, 35095, 16604, 37255, 720, 31274, 1301, 244, 31274, 65014, 31274, 140, 102, 20807, 20976, 12, 27435, 20976, 39091, 39091, 41682, 20807, 37255, 65014, 140, 105, 20807, 20976, 38214, 20976, 1301, 98, 20976, 36551, 86491, 140, 247, 19871, 35095, 16604, 37255, 2355, 34604, 20976, 19871, 19871, 31274, 140, 247, 19871, 27435, 20976, 140, 247, 67891, 56191, 25079, 56191, 34604, 37255, 93899, 31274, 31274, 33006, 720, 19871, 16604, 20976, 25079, 23227, 34604, 37255, 16604, 31274, 65014, 2355, 33006, 33006, 49526, 33006, 19871, 17279, 220, 220, 17824, 13, 9413, 18216, 15, 13, 2366, 16, 33006, 33006, 33006, 33006, 31274, 20807, 140, 244, 56191, 20807, 56191, 34604,... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:32", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:32", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:36:32 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '91', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999790', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '2ms', 'x-request-id': 'req_c319fd84550b09d214e9e25d2cac51ce', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9331c1b8799185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:32", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_c319fd84550b09d214e9e25d2cac51ce", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:32", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001E94874B880>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 22]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:32", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:33", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:36:33 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '291', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_47af48dc970491156d599465932e9bca', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9331c419989185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:33", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_47af48dc970491156d599465932e9bca", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:33", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001E94874B880>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 1958]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:33", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:36:34 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '73', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_53ba85fab8db52274cc986a5a7f56c52', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9331c76c239185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_53ba85fab8db52274cc986a5a7f56c52", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"You are a project assistant from the consultant side on design and construction projects. If you don't know the answer, say that you don't know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 18:36:34. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u041f 29.13330.2011 \\n \\n33\\n\\n\u041c\u0418\u041d\u0418\u0421\u0422\u0415\u0420\u0421\u0422\u0412\u041e \u0421\u0422\u0420\u041e\u0418\u0422\u0415\u041b\u042c\u0421\u0422\u0412\u0410 \\n\u0418 \u0416\u0418\u041b\u0418\u0429\u041d\u041e-\u041a\u041e\u041c\u041c\u0423\u041d\u0410\u041b\u042c\u041d\u041e\u0413\u041e \u0425\u041e\u0417\u042f\u0419\u0421\u0422\u0412\u0410  \\n\u0420\u041e\u0421\u0421\u0418\u0419\u0421\u041a\u041e\u0419 \u0424\u0415\u0414\u0415\u0420\u0410\u0426\u0418\u0418 \\n \\n \\n\u0421\u0412\u041e\u0414 \u041f\u0420\u0410\u0412\u0418\u041b  \\n \\n \\n \\n \\n \\n  \\n \\n \\n\u0421\u041f  502.1325800.2021 \\n \\n \\n \\n \\n \\n \\n \\n\u0418\u041d\u0416\u0415\u041d\u0415\u0420\u041d\u041e... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:36", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 15:36:35 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '685'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '799456'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '40ms'), ('x-request-id', 'req_5c9c1a7b91f5ca9bedcb0db0396846aa'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=jxyZMzac.pEz7QSx.yZlJo.Y9ONuHHhS4i9yHG_f0BQ-1732721795-1.0.1.1-U9MNRYK.HQet4Eno.CjnlKqi.OwagYTDHfg6.Jv8YoDbLqn.2PJHhromZiXHZkE.LkKv6EOCqCuJlCIOKYWhjg; path=/; expires=Wed, 27-N... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:36", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_5c9c1a7b91f5ca9bedcb0db0396846aa", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:36", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity ratio: 0.0", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:36", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity threshold not met. Returning answer without references.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:36", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('Hello! How can I help you today?', None)", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:36", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:37", "name": "handlers", "levelname": "INFO", "message": "Sent response to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:37", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='8d96706d-f3c3-494c-aaed-cdd8f83fe1c3'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:36:37", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:18", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:19", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:19", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:19", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:19", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x000001E9230BB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 15, 37, 18, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2414, supergroup_chat_created=False, text='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), update_id=881193589), <telegram.ext._callbackcontext.CallbackContext object at 0x000001E9A4259C50>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:19", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x000001E948718B30>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:19", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='952d12b1-afcb-424f-b164-25a149a28abd' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:19", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='952d12b1-afcb-424f-b164-25a149a28abd'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:19", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:19", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x000001E9470DE570>, '\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), kwargs: {'chat_history': [HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), HumanMessage(content='Hello', additional_kwargs={}, response_metadata={}), AIMessage(content='Hello! How can I help you today?', additional_kwargs={}, response_metadata={}), HumanMessage(content='My name is Andrew', additional_kwargs={}, response_metadata={}), AIMessage(content='Hello, Andrew! How can I assist you today?\\n\\n------------------\\nReferences:\\n\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf, pages: 10, 26, 30\\n\u041d\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0438 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f_\u0421\u041f 20.13330.2016.pdf, pages: 88', additional_kwargs={}, response_metadata={}), HumanMessage(content='Hello', additional_kwargs={}, response_metadata={}), AIMessage(content='Hello! How can I assist you today?\\n\\n------------------\\nReferences:\\n\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf, pages: 10, 36, 37\\n\u0418\u043d\u0436\u0435\u043d\u0435\u0440\u043d\u043e... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:19", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001E946F182C0>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:19", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:37:20 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '596', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999982', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_8ac881564a67fbafd1abfff840ba5087', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9332e6e8392dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_8ac881564a67fbafd1abfff840ba5087", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:21", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001E946F38CC0>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:22", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:37:22 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '70', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999982', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_cf0380a49dc00964f80963f073be5e0a', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9332f1fb622dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:22", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_cf0380a49dc00964f80963f073be5e0a", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:22", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001E946F38CC0>, 'json_data': {'input': [[74598, 96256, 1506, 220, 4364, 23934, 220, 14815, 33006, 868, 13, 21, 23784, 11047, 12507, 90226, 1506, 1532, 11, 47353, 40842, 9136, 10298, 44858, 17756, 1506, 35592, 34943, 9239, 56999, 18999, 30392, 1482, 97334, 5927, 7820, 13337, 3114, 6856, 7486, 1532, 40842, 44946, 14476, 9542, 16742, 720, 1, 6735, 79686, 5927, 25756, 20346, 2156, 51627, 1, 46177, 8379, 15752, 11001, 114, 7094, 18999, 23934, 25756, 20346, 2156, 25657, 10589, 10298, 19190, 44786, 45916, 19039, 11, 21022, 19175, 2297, 43293, 44938, 7820, 17721, 13433, 2297, 34943, 9239, 56999, 18999, 68088, 720, 13810, 8164, 4655, 1830, 35667, 18482, 6850, 7753, 18226, 2156, 50619, 44065, 81376, 23680, 17165, 11, 25756, 48262, 2233, 1482, 41873, 96485, 15458, 17766, 34613, 7820, 6856, 7753, 23934, 12, 8164, 9706, 40842, 1482, 12426, 5591, 4655, 18034, 35... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:22", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:23", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:37:23 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '165', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998465', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '18ms', 'x-request-id': 'req_d2ac9eb58612a08c984728ad724b4020', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9332f8dd262dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:23", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_d2ac9eb58612a08c984728ad724b4020", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:23", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001E946F38CC0>, 'json_data': {'input': [[74598, 96256, 1506, 220, 7994, 23934, 220, 14815, 33006, 49899, 17766, 67124, 2233, 17766, 1840, 10589, 32062, 85864, 13, 23784, 12561, 13337, 28089, 94962, 90226, 1506, 1532, 93129, 73181, 12561, 16494, 5372, 94975, 12561, 35111, 5372, 34613, 7952, 2233, 5372, 38657, 13, 720, 868, 13, 1032, 23784, 330, 10693, 7975, 9706, 44786, 1, 55617, 94538, 10693, 18034, 35297, 7094, 24697, 19190, 39988, 5173, 3114, 9542, 4655, 11, 21022, 50945, 59138, 13373, 14257, 6148, 84350, 53671, 22918, 1532, 5524, 29256, 2233, 4329, 17394, 18999, 34943, 330, 6735, 5372, 16742, 720, 5591, 25756, 20346, 2156, 51627, 1, 46177, 13373, 20346, 17394, 39988, 18868, 5372, 16742, 34943, 9239, 56999, 18999, 19175, 89159, 1482, 14257, 52037, 18226, 11320, 5591, 18482, 84714, 1532, 15458, 39127, 44065, 720, 15752, 48262, 2233, 1482, 12426, 8... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:23", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:24", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:37:24 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '141', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998826', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '14ms', 'x-request-id': 'req_4b2d71a8d99b4deb26c28ef1c0d8f383', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9332ff0f272dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:24", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_4b2d71a8d99b4deb26c28ef1c0d8f383", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:24", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001E946F38CC0>, 'json_data': {'input': [[74598, 96256, 1506, 220, 2287, 23934, 220, 14815, 33006, 806, 13, 2983, 23227, 31203, 86291, 36750, 84198, 18034, 35297, 7094, 24697, 19190, 6856, 7740, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 19175, 89159, 1482, 78085, 2233, 7975, 59921, 18482, 720, 15752, 3114, 64569, 19479, 3865, 7740, 10693, 11122, 16331, 21956, 18999, 11, 100147, 4655, 7740, 78876, 8164, 7975, 21956, 17618, 5927, 5173, 3114, 7486, 1532, 11, 14257, 77911, 20812, 1482, 20879, 49284, 6735, 44938, 7740, 6850, 1840, 12426, 11, 99396, 17618, 720, 15752, 48262, 2233, 1482, 41873, 96485, 57186, 7740, 7820, 50223, 52744, 12561, 16494, 5372, 5372, 44786, 96573, 7753, 1840, 16331, 6856, 7740, 38098, 79370, 15458, 12415, 13, 35889, 1506, 14257, 77911, 20812, 1482, 320, 8164, 9706, 15752, 13337, 6856, 36352, 8, 720, 23630, 47805, 39280... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:24", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:25", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:37:24 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '113', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '12ms', 'x-request-id': 'req_774553d3cb64ffe5586354dccbf41557', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e933305b8ca2dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:25", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_774553d3cb64ffe5586354dccbf41557", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:25", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001E946F38CC0>, 'json_data': {'input': [[806, 33006, 20, 13, 23, 13, 16, 13, 17, 23227, 15088, 39103, 23311, 4329, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 320, 4898, 7486, 16331, 6856, 11, 51548, 9706, 10589, 33742, 11, 18868, 38438, 44786, 18600, 32985, 7753, 5591, 3865, 17721, 6856, 8, 720, 7094, 48181, 12648, 48835, 8341, 4929, 25756, 48262, 2233, 1482, 41873, 96485, 15458, 12182, 20440, 57925, 13337, 5591, 52866, 18999, 5173, 29256, 23680, 39280, 5927, 9706, 4655, 5927, 2156, 38521, 2233, 4929, 720, 2297, 1482, 9239, 56999, 62491, 13, 720, 20, 13, 23, 13, 16, 13, 18, 39903, 14009, 14257, 77911, 94071, 5927, 3114, 34493, 1482, 41873, 96485, 57186, 46177, 25756, 48262, 2233, 1482, 41873, 96485, 57186, 12561, 16494, 5372, 4329, 70129, 18600, 3865, 3114, 17766, 44065, 720, 4898, 24803, 26503, 44065, 7740, 25756, 48262, 2233, 1482, 418... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:25", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:26", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:37:26 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '85', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998401', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '19ms', 'x-request-id': 'req_ec09c4fbcab1c3fbf4bdbbd44807dcc6', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93330b3a892dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:26", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_ec09c4fbcab1c3fbf4bdbbd44807dcc6", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:26", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 18:37:26. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 120 \u0438\u0437 239 \\n \\n15.6 \u0412 \u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u0435\u0441\u043b\u0438 \u043f\u043e\u0434\u0437\u0435\u043c\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u0438\u0442\u0441\u044f \u0432 \u043a\u043e\u0442\u043b\u043e\u0432\u0430\u043d\u0435 \u043f\u043e\u0434 \u0437\u0430\u0449\u0438\u0442\u043e\u0439 \\n\"\u0441\u0442\u0435\u043d\u044b \u0432 \u0433\u0440\u0443\u043d\u0442\u0435\" \u0438\u043b\u0438 \u043e\u0433\u0440\u0430\u0436\u0434\u0435\u043d\u0438\u044f \u0438\u0437 \u0433\u0440\u0443\u043d\u0442\u043e\u0446\u0435\u043c\u0435\u043d\u0442\u043d\u044b\u0445 \u0441\u0432\u0430\u0439, \u0430 \u043d\u0435\u0441\u0443\u0449\u0438\u0439 \u043a\u0430\u0440\u043a\u0430\u0441 \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \\n\u0438\u0441\u043f\u044b\u0442\u044b\u0432\u0430\u0442\u044c... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:26", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:29", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:37:29 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '2303', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '794334', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '424ms', 'x-request-id': 'req_8fe11fc9598140d885f0c0de66aad72b', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9333123db62df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:29", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_8fe11fc9598140d885f0c0de66aad72b", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:29", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity ratio: 0.25", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:29", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity threshold not met. Returning answer without references.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:29", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0434\u043b\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442 \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u0447\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438, \u0443\u043c\u0435\u043d\u044c\u0448\u0435\u043d\u0438\u044e \u0435\u0451 \u043f\u0440\u043e\u0447\u043d\u043e\u0441\u0442\u0438 \u0438 \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u0438. \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u043f\u0430\u0434\u0430\u043d\u0438\u0435 \u043f\u043e\u0434\u0437\u0435\u043c\u043d\u044b\u0445 \u0432\u043e\u0434 \u0432\u043d\u0443\u0442\u0440\u044c \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u0439, \u0447\u0442\u043e \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432\u0430\u0436\u043d\u043e \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u0432\u044b\u0441\u043e\u043a\u043e\u0433\u043e \u0443\u0440\u043e\u0432\u043d\u044f \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u0438\u043b\u0438 \u0430\u0433\u0440\u0435\u0441\u0441\u0438\u0432\u043d\u043e\u0439 \u0441\u0440\u0435\u0434\u044b. \u041f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u0438 \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u0442\u0430\u043a\u0438\u0445 \u043f\u0440\u043e\u0431\u043b\u0435\u043c, \u043a\u0430\u043a \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u044f \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b, \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0440\u0435\u0449\u0438\u043d \u0438 \u043f\u043b\u0435\u0441\u0435\u043d\u0438.', None)", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:29", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:29", "name": "handlers", "levelname": "INFO", "message": "Sent response to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:29", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='952d12b1-afcb-424f-b164-25a149a28abd'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:37:30", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:41", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:41", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:41", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:41", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u043a\u0430\u043a \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044c \u0441\u0442\u0435\u043d \u0434\u043b\u044f \u0434\u043e\u043c\u0430 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:41", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x000001E9230BB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 15, 39, 40, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2416, supergroup_chat_created=False, text='\u043a\u0430\u043a \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044c \u0441\u0442\u0435\u043d \u0434\u043b\u044f \u0434\u043e\u043c\u0430 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438'), update_id=881193590), <telegram.ext._callbackcontext.CallbackContext object at 0x000001E9A4259A20>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:41", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x000001E948718B30>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:41", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='48989098-f580-4cca-9f9c-a65b6b51e376' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:41", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='48989098-f580-4cca-9f9c-a65b6b51e376'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:41", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:41", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x000001E9470DE570>, '\u043a\u0430\u043a \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044c \u0441\u0442\u0435\u043d \u0434\u043b\u044f \u0434\u043e\u043c\u0430 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438'), kwargs: {'chat_history': [HumanMessage(content='\u043a\u0430\u043a \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044c \u0441\u0442\u0435\u043d \u0434\u043b\u044f \u0434\u043e\u043c\u0430 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0434\u043b\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442 \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u0447\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438, \u0443\u043c\u0435\u043d\u044c\u0448\u0435\u043d\u0438\u044e \u0435\u0451 \u043f\u0440\u043e\u0447\u043d\u043e\u0441\u0442\u0438 \u0438 \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u0438. \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u043e\u043f\u0430\u0434\u0430\u043d\u0438\u0435 \u043f\u043e\u0434\u0437\u0435\u043c\u043d\u044b\u0445 \u0432\u043e\u0434 \u0432\u043d\u0443\u0442\u0440\u044c \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u0439, \u0447\u0442\u043e \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432\u0430\u0436\u043d\u043e \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u0432\u044b\u0441\u043e\u043a\u043e\u0433\u043e \u0443\u0440\u043e\u0432\u043d\u044f \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u0438\u043b\u0438 \u0430\u0433\u0440\u0435\u0441\u0441\u0438\u0432\u043d\u043e\u0439 \u0441\u0440\u0435\u0434\u044b. \u041f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u0438 \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u0442\u0430\u043a\u0438\u0445 \u043f\u0440\u043e\u0431\u043b\u0435\u043c, \u043a\u0430\u043a \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u044f \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b, \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0440\u0435\u0449\u0438\u043d \u0438 \u043f\u043b\u0435\u0441\u0435\u043d\u0438.', additional_kwargs={}, response_metadata={}), HumanMessage(content='Hello', additional_kwargs={}, res... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:41", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001E9A0F0D760>, 'json_data': {'input': [[4898, 16248, 63229, 2233, 18482, 14257, 1830, 67124, 3114, 56008, 18868, 5372, 20440, 7952, 12507, 1506, 5927, 11562, 23630, 90877, 66144, 16742, 21923, 31443, 55523]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:41", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:42", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:39:42 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '112', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999974', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_a5267c8260450d575874fed41af66c0a', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93365fe8732dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:42", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_a5267c8260450d575874fed41af66c0a", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:42", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:42", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001E9A0F0D760>, 'json_data': {'input': [[4898, 16248, 63229, 2233, 18482, 14257, 1830, 67124, 3114, 56008, 18868, 5372, 20440, 7952, 12507, 1506, 5927, 11562, 23630, 90877, 66144, 16742, 21923, 31443, 55523]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:42", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:43", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:39:43 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '124', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999974', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_4b44d3d0f060e8c4b72b0df2cab6f492', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9336676b382dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:43", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_4b44d3d0f060e8c4b72b0df2cab6f492", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:43", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001E9A0F0D760>, 'json_data': {'input': [[2297, 89327, 14332, 10298, 78876, 64322, 6856, 11047, 10298, 8164, 7753, 8131, 56515, 44786, 29619, 21708, 2355, 20807, 13, 16, 35448, 94722, 38098, 79370, 57186, 11, 63229, 35682, 39988, 20440, 78876, 64322, 1506, 49526, 74598, 51412, 5524, 11047, 67124, 39865, 41873, 96485, 15458, 17766, 39988, 18034, 18437, 23680, 39988, 93099, 16742, 5524, 11047, 17766, 4898, 16494, 55617, 1830, 67187, 8131, 56515, 12648, 6578, 35875, 1482, 10298, 13, 720, 55258, 18437, 23680, 44858, 93099, 1506, 11562, 17766, 23311, 20346, 50819, 13373, 18868, 5372, 3865, 11122, 7094, 39280, 11, 99396, 5372, 39900, 5524, 7820, 17721, 13433, 2297, 12507, 23934, 11562, 17766, 7975, 9542, 39900, 720, 17394, 12394, 32985, 14082, 8341, 74828, 13, 35889, 17721, 56999, 44065, 18868, 79686, 72060, 7975, 40251, 70129, 21204, 23934, 7820, 78746, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:43", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:39:44 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '48', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999521', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '5ms', 'x-request-id': 'req_7ff8d3074b2c64dd164bb924d706482e', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93366c4d002dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_7ff8d3074b2c64dd164bb924d706482e", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001E9A0F0D760>, 'json_data': {'input': [[1830, 67124, 3114, 6856, 63233, 5173, 41056, 44613, 10693, 26, 33006, 12, 99396, 17618, 11562, 7753, 29256, 31203, 4329, 23311, 12415, 18154, 46339, 1830, 16494, 41873, 54686, 28114, 67124, 23680, 1506, 7952, 18226, 62776, 13373, 5927, 49899, 1532, 5524, 8341, 21708, 720, 1830, 67124, 3114, 23630, 2156, 38722, 17394, 18999, 5927, 11122, 7094, 39280, 26, 33006, 12, 14257, 68462, 13433, 21022, 2156, 98695, 76559, 39127, 39988, 21022, 2233, 6578, 8131, 3865, 39103, 5927, 11562, 37277, 1506, 10693, 21923, 14476, 47295, 5173, 33295, 39280, 26, 33006, 12, 5524, 15088, 52866, 17618, 6850, 7753, 30436, 74828, 29118, 39900, 81803, 2233, 50693, 62776, 11047, 67124, 3114, 6856, 16742, 7740, 21599, 3114, 30656, 31203, 6148, 23297, 4898, 16742, 21599, 2156, 7753, 15752, 47273, 13373, 720, 8164, 44075, 8164, 31203, 4329, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:39:45 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '155', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998543', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '17ms', 'x-request-id': 'req_3f8f9e9e0935879fbc9a0adcc98838a2', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e933671df132dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_3f8f9e9e0935879fbc9a0adcc98838a2", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001E9A0F0D760>, 'json_data': {'input': [[27435, 11320, 6578, 8131, 81301, 17165, 1532, 67445, 39103, 25190, 117, 74828, 30392, 1482, 56008, 94071, 12561, 19479, 16494, 1506, 70129, 21204, 18154, 28599, 17279, 220, 9263, 13, 9423, 966, 20440, 720, 15752, 13, 25079, 6578, 9542, 24803, 45458, 23630, 90877, 66144, 16742, 21923, 3114, 13, 49526, 19871, 44075, 40251, 4329, 11047, 10298, 8164, 7753, 8131, 3865, 22911, 20879, 29256, 56008, 39900, 28114, 1840, 87878, 720, 12, 18, 11, 16, 37386, 19871, 26, 49526, 8164, 2233, 9706, 48181, 56008, 61379, 20879, 29256, 56008, 39900, 28114, 1840, 87878, 720, 12463, 5524, 38521, 26, 49526, 1830, 10298, 8164, 7753, 8131, 3865, 22911, 5927, 2156, 38521, 2233, 5372, 2156, 47295, 5927, 35387, 3865, 10693, 1506, 720, 508, 37386, 34, 13, 49526, 85587, 81376, 47805, 1532, 90189, 6578, 8131, 81301, 17165, 10693, 45658, 15... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:39:45 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '135', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999256', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '8ms', 'x-request-id': 'req_11b66229c686eca105b471339db97057', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e933678e8e22dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_11b66229c686eca105b471339db97057", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001E9A0F0D760>, 'json_data': {'input': [[3226, 33006, 20807, 18437, 4655, 8164, 77495, 11047, 67124, 39865, 41873, 96485, 15458, 12182, 7952, 29256, 44155, 13433, 50819, 12561, 16494, 5372, 94975, 74726, 13373, 25756, 9239, 41873, 97341, 39127, 44786, 720, 8164, 6856, 7753, 10693, 13999, 6735, 4329, 10693, 11, 21022, 50945, 59138, 5927, 38098, 79370, 71829, 10693, 7820, 39103, 12426, 11, 28114, 15298, 2233, 35667, 1506, 90457, 67745, 90211, 40590, 6148, 44065, 320, 6578, 7486, 2297, 17721, 7094, 44065, 8, 720, 8164, 12507, 86610, 18999, 7740, 48835, 1532, 90457, 67745, 14257, 4898, 3114, 17766, 19175, 14391, 7975, 50506, 220, 16, 25, 20, 13, 720, 24, 13, 17, 13, 16, 13, 19, 39903, 14009, 93781, 18999, 5927, 41291, 10589, 94520, 1532, 81757, 33793, 3114, 3865, 8131, 54686, 7952, 12507, 6856, 11047, 67124, 3114, 20219, 1506, 14476, 9542, 44786, 45916... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:39:46 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '64', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999087', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '10ms', 'x-request-id': 'req_2bb94ef0d3488fed1ac68b091ff63823', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93367b69902dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_2bb94ef0d3488fed1ac68b091ff63823", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"You are a project assistant from the consultant side on design and construction projects. If you don't know the answer, say that you don't know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 18:39:46. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0440\u0430\u0441\u0447\u0435\u0442\u043e\u0432 \u0442\u0435\u043c\u043f\u0435\u0440\u0430\u0442\u0443\u0440\u043d\u044b\u0445 \u043f\u043e\u043b\u0435\u0439  \\n\u041d.1 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438, \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0439 \u0434\u043b\u044f \u0440\u0430\u0441\u0447\u0435\u0442\u0430 \\n  \\n\u0421\u0442\u0435\u043d\u0430 \u0441 \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0444\u0430\u0441\u0430\u0434\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439 \u0441 \u0442\u043e\u043d\u043a\u0438\u043c \u0448\u0442\u0443\u043a\u0430\u0442\u0443\u0440\u043d\u044b\u043c \u0441\u043b\u043e\u0435\u043c. \\n\u0424\u0430\u0441\u0430\u0434\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u043c\u043e\u043d\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u043d\u0430 \u0441\u0442\u0435\u043d\u0443 \u0437... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:39:50 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '3318', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '795905', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '307ms', 'x-request-id': 'req_444d8ba686236d749b79a388a1f6581c', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93367e3e0d2df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_444d8ba686236d749b79a388a1f6581c", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:51", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity ratio: 0.5555555555555556", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:51", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity threshold not met. Returning answer without references.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:51", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u041f\u0440\u0438 \u0432\u044b\u0431\u043e\u0440\u0435 \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044f \u0434\u043b\u044f \u0441\u0442\u0435\u043d \u0434\u043e\u043c\u0430 \u0432 \u041c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0432\u0430\u0436\u043d\u044b\u0445 \u0444\u0430\u043a\u0442\u043e\u0440\u043e\u0432:\\n\\n1. <b>\u0422\u0435\u043f\u043b\u043e\u043f\u0440\u043e\u0432\u043e\u0434\u043d\u043e\u0441\u0442\u044c</b>: \u0427\u0435\u043c \u043d\u0438\u0436\u0435 \u0442\u0435\u043f\u043b\u043e\u043f\u0440\u043e\u0432\u043e\u0434\u043d\u043e\u0441\u0442\u044c \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u0430, \u0442\u0435\u043c \u043b\u0443\u0447\u0448\u0435 \u043e\u043d \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0442\u0435\u043f\u043b\u043e. \u0414\u043b\u044f \u041c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438, \u0433\u0434\u0435 \u0437\u0438\u043c\u044b \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0445\u043e\u043b\u043e\u0434\u043d\u044b\u043c\u0438, \u044d\u0442\u043e \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432\u0430\u0436\u043d\u043e.\\n\\n2. <b>\u041f\u0430\u0440\u043e\u043f\u0440\u043e\u043d\u0438\u0446\u0430\u0435\u043c\u043e\u0441\u0442\u044c</b>: \u0423\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0442\u044c \u0441\u0442\u0435\u043d\u0430\u043c \"\u0434\u044b\u0448\u0430\u0442\u044c\", \u0447\u0442\u043e\u0431\u044b \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u0441\u043a\u043e\u043f\u043b\u0435\u043d\u0438\u044f \u0432\u043b\u0430\u0433\u0438 \u0438 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u043b\u0435\u0441\u0435\u043d\u0438. \u041b\u0443\u0447\u0448\u0435 \u0432\u044b\u0431\u0438\u0440\u0430\u0442\u044c \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b \u0441 \u0445\u043e\u0440\u043e\u0448\u0435\u0439 \u043f\u0430\u0440\u043e\u043f\u0440\u043e\u043d\u0438\u0446\u0430\u0435\u043c\u043e\u0441\u0442\u044c\u044e.\\n\\n3. <b>\u0412\u043b\u0430\u0433\u043e\u0441\u0442\u043e\u0439\u043a\u043e\u0441\u0442\u044c</b>: \u0423\u0447\u0438\u0442\u044b\u0432\u0430\u044f \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f, \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432 \u043a \u0432\u043b\u0430\u0433\u0435.\\n\\n4. <b>\u042d\u043a\u043e\u043b\u043e\u0433\u0438\u0447\u043d\u043e\u0441\u0442\u044c \u0438 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c</b>: \u041c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u044b \u0434\u043b\u044f \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u044f \u0438 \u043e\u043a\u0440\u0443\u0436\u0430\u044e\u0449\u0435\u0439 \u0441\u0440\u0435\u0434\u044b.\\n\\n5. <b>\u0414\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u044c</b>: \u0412\u044b\u0431\u0438\u0440\u0430\u0442\u044c \u0441\u0442\u043e\u0438\u0442 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0442 \u0441\u0432\u043e\u0438 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 \u0432 \u0442\u0435\u0447\u0435\u043d\u0438\u0435 \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0433\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438.\\n\\n6. <b>\u0421\u043f\u043e\u0441\u043e\u0431 \u043c\u043e\u043d\u0442\u0430\u0436\u0430</b>: \u0423\u0447\u0438\u0442\u044b\u0432\u0430\u0439\u0442\u0435, \u043d\u0430\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u043e\u0441\u0442\u043e \u0431\u0443\u0434\u0435\u0442 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044c, \u0438 \u043a\u0430\u043a\u0438\u0435 \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b \u043c\u043e\u0433\u0443\u0442 \u043f\u043e\u043d\u0430\u0434\u043e\u0431\u0438\u0442\u044c\u0441\u044f.\\n\\n\u0414\u043b\u044f \u041c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:51", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:51", "name": "handlers", "levelname": "INFO", "message": "Sent response to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:51", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='48989098-f580-4cca-9f9c-a65b6b51e376'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:39:51", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:55:52", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 18:55:54", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 18:55:54", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 18:55:54", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 18:56:11", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:12", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:12", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:12", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:12", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:12", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: ru", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:12", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:12", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/start'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:12", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: start with args: (<handlers.BotHandlers object at 0x00000258B153B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 15, 56, 11, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=6, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2418, supergroup_chat_created=False, text='/start'), update_id=881193591), <telegram.ext._callbackcontext.CallbackContext object at 0x00000258D6ADCDE0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:12", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: start with result: <coroutine object BotHandlers.start at 0x00000258D6983480>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:12", "name": "handlers", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:13", "name": "handlers", "levelname": "INFO", "message": "Sent welcome message to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:13", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:21", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:21", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:21", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:22", "name": "decorators", "levelname": "WARNING", "message": "Documents not indexed for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:28", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:28", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:28", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:28", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:28", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x00000258B153B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 15, 56, 28, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2422, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193593), <telegram.ext._callbackcontext.CallbackContext object at 0x00000258D6ADF540>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:28", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x00000258D6997640>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:29", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:29", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:31", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:31", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:31", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:31", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:31", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x00000258B153B7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), id='1051116660267949511', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 15, 56, 29, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2423, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations')... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:31", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x00000258D57CF8A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:31", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:31", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:31", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x00000258D6BA3E00>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:31", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:31", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x00000258D6BA3E00>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:31", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:31", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:31", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:31", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:31", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:31", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:31", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:31", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:56:32", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:17", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:17", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:17", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:17", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:17", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x00000258B153B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 15, 57, 16, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2425, supergroup_chat_created=False, text='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), update_id=881193595), <telegram.ext._callbackcontext.CallbackContext object at 0x00000258D6ADF540>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:17", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x00000258D6BB8CC0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:17", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='2b390a0a-f661-4d61-b1a4-976da94cc633' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:17", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='2b390a0a-f661-4d61-b1a4-976da94cc633'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:17", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:17", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x00000258D6BA3E00>, '\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), kwargs: {'chat_history': [HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043a\u0430\u043a \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044c \u0441\u0442\u0435\u043d \u0434\u043b\u044f \u0434\u043e\u043c\u0430 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438', additional_kwargs={}, response_metadata={}), AIMessage(content='\u041f\u0440\u0438 \u0432\u044b\u0431\u043e\u0440\u0435 \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044f \u0434\u043b\u044f \u0441\u0442\u0435\u043d \u0434\u043e\u043c\u0430 \u0432 \u041c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0432\u0430\u0436\u043d\u044b\u0445 \u0444\u0430\u043a\u0442\u043e\u0440\u043e\u0432:\\n\\n1. <b>\u0422\u0435\u043f\u043b\u043e\u043f\u0440\u043e\u0432\u043e\u0434\u043d\u043e\u0441\u0442\u044c</b>: \u0427\u0435\u043c \u043d\u0438\u0436\u0435 \u0442\u0435\u043f\u043b\u043e\u043f\u0440\u043e\u0432\u043e\u0434\u043d\u043e\u0441\u0442\u044c \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u0430, \u0442\u0435\u043c \u043b\u0443\u0447\u0448\u0435 \u043e\u043d \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u0442\u0435\u043f\u043b\u043e. \u0414\u043b\u044f \u041c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438, \u0433\u0434\u0435 \u0437\u0438\u043c\u044b \u043c\u043e\u0433\u0443\u0442 \u0431\u044b\u0442\u044c \u0445\u043e\u043b\u043e\u0434\u043d\u044b\u043c\u0438, \u044d\u0442\u043e \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432\u0430\u0436\u043d\u043e.\\n\\n2. <b>\u041f\u0430\u0440\u043e\u043f\u0440\u043e\u043d\u0438\u0446\u0430\u0435\u043c\u043e\u0441\u0442\u044c</b>: \u0423\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0442\u044c \u0441\u0442\u0435\u043d\u0430\u043c \"\u0434\u044b\u0448\u0430\u0442\u044c\", \u0447\u0442\u043e\u0431\u044b \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u0441\u043a\u043e\u043f\u043b\u0435\u043d\u0438\u044f \u0432\u043b\u0430\u0433\u0438 \u0438 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u043b\u0435\u0441\u0435\u043d\u0438. \u041b\u0443\u0447\u0448\u0435 \u0432\u044b\u0431\u0438\u0440\u0430\u0442\u044c \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b \u0441 \u0445\u043e\u0440\u043e\u0448\u0435\u0439 \u043f\u0430\u0440\u043e\u043f\u0440\u043e\u043d\u0438\u0446\u0430\u0435\u043c\u043e\u0441\u0442\u044c\u044e.\\n\\n3. <b>\u0412\u043b\u0430\u0433\u043e\u0441\u0442\u043e\u0439\u043a\u043e\u0441\u0442\u044c</b>: \u0423\u0447\u0438\u0442\u044b\u0432\u0430\u044f \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f, \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044c \u0434\u043e\u043b\u0436\u0435\u043d \u0431\u044b\u0442\u044c \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432 \u043a \u0432\u043b\u0430\u0433\u0435.\\n\\n4. <b>\u042d\u043a\u043e\u043b\u043e\u0433\u0438\u0447\u043d... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:17", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000258D6BEB100>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:17", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:19", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 15:57:18 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '50'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999983'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_4837dfd93f331bc3392635b6696ccd59'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=lB3JlCHu_MaV1QTK.fL5PGz.91_Yd7AVda69xSoOqNk-1732723038-1.0.1.1-uT1Bft64jNiUszZjp6EgXht6PI.4hSSHi34dUX... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:19", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_4837dfd93f331bc3392635b6696ccd59", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:19", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:19", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000258D53D4D60>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:19", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:57:19 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '42', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999982', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_cb9e9881d139082445918e5111ed7f02', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e935030baca2dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_cb9e9881d139082445918e5111ed7f02", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000258D53D4D60>, 'json_data': {'input': [[74598, 96256, 1506, 220, 4364, 23934, 220, 14815, 33006, 868, 13, 21, 23784, 11047, 12507, 90226, 1506, 1532, 11, 47353, 40842, 9136, 10298, 44858, 17756, 1506, 35592, 34943, 9239, 56999, 18999, 30392, 1482, 97334, 5927, 7820, 13337, 3114, 6856, 7486, 1532, 40842, 44946, 14476, 9542, 16742, 720, 1, 6735, 79686, 5927, 25756, 20346, 2156, 51627, 1, 46177, 8379, 15752, 11001, 114, 7094, 18999, 23934, 25756, 20346, 2156, 25657, 10589, 10298, 19190, 44786, 45916, 19039, 11, 21022, 19175, 2297, 43293, 44938, 7820, 17721, 13433, 2297, 34943, 9239, 56999, 18999, 68088, 720, 13810, 8164, 4655, 1830, 35667, 18482, 6850, 7753, 18226, 2156, 50619, 44065, 81376, 23680, 17165, 11, 25756, 48262, 2233, 1482, 41873, 96485, 15458, 17766, 34613, 7820, 6856, 7753, 23934, 12, 8164, 9706, 40842, 1482, 12426, 5591, 4655, 18034, 35... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:57:20 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '127', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998465', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '18ms', 'x-request-id': 'req_ea776df4356d0e53e34ebf9baa9ae44b', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9350379c1b2dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_ea776df4356d0e53e34ebf9baa9ae44b", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000258D53D4D60>, 'json_data': {'input': [[74598, 96256, 1506, 220, 7994, 23934, 220, 14815, 33006, 49899, 17766, 67124, 2233, 17766, 1840, 10589, 32062, 85864, 13, 23784, 12561, 13337, 28089, 94962, 90226, 1506, 1532, 93129, 73181, 12561, 16494, 5372, 94975, 12561, 35111, 5372, 34613, 7952, 2233, 5372, 38657, 13, 720, 868, 13, 1032, 23784, 330, 10693, 7975, 9706, 44786, 1, 55617, 94538, 10693, 18034, 35297, 7094, 24697, 19190, 39988, 5173, 3114, 9542, 4655, 11, 21022, 50945, 59138, 13373, 14257, 6148, 84350, 53671, 22918, 1532, 5524, 29256, 2233, 4329, 17394, 18999, 34943, 330, 6735, 5372, 16742, 720, 5591, 25756, 20346, 2156, 51627, 1, 46177, 13373, 20346, 17394, 39988, 18868, 5372, 16742, 34943, 9239, 56999, 18999, 19175, 89159, 1482, 14257, 52037, 18226, 11320, 5591, 18482, 84714, 1532, 15458, 39127, 44065, 720, 15752, 48262, 2233, 1482, 12426, 8... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:57:21 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '73', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998825', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '14ms', 'x-request-id': 'req_d6bd63b19b1671ddd7ad31365602b869', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93503e5d932dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_d6bd63b19b1671ddd7ad31365602b869", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000258D53D4D60>, 'json_data': {'input': [[74598, 96256, 1506, 220, 2287, 23934, 220, 14815, 33006, 806, 13, 2983, 23227, 31203, 86291, 36750, 84198, 18034, 35297, 7094, 24697, 19190, 6856, 7740, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 19175, 89159, 1482, 78085, 2233, 7975, 59921, 18482, 720, 15752, 3114, 64569, 19479, 3865, 7740, 10693, 11122, 16331, 21956, 18999, 11, 100147, 4655, 7740, 78876, 8164, 7975, 21956, 17618, 5927, 5173, 3114, 7486, 1532, 11, 14257, 77911, 20812, 1482, 20879, 49284, 6735, 44938, 7740, 6850, 1840, 12426, 11, 99396, 17618, 720, 15752, 48262, 2233, 1482, 41873, 96485, 57186, 7740, 7820, 50223, 52744, 12561, 16494, 5372, 5372, 44786, 96573, 7753, 1840, 16331, 6856, 7740, 38098, 79370, 15458, 12415, 13, 35889, 1506, 14257, 77911, 20812, 1482, 320, 8164, 9706, 15752, 13337, 6856, 36352, 8, 720, 23630, 47805, 39280... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:22", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:57:22 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '134', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '12ms', 'x-request-id': 'req_c36ad81e41f53ac7b6ef520028bbf0f7', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e935040ade72dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:22", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_c36ad81e41f53ac7b6ef520028bbf0f7", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:22", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000258D53D4D60>, 'json_data': {'input': [[806, 33006, 20, 13, 23, 13, 16, 13, 17, 23227, 15088, 39103, 23311, 4329, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 320, 4898, 7486, 16331, 6856, 11, 51548, 9706, 10589, 33742, 11, 18868, 38438, 44786, 18600, 32985, 7753, 5591, 3865, 17721, 6856, 8, 720, 7094, 48181, 12648, 48835, 8341, 4929, 25756, 48262, 2233, 1482, 41873, 96485, 15458, 12182, 20440, 57925, 13337, 5591, 52866, 18999, 5173, 29256, 23680, 39280, 5927, 9706, 4655, 5927, 2156, 38521, 2233, 4929, 720, 2297, 1482, 9239, 56999, 62491, 13, 720, 20, 13, 23, 13, 16, 13, 18, 39903, 14009, 14257, 77911, 94071, 5927, 3114, 34493, 1482, 41873, 96485, 57186, 46177, 25756, 48262, 2233, 1482, 41873, 96485, 57186, 12561, 16494, 5372, 4329, 70129, 18600, 3865, 3114, 17766, 44065, 720, 4898, 24803, 26503, 44065, 7740, 25756, 48262, 2233, 1482, 418... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:22", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:23", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:57:23 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '91', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998401', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '19ms', 'x-request-id': 'req_b1fe73f6cbba72d69541997f2b5a87fd', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9350475f892dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:23", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_b1fe73f6cbba72d69541997f2b5a87fd", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:23", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 18:57:23. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 120 \u0438\u0437 239 \\n \\n15.6 \u0412 \u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u0435\u0441\u043b\u0438 \u043f\u043e\u0434\u0437\u0435\u043c\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u0438\u0442\u0441\u044f \u0432 \u043a\u043e\u0442\u043b\u043e\u0432\u0430\u043d\u0435 \u043f\u043e\u0434 \u0437\u0430\u0449\u0438\u0442\u043e\u0439 \\n\"\u0441\u0442\u0435\u043d\u044b \u0432 \u0433\u0440\u0443\u043d\u0442\u0435\" \u0438\u043b\u0438 \u043e\u0433\u0440\u0430\u0436\u0434\u0435\u043d\u0438\u044f \u0438\u0437 \u0433\u0440\u0443\u043d\u0442\u043e\u0446\u0435\u043c\u0435\u043d\u0442\u043d\u044b\u0445 \u0441\u0432\u0430\u0439, \u0430 \u043d\u0435\u0441\u0443\u0449\u0438\u0439 \u043a\u0430\u0440\u043a\u0430\u0441 \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \\n\u0438\u0441\u043f\u044b\u0442\u044b\u0432\u0430\u0442\u044c... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:23", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:27", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 15:57:27 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '2760'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '793650'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '476ms'), ('x-request-id', 'req_3e2ee7ec0495f759c3ee907fa6c7ec1a'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=6eXSdl5U8pQrkq35klAlehxqTUO5Lmj1QpEhgyj55Cg-1732723047-1.0.1.1-OruoABPH.hDROQruLtZhfvnA6bj2jAYyBJIXhnJfT2pjTw70UfnO.NgXZdUQDqzSLk92DA5MoG7OfrfQCLhITQ; path=/; expires=Wed, 27... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:27", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_3e2ee7ec0495f759c3ee907fa6c7ec1a", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:27", "name": "llm_service", "levelname": "ERROR", "message": "Error in is_prompt_relevant_to_documents: not enough values to unpack (expected 2, got 1)", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\llm_service.py\", line 317, in is_prompt_relevant_to_documents\n    max_similarity = max([similarity for _, similarity in relevance_scores], default=0.0)\n                                         ^^^^^^^^^^^^^\nValueError: not enough values to unpack (expected 2, got 1)", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:27", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity threshold not met. Returning answer without references.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:27", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0434\u043b\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442 \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u0447\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044e \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u0430, \u0441\u043d\u0438\u0436\u0435\u043d\u0438\u044e \u0435\u0433\u043e \u043f\u0440\u043e\u0447\u043d\u043e\u0441\u0442\u0438 \u0438 \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u0438. \u0412\u043b\u0430\u0433\u0430 \u043c\u043e\u0436\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u044e \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b, \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0440\u0435\u0449\u0438\u043d, \u043f\u043b\u0435\u0441\u0435\u043d\u0438 \u0438 \u0433\u0440\u0438\u0431\u043a\u0430. \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432\u0430\u0436\u043d\u0430 \u0432 \u0440\u0430\u0439\u043e\u043d\u0430\u0445 \u0441 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u0438\u043b\u0438 \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u0430\u0433\u0440\u0435\u0441\u0441\u0438\u0432\u043d\u043e\u0439 \u0441\u0440\u0435\u0434\u044b. \u041f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0430\u044f \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0446\u0435\u043b\u043e\u0441\u0442\u043d\u043e\u0441\u0442\u044c \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430 \u043d\u0430 \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f.', None)", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:27", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:28", "name": "handlers", "levelname": "INFO", "message": "Sent response to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:28", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='2b390a0a-f661-4d61-b1a4-976da94cc633'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:57:28", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:24", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 18:58:26", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 18:58:26", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 18:58:26", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 18:58:40", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:40", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:40", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:41", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:41", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:41", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:41", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:41", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: ru", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:41", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:41", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:41", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x000001F7FADCB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 15, 58, 40, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2427, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193596), <telegram.ext._callbackcontext.CallbackContext object at 0x000001F7A04BCDE0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:41", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x000001F7FD2D0CA0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:42", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:42", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:44", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:44", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:44", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:44", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:44", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x000001F7FADCB7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), id='1051116661198095057', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 15, 58, 42, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2428, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations')... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:44", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x000001F79F1AB8A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:44", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:44", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:44", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x000001F7A0596480>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:44", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:44", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x000001F7A0596480>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:44", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:44", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:44", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:44", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:44", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:44", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:44", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:44", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:45", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:56", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:56", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:56", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:56", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:56", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x000001F7FADCB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 15, 58, 55, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2430, supergroup_chat_created=False, text='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), update_id=881193598), <telegram.ext._callbackcontext.CallbackContext object at 0x000001F7A04BD470>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:56", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x000001F7A05889A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:56", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='12bbdb32-f697-45a8-a8d4-4ccbde832f40' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:56", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='12bbdb32-f697-45a8-a8d4-4ccbde832f40'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:56", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:56", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x000001F7A0596480>, '\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), kwargs: {'chat_history': [HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0434\u043b\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442 \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u0447\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044e \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u0430, \u0441\u043d\u0438\u0436\u0435\u043d\u0438\u044e \u0435\u0433\u043e \u043f\u0440\u043e\u0447\u043d\u043e\u0441\u0442\u0438 \u0438 \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u0438. \u0412\u043b\u0430\u0433\u0430 \u043c\u043e\u0436\u0435\u0442 \u0432\u044b\u0437\u0432\u0430\u0442\u044c \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u044e \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b, \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0442\u0440\u0435\u0449\u0438\u043d, \u043f\u043b\u0435\u0441\u0435\u043d\u0438 \u0438 \u0433\u0440\u0438\u0431\u043a\u0430. \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432\u0430\u0436\u043d\u0430 \u0432 \u0440\u0430\u0439\u043e\u043d\u0430\u0445 \u0441 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u0438\u043b\u0438 \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u0430\u0433\u0440\u0435\u0441\u0441\u0438\u0432\u043d\u043e\u0439 \u0441\u0440\u0435\u0434\u044b. \u041f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0430\u044f \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0446\u0435\u043b\u043e\u0441\u0442\u043d\u043e\u0441\u0442\u044c \u0438 \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e\u0441\u0442\u044c \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430 \u043d\u0430 \u0434\u043b\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0435 \u0432\u0440\u0435\u043c\u044f.', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043a\u0430\u043a \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044c \u0441\u0442\u0435\u043d \u0434\u043b\u044f \u0434\u043e\u043c\u0430 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438', additiona... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F7A05BF560>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 15:58:57 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '69'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999982'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_e0d45967d85f235d273a263ac6be95d2'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=BwbquO50h3mt3_ogV64XY7O1OB5WB1PoZ6L3Vgx9Gv8-1732723137-1.0.1.1-HOjAdHpOqFugFPl.aKmIjQgLD0eGY6pbTBTxZ4... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_e0d45967d85f235d273a263ac6be95d2", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:57", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F79EDA0D60>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:58:57 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '104', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999982', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_24fdb61e87460a3e2a5042123afe8be2', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9352984eebefb1-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_24fdb61e87460a3e2a5042123afe8be2", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F79EDA0D60>, 'json_data': {'input': [[74598, 96256, 1506, 220, 4364, 23934, 220, 14815, 33006, 868, 13, 21, 23784, 11047, 12507, 90226, 1506, 1532, 11, 47353, 40842, 9136, 10298, 44858, 17756, 1506, 35592, 34943, 9239, 56999, 18999, 30392, 1482, 97334, 5927, 7820, 13337, 3114, 6856, 7486, 1532, 40842, 44946, 14476, 9542, 16742, 720, 1, 6735, 79686, 5927, 25756, 20346, 2156, 51627, 1, 46177, 8379, 15752, 11001, 114, 7094, 18999, 23934, 25756, 20346, 2156, 25657, 10589, 10298, 19190, 44786, 45916, 19039, 11, 21022, 19175, 2297, 43293, 44938, 7820, 17721, 13433, 2297, 34943, 9239, 56999, 18999, 68088, 720, 13810, 8164, 4655, 1830, 35667, 18482, 6850, 7753, 18226, 2156, 50619, 44065, 81376, 23680, 17165, 11, 25756, 48262, 2233, 1482, 41873, 96485, 15458, 17766, 34613, 7820, 6856, 7753, 23934, 12, 8164, 9706, 40842, 1482, 12426, 5591, 4655, 18034, 35... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:58:58 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '151', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998465', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '18ms', 'x-request-id': 'req_68ed3569f5beb5c10847e29a94750710', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93529a98d0efb1-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_68ed3569f5beb5c10847e29a94750710", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F79EDA0D60>, 'json_data': {'input': [[74598, 96256, 1506, 220, 7994, 23934, 220, 14815, 33006, 49899, 17766, 67124, 2233, 17766, 1840, 10589, 32062, 85864, 13, 23784, 12561, 13337, 28089, 94962, 90226, 1506, 1532, 93129, 73181, 12561, 16494, 5372, 94975, 12561, 35111, 5372, 34613, 7952, 2233, 5372, 38657, 13, 720, 868, 13, 1032, 23784, 330, 10693, 7975, 9706, 44786, 1, 55617, 94538, 10693, 18034, 35297, 7094, 24697, 19190, 39988, 5173, 3114, 9542, 4655, 11, 21022, 50945, 59138, 13373, 14257, 6148, 84350, 53671, 22918, 1532, 5524, 29256, 2233, 4329, 17394, 18999, 34943, 330, 6735, 5372, 16742, 720, 5591, 25756, 20346, 2156, 51627, 1, 46177, 13373, 20346, 17394, 39988, 18868, 5372, 16742, 34943, 9239, 56999, 18999, 19175, 89159, 1482, 14257, 52037, 18226, 11320, 5591, 18482, 84714, 1532, 15458, 39127, 44065, 720, 15752, 48262, 2233, 1482, 12426, 8... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:58:58 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '104', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998825', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '14ms', 'x-request-id': 'req_49eca53014a8c27e8b1cf05dd74a21c2', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93529eaccdefb1-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_49eca53014a8c27e8b1cf05dd74a21c2", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F79EDA0D60>, 'json_data': {'input': [[74598, 96256, 1506, 220, 2287, 23934, 220, 14815, 33006, 806, 13, 2983, 23227, 31203, 86291, 36750, 84198, 18034, 35297, 7094, 24697, 19190, 6856, 7740, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 19175, 89159, 1482, 78085, 2233, 7975, 59921, 18482, 720, 15752, 3114, 64569, 19479, 3865, 7740, 10693, 11122, 16331, 21956, 18999, 11, 100147, 4655, 7740, 78876, 8164, 7975, 21956, 17618, 5927, 5173, 3114, 7486, 1532, 11, 14257, 77911, 20812, 1482, 20879, 49284, 6735, 44938, 7740, 6850, 1840, 12426, 11, 99396, 17618, 720, 15752, 48262, 2233, 1482, 41873, 96485, 57186, 7740, 7820, 50223, 52744, 12561, 16494, 5372, 5372, 44786, 96573, 7753, 1840, 16331, 6856, 7740, 38098, 79370, 15458, 12415, 13, 35889, 1506, 14257, 77911, 20812, 1482, 320, 8164, 9706, 15752, 13337, 6856, 36352, 8, 720, 23630, 47805, 39280... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:59", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:58:59 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '83', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '12ms', 'x-request-id': 'req_a6d6139bb603eb4699ee3f4cd95174ed', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9352a15f60efb1-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:59", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_a6d6139bb603eb4699ee3f4cd95174ed", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:59", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001F79EDA0D60>, 'json_data': {'input': [[806, 33006, 20, 13, 23, 13, 16, 13, 17, 23227, 15088, 39103, 23311, 4329, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 320, 4898, 7486, 16331, 6856, 11, 51548, 9706, 10589, 33742, 11, 18868, 38438, 44786, 18600, 32985, 7753, 5591, 3865, 17721, 6856, 8, 720, 7094, 48181, 12648, 48835, 8341, 4929, 25756, 48262, 2233, 1482, 41873, 96485, 15458, 12182, 20440, 57925, 13337, 5591, 52866, 18999, 5173, 29256, 23680, 39280, 5927, 9706, 4655, 5927, 2156, 38521, 2233, 4929, 720, 2297, 1482, 9239, 56999, 62491, 13, 720, 20, 13, 23, 13, 16, 13, 18, 39903, 14009, 14257, 77911, 94071, 5927, 3114, 34493, 1482, 41873, 96485, 57186, 46177, 25756, 48262, 2233, 1482, 41873, 96485, 57186, 12561, 16494, 5372, 4329, 70129, 18600, 3865, 3114, 17766, 44065, 720, 4898, 24803, 26503, 44065, 7740, 25756, 48262, 2233, 1482, 418... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:58:59", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:59:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 15:58:59 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '147', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998401', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '19ms', 'x-request-id': 'req_406ada2d2c9b7429e6c918b6551a0cdf', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9352a52b2defb1-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:59:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_406ada2d2c9b7429e6c918b6551a0cdf", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:59:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 18:59:00. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 120 \u0438\u0437 239 \\n \\n15.6 \u0412 \u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u0435\u0441\u043b\u0438 \u043f\u043e\u0434\u0437\u0435\u043c\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u0438\u0442\u0441\u044f \u0432 \u043a\u043e\u0442\u043b\u043e\u0432\u0430\u043d\u0435 \u043f\u043e\u0434 \u0437\u0430\u0449\u0438\u0442\u043e\u0439 \\n\"\u0441\u0442\u0435\u043d\u044b \u0432 \u0433\u0440\u0443\u043d\u0442\u0435\" \u0438\u043b\u0438 \u043e\u0433\u0440\u0430\u0436\u0434\u0435\u043d\u0438\u044f \u0438\u0437 \u0433\u0440\u0443\u043d\u0442\u043e\u0446\u0435\u043c\u0435\u043d\u0442\u043d\u044b\u0445 \u0441\u0432\u0430\u0439, \u0430 \u043d\u0435\u0441\u0443\u0449\u0438\u0439 \u043a\u0430\u0440\u043a\u0430\u0441 \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \\n\u0438\u0441\u043f\u044b\u0442\u044b\u0432\u0430\u0442\u044c... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:59:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:59:03", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 15:59:03 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '2666'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '793473'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '489ms'), ('x-request-id', 'req_5d2702f9d60705f5176f1840b9437cfb'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=vdVJPKZudIAb3VF2IcWgyOW6NZ2Qn2YdFVYjw5ZTDas-1732723143-1.0.1.1-_W3aAP_9e580tcaYmvuXr56vLfyDpv4x5YWO512lbVTgrM2xLBZ_HQMdq.I77H0yzJbWpP2wPyCr71tsFMeUkw; path=/; expires=Wed, 27... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:59:03", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_5d2702f9d60705f5176f1840b9437cfb", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:59:03", "name": "llm_service", "levelname": "ERROR", "message": "Error in is_prompt_relevant_to_documents: not enough values to unpack (expected 2, got 1)", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\llm_service.py\", line 317, in is_prompt_relevant_to_documents\n    max_similarity = max([similarity for _, similarity in relevance_scores], default=0.0)\n                                         ^^^^^^^^^^^^^\nValueError: not enough values to unpack (expected 2, got 1)", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:59:03", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity threshold not met. Returning answer without references.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:59:03", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0434\u043b\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e \u043e\u0442 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u0435 \u043f\u043e\u0434\u0437\u0435\u043c\u043d\u044b\u0445 \u0432\u043e\u0434 \u0438 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442 \u0441\u0440\u043e\u043a \u0441\u043b\u0443\u0436\u0431\u044b \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430. \u042d\u0442\u043e \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432\u0430\u0436\u043d\u043e \u0432 \u0440\u0430\u0439\u043e\u043d\u0430\u0445 \u0441 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u0438\u043b\u0438 \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u0430\u0433\u0440\u0435\u0441\u0441\u0438\u0432\u043d\u043e\u0439 \u0441\u0440\u0435\u0434\u044b, \u0433\u0434\u0435 \u0432\u043b\u0430\u0433\u0430 \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u0438 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b \u0438 \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044e \u0431\u0435\u0442\u043e\u043d\u0430. \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u043f\u0440\u043e\u0431\u043b\u0435\u043c, \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0445 \u0441 \u0432\u043b\u0430\u0436\u043d\u043e\u0441\u0442\u044c\u044e, \u0442\u0430\u043a\u0438\u0445 \u043a\u0430\u043a \u043f\u043b\u0435\u0441\u0435\u043d\u044c \u0438 \u0433\u0440\u0438\u0431\u043e\u043a.', None)", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:59:03", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:59:04", "name": "handlers", "levelname": "INFO", "message": "Sent response to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:59:04", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='12bbdb32-f697-45a8-a8d4-4ccbde832f40'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 18:59:04", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:31", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 19:04:33", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 19:04:33", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 19:04:33", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 19:04:40", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:41", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:41", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:41", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:41", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:41", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: ru", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:41", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:41", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/start'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:41", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: start with args: (<handlers.BotHandlers object at 0x000002A7A3D8B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 4, 40, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=6, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2432, supergroup_chat_created=False, text='/start'), update_id=881193599), <telegram.ext._callbackcontext.CallbackContext object at 0x000002A7C93BB000>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:41", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: start with result: <coroutine object BotHandlers.start at 0x000002A7C9263220>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:41", "name": "handlers", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:42", "name": "handlers", "levelname": "INFO", "message": "Sent welcome message to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:42", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:50", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:50", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:50", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:50", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:50", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x000002A7A3D8B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 4, 49, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2434, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193600), <telegram.ext._callbackcontext.CallbackContext object at 0x000002A7C93B9470>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:50", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x000002A7C9277BE0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:51", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:51", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:53", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:53", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:53", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:53", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:53", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x000002A7A3D8B7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), id='1051116658271829357', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 4, 50, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2435, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations'),... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:53", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x000002A7C80AF8A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:54", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:54", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:54", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x000002A7C9483E00>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:54", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:54", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x000002A7C9483E00>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:54", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:54", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:54", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:54", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:54", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:54", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:54", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:54", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:04:54", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:03", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:03", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:03", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:03", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='Hello'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:03", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x000002A7A3D8B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 5, 3, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2437, supergroup_chat_created=False, text='Hello'), update_id=881193602), <telegram.ext._callbackcontext.CallbackContext object at 0x000002A7C93B9FD0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:03", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x000002A7C9498B30>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:03", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='8304e161-185d-49b9-9016-188cd920bc11' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:03", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='8304e161-185d-49b9-9016-188cd920bc11'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:03", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:03", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x000002A7C9483E00>, 'Hello'), kwargs: {'chat_history': [HumanMessage(content='Hello', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0434\u043b\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e \u043e\u0442 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u0435 \u043f\u043e\u0434\u0437\u0435\u043c\u043d\u044b\u0445 \u0432\u043e\u0434 \u0438 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442 \u0441\u0440\u043e\u043a \u0441\u043b\u0443\u0436\u0431\u044b \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430. \u042d\u0442\u043e \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432\u0430\u0436\u043d\u043e \u0432 \u0440\u0430\u0439\u043e\u043d\u0430\u0445 \u0441 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u0438\u043b\u0438 \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u0430\u0433\u0440\u0435\u0441\u0441\u0438\u0432\u043d\u043e\u0439 \u0441\u0440\u0435\u0434\u044b, \u0433\u0434\u0435 \u0432\u043b\u0430\u0433\u0430 \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u0438 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b \u0438 \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044e \u0431\u0435\u0442\u043e\u043d\u0430. \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u043f\u0440\u043e\u0431\u043b\u0435\u043c, \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0445 \u0441 \u0432\u043b\u0430\u0436\u043d\u043e\u0441\u0442\u044c\u044e, \u0442\u0430\u043a\u0438\u0445 \u043a\u0430\u043a \u043f\u043b\u0435\u0441\u0435\u043d\u044c \u0438 \u0433\u0440\u0438\u0431\u043e\u043a.', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0434\u043b\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u0444\u0443\u043d\u0434\u0430... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:03", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002A7C94CB920>, 'json_data': {'input': [[9906]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:03", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:05", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 16:05:05 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '87'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999999'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_060c8468bde3212a6c4355c45d838250'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=M5uZ3zOsbgUrEVmsgDXks.PgNkVWoRyY2qF_0xDaxs0-1732723505-1.0.1.1-HNeBauzjvyhOQh_9rxRaFp1ANbSlOy1s8qzbbD... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:05", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_060c8468bde3212a6c4355c45d838250", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:05", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:05", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002A7C7CA4D60>, 'json_data': {'input': [[9906]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:05", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:05:06 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '40', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999999', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_2773c63eafed338c93cbb2c712a0a476', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e935b937aed2df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_2773c63eafed338c93cbb2c712a0a476", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002A7C7CA4D60>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 1644]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:05:06 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '77', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_4921ae226dd8a01a0b3e693424a4491d', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e935b98dda32df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_4921ae226dd8a01a0b3e693424a4491d", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002A7C7CA4D60>, 'json_data': {'input': [[39091, 31274, 20807, 31274, 19871, 35095, 56191, 34604, 19871, 35095, 16604, 20976, 28599, 35095, 34604, 20976, 31274, 35095, 56191, 65014, 140, 105, 19871, 35095, 16604, 37255, 720, 31274, 1301, 244, 31274, 65014, 31274, 140, 102, 20807, 20976, 12, 27435, 20976, 39091, 39091, 41682, 20807, 37255, 65014, 140, 105, 20807, 20976, 38214, 20976, 1301, 98, 20976, 36551, 86491, 140, 247, 19871, 35095, 16604, 37255, 2355, 34604, 20976, 19871, 19871, 31274, 140, 247, 19871, 27435, 20976, 140, 247, 67891, 56191, 25079, 56191, 34604, 37255, 93899, 31274, 31274, 33006, 720, 19871, 16604, 20976, 25079, 23227, 34604, 37255, 16604, 31274, 65014, 2355, 33006, 33006, 49526, 33006, 19871, 17279, 220, 220, 17824, 13, 9413, 18216, 15, 13, 2366, 16, 33006, 33006, 33006, 33006, 31274, 20807, 140, 244, 56191, 20807, 56191, 34604,... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:05:07 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '159', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999790', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '2ms', 'x-request-id': 'req_13394843b2df64cd9d522787f4754acf', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e935b9b1ee82df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_13394843b2df64cd9d522787f4754acf", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002A7C7CA4D60>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 22]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:08", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:05:08 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '164', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_44d0b53de915b12712336492ee564b09', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e935ba1ba3d2df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:08", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_44d0b53de915b12712336492ee564b09", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:08", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002A7C7CA4D60>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 1958]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:08", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:08", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:05:08 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '66', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_cb3cc01b57c48e324c26c486783dd62d', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e935ba71ca52df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:08", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_cb3cc01b57c48e324c26c486783dd62d", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:08", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"You are a project assistant from the consultant side on design and construction projects. If you don't know the answer, say that you don't know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 19:05:08. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u041f 29.13330.2011 \\n \\n33\\n\\n\u041c\u0418\u041d\u0418\u0421\u0422\u0415\u0420\u0421\u0422\u0412\u041e \u0421\u0422\u0420\u041e\u0418\u0422\u0415\u041b\u042c\u0421\u0422\u0412\u0410 \\n\u0418 \u0416\u0418\u041b\u0418\u0429\u041d\u041e-\u041a\u041e\u041c\u041c\u0423\u041d\u0410\u041b\u042c\u041d\u041e\u0413\u041e \u0425\u041e\u0417\u042f\u0419\u0421\u0422\u0412\u0410  \\n\u0420\u041e\u0421\u0421\u0418\u0419\u0421\u041a\u041e\u0419 \u0424\u0415\u0414\u0415\u0420\u0410\u0426\u0418\u0418 \\n \\n \\n\u0421\u0412\u041e\u0414 \u041f\u0420\u0410\u0412\u0418\u041b  \\n \\n \\n \\n \\n \\n  \\n \\n \\n\u0421\u041f  502.1325800.2021 \\n \\n \\n \\n \\n \\n \\n \\n\u0418\u041d\u0416\u0415\u041d\u0415\u0420\u041d\u041e... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:08", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:10", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 16:05:10 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '499'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '798438'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '117ms'), ('x-request-id', 'req_bdac7f1bbc6c1505ae4c5a42fc50b85c'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=c9eOZPTayzKOWeejunoURnp1PanQ3dYEzHwE5TuJA2k-1732723510-1.0.1.1-V8dIzuvCWt_Cl0Mp.Uen_ApSIozid6NM2.bqNDrvQSqAsL5Pn4GZpDBIN9XqBUlu47uJlqqsXF.1q16hldUghg; path=/; expires=Wed, 27-... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:10", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_bdac7f1bbc6c1505ae4c5a42fc50b85c", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:10", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:10", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('Hello! How can I assist you today?\\n\\n------------------\\nReferences:\\n\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf, pages: 10, 36, 37\\n\u0418\u043d\u0436\u0435\u043d\u0435\u0440\u043d\u043e \u044d\u043a\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0437\u044b\u0441\u043a\u0430\u043d\u0438\u044f_\u0421\u041f 502.1325800.2021.pdf, pages: 0\\n', {'\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf', '\u0418\u043d\u0436\u0435\u043d\u0435\u0440\u043d\u043e \u044d\u043a\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0437\u044b\u0441\u043a\u0430\u043d\u0438\u044f_\u0421\u041f 502.1325800.2021.pdf'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:10", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:11", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:11", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='8304e161-185d-49b9-9016-188cd920bc11'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:11", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:33", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:34", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:34", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:34", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:34", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x000002A7A3D8B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 5, 33, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2439, supergroup_chat_created=False, text='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), update_id=881193603), <telegram.ext._callbackcontext.CallbackContext object at 0x000002A7C93BB620>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:34", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x000002A7C9498B30>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:34", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='87f6131b-aed0-4e89-83ac-8f85f6290411' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:34", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='87f6131b-aed0-4e89-83ac-8f85f6290411'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:34", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:34", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x000002A7C9483E00>, '\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), kwargs: {'chat_history': [HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), HumanMessage(content='Hello', additional_kwargs={}, response_metadata={}), AIMessage(content='Hello! How can I assist you today?\\n\\n------------------\\nReferences:\\n\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf, pages: 10, 36, 37\\n\u0418\u043d\u0436\u0435\u043d\u0435\u0440\u043d\u043e \u044d\u043a\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0437\u044b\u0441\u043a\u0430\u043d\u0438\u044f_\u0421\u041f 502.1325800.2021.pdf, pages: 0', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0434\u043b\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e \u043e\u0442 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u0435 \u043f\u043e\u0434\u0437\u0435\u043c\u043d\u044b\u0445 \u0432\u043e\u0434 \u0438 \u0443\u0432\u0435\u043b\u0438\u0447\u0438\u0432\u0430\u0435\u0442 \u0441\u0440\u043e\u043a \u0441\u043b\u0443\u0436\u0431\u044b \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430. \u042d\u0442\u043e \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432\u0430\u0436\u043d\u043e \u0432 \u0440\u0430\u0439\u043e\u043d\u0430\u0445 \u0441 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u0438\u043b\u0438 \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u0430\u0433\u0440\u0435\u0441\u0441\u0438\u0432\u043d\u043e\u0439 \u0441\u0440\u0435\u0434\u044b, \u0433\u0434\u0435 \u0432\u043b\u0430\u0433\u0430 ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002A7C7C8C5E0>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:35", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:05:35 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '129', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999983', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_a15c83b4c6e8f47d06b93023128719d6', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e935c47ec759185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:35", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_a15c83b4c6e8f47d06b93023128719d6", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:35", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:35", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002A7C7CA4C20>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:35", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:35", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:05:35 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '69', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999982', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_b5e47f2b6dd47d1b2ee7ab4aead04143', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e935c4e7dbb9185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:35", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_b5e47f2b6dd47d1b2ee7ab4aead04143", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:35", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002A7C7CA4C20>, 'json_data': {'input': [[74598, 96256, 1506, 220, 4364, 23934, 220, 14815, 33006, 868, 13, 21, 23784, 11047, 12507, 90226, 1506, 1532, 11, 47353, 40842, 9136, 10298, 44858, 17756, 1506, 35592, 34943, 9239, 56999, 18999, 30392, 1482, 97334, 5927, 7820, 13337, 3114, 6856, 7486, 1532, 40842, 44946, 14476, 9542, 16742, 720, 1, 6735, 79686, 5927, 25756, 20346, 2156, 51627, 1, 46177, 8379, 15752, 11001, 114, 7094, 18999, 23934, 25756, 20346, 2156, 25657, 10589, 10298, 19190, 44786, 45916, 19039, 11, 21022, 19175, 2297, 43293, 44938, 7820, 17721, 13433, 2297, 34943, 9239, 56999, 18999, 68088, 720, 13810, 8164, 4655, 1830, 35667, 18482, 6850, 7753, 18226, 2156, 50619, 44065, 81376, 23680, 17165, 11, 25756, 48262, 2233, 1482, 41873, 96485, 15458, 17766, 34613, 7820, 6856, 7753, 23934, 12, 8164, 9706, 40842, 1482, 12426, 5591, 4655, 18034, 35... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:35", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:36", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:05:36 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '91', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998465', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '18ms', 'x-request-id': 'req_56f650b4f97aedf9197367cccd88d406', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e935c50ee699185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:36", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_56f650b4f97aedf9197367cccd88d406", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:36", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002A7C7CA4C20>, 'json_data': {'input': [[74598, 96256, 1506, 220, 7994, 23934, 220, 14815, 33006, 49899, 17766, 67124, 2233, 17766, 1840, 10589, 32062, 85864, 13, 23784, 12561, 13337, 28089, 94962, 90226, 1506, 1532, 93129, 73181, 12561, 16494, 5372, 94975, 12561, 35111, 5372, 34613, 7952, 2233, 5372, 38657, 13, 720, 868, 13, 1032, 23784, 330, 10693, 7975, 9706, 44786, 1, 55617, 94538, 10693, 18034, 35297, 7094, 24697, 19190, 39988, 5173, 3114, 9542, 4655, 11, 21022, 50945, 59138, 13373, 14257, 6148, 84350, 53671, 22918, 1532, 5524, 29256, 2233, 4329, 17394, 18999, 34943, 330, 6735, 5372, 16742, 720, 5591, 25756, 20346, 2156, 51627, 1, 46177, 13373, 20346, 17394, 39988, 18868, 5372, 16742, 34943, 9239, 56999, 18999, 19175, 89159, 1482, 14257, 52037, 18226, 11320, 5591, 18482, 84714, 1532, 15458, 39127, 44065, 720, 15752, 48262, 2233, 1482, 12426, 8... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:36", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:37", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:05:37 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '205', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998826', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '14ms', 'x-request-id': 'req_e9e7835aa1b19ab961301b99adcab21f', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e935c57afc09185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:37", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_e9e7835aa1b19ab961301b99adcab21f", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:37", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002A7C7CA4C20>, 'json_data': {'input': [[74598, 96256, 1506, 220, 2287, 23934, 220, 14815, 33006, 806, 13, 2983, 23227, 31203, 86291, 36750, 84198, 18034, 35297, 7094, 24697, 19190, 6856, 7740, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 19175, 89159, 1482, 78085, 2233, 7975, 59921, 18482, 720, 15752, 3114, 64569, 19479, 3865, 7740, 10693, 11122, 16331, 21956, 18999, 11, 100147, 4655, 7740, 78876, 8164, 7975, 21956, 17618, 5927, 5173, 3114, 7486, 1532, 11, 14257, 77911, 20812, 1482, 20879, 49284, 6735, 44938, 7740, 6850, 1840, 12426, 11, 99396, 17618, 720, 15752, 48262, 2233, 1482, 41873, 96485, 57186, 7740, 7820, 50223, 52744, 12561, 16494, 5372, 5372, 44786, 96573, 7753, 1840, 16331, 6856, 7740, 38098, 79370, 15458, 12415, 13, 35889, 1506, 14257, 77911, 20812, 1482, 320, 8164, 9706, 15752, 13337, 6856, 36352, 8, 720, 23630, 47805, 39280... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:37", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:38", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:05:38 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '167', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '12ms', 'x-request-id': 'req_431736237edd6fa3dfcc15c2606cba30', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e935c5d18c79185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:38", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_431736237edd6fa3dfcc15c2606cba30", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:38", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002A7C7CA4C20>, 'json_data': {'input': [[806, 33006, 20, 13, 23, 13, 16, 13, 17, 23227, 15088, 39103, 23311, 4329, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 320, 4898, 7486, 16331, 6856, 11, 51548, 9706, 10589, 33742, 11, 18868, 38438, 44786, 18600, 32985, 7753, 5591, 3865, 17721, 6856, 8, 720, 7094, 48181, 12648, 48835, 8341, 4929, 25756, 48262, 2233, 1482, 41873, 96485, 15458, 12182, 20440, 57925, 13337, 5591, 52866, 18999, 5173, 29256, 23680, 39280, 5927, 9706, 4655, 5927, 2156, 38521, 2233, 4929, 720, 2297, 1482, 9239, 56999, 62491, 13, 720, 20, 13, 23, 13, 16, 13, 18, 39903, 14009, 14257, 77911, 94071, 5927, 3114, 34493, 1482, 41873, 96485, 57186, 46177, 25756, 48262, 2233, 1482, 41873, 96485, 57186, 12561, 16494, 5372, 4329, 70129, 18600, 3865, 3114, 17766, 44065, 720, 4898, 24803, 26503, 44065, 7740, 25756, 48262, 2233, 1482, 418... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:38", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:39", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:05:39 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '148', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998401', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '19ms', 'x-request-id': 'req_f40b534de5d51cbdad43b4ec81d90992', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e935c63aa119185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:39", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_f40b534de5d51cbdad43b4ec81d90992", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:39", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 19:05:39. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 120 \u0438\u0437 239 \\n \\n15.6 \u0412 \u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u0435\u0441\u043b\u0438 \u043f\u043e\u0434\u0437\u0435\u043c\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u0438\u0442\u0441\u044f \u0432 \u043a\u043e\u0442\u043b\u043e\u0432\u0430\u043d\u0435 \u043f\u043e\u0434 \u0437\u0430\u0449\u0438\u0442\u043e\u0439 \\n\"\u0441\u0442\u0435\u043d\u044b \u0432 \u0433\u0440\u0443\u043d\u0442\u0435\" \u0438\u043b\u0438 \u043e\u0433\u0440\u0430\u0436\u0434\u0435\u043d\u0438\u044f \u0438\u0437 \u0433\u0440\u0443\u043d\u0442\u043e\u0446\u0435\u043c\u0435\u043d\u0442\u043d\u044b\u0445 \u0441\u0432\u0430\u0439, \u0430 \u043d\u0435\u0441\u0443\u0449\u0438\u0439 \u043a\u0430\u0440\u043a\u0430\u0441 \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \\n\u0438\u0441\u043f\u044b\u0442\u044b\u0432\u0430\u0442\u044c... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:39", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:05:44 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '3940', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '793440', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '491ms', 'x-request-id': 'req_6c11dc4581914d9121d35addbb36b6ad', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e935c696b812dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_6c11dc4581914d9121d35addbb36b6ad", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:44", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:44", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0434\u043b\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u0447\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u0438 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b, \u0440\u0430\u0437\u0440\u0443\u0448\u0435\u043d\u0438\u044e \u0431\u0435\u0442\u043e\u043d\u0430 \u0438 \u0434\u0440\u0443\u0433\u0438\u043c \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044f\u043c. \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0442\u0438\u0442\u044c \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043b\u0435\u0441\u0435\u043d\u0438 \u0438 \u0433\u0440\u0438\u0431\u043a\u0430, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0441\u043f\u043e\u0441\u043e\u0431\u0441\u0442\u0432\u0443\u0435\u0442 \u0443\u0432\u0435\u043b\u0438\u0447\u0435\u043d\u0438\u044e \u0441\u0440\u043e\u043a\u0430 \u0441\u043b\u0443\u0436\u0431\u044b \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430. \u042d\u0442\u043e \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432\u0430\u0436\u043d\u043e \u0432 \u0440\u0430\u0439\u043e\u043d\u0430\u0445 \u0441 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u0438\u043b\u0438 \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u0430\u0433\u0440\u0435\u0441\u0441\u0438\u0432\u043d\u043e\u0439 \u0441\u0440\u0435\u0434\u044b.\\n\\n------------------\\nReferences:\\n\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf, pages: 65, 119, 120\\n\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0435 \u0414\u043e\u043c\u0430_\u0421\u041f 31-105-2002 .pdf, pages: 10\\n', {'\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0435 \u0414\u043e\u043c\u0430_\u0421\u041f 31-105-2002 .pdf', '\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:44", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:45", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:45", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='87f6131b-aed0-4e89-83ac-8f85f6290411'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:05:45", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:15", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 19:12:16", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 19:12:16", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 19:12:17", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 19:12:23", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:23", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:23", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:24", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:24", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:24", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:24", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:24", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: ru", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:24", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:24", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:24", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x000002490AA3B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 12, 23, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2441, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193604), <telegram.ext._callbackcontext.CallbackContext object at 0x000002493007EE40>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:24", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x000002490CF30CA0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:25", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:25", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:26", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:27", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:27", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:27", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:27", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x000002490AA3B7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), id='1051116658126769553', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 12, 25, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2442, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations')... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:27", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x000002492ED6F8A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:27", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:27", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:27", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x000002492FF1DD00>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:27", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:27", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x000002492FF1DD00>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:27", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:27", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:27", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:27", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:27", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:27", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:27", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:27", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:28", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:42", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:43", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:43", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:43", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:43", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x000002490AA3B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 12, 42, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2444, supergroup_chat_created=False, text='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), update_id=881193606), <telegram.ext._callbackcontext.CallbackContext object at 0x000002493007EE40>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:43", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x00000249301B89A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:43", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='2db21885-5c8f-44c0-af15-6c67d55e7307' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:43", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='2db21885-5c8f-44c0-af15-6c67d55e7307'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:43", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:43", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x000002492FF1DD00>, '\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), kwargs: {'chat_history': [HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0434\u043b\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u0447\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u0438 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b, \u0440\u0430\u0437\u0440\u0443\u0448\u0435\u043d\u0438\u044e \u0431\u0435\u0442\u043e\u043d\u0430 \u0438 \u0434\u0440\u0443\u0433\u0438\u043c \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044f\u043c. \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0442\u0438\u0442\u044c \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043b\u0435\u0441\u0435\u043d\u0438 \u0438 \u0433\u0440\u0438\u0431\u043a\u0430, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0441\u043f\u043e\u0441\u043e\u0431\u0441\u0442\u0432\u0443\u0435\u0442 \u0443\u0432\u0435\u043b\u0438\u0447\u0435\u043d\u0438\u044e \u0441\u0440\u043e\u043a\u0430 \u0441\u043b\u0443\u0436\u0431\u044b \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430. \u042d\u0442\u043e \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432\u0430\u0436\u043d\u043e \u0432 \u0440\u0430\u0439\u043e\u043d\u0430\u0445 \u0441 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u0443\u0440\u043e\u0432\u043d\u0435\u043c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u0438\u043b\u0438 \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u0430\u0433\u0440\u0435\u0441\u0441\u0438\u0432\u043d\u043e\u0439 \u0441\u0440\u0435\u0434\u044b.\\n\\n------------------\\nReferences:\\n\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf, pages: 65, 119, 120\\n\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0435 \u0414\u043e\u043c\u0430_\u0421\u041f 31-105-2002 .pdf, pages: 10', additional_kwargs={}, response_metadata={}), HumanMessage(content='Hell... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:43", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000249301B3EC0>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:43", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 16:12:43 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '81'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999982'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_9ffbfbec2ccd9745a00eaedff3f9e629'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=zREseg9iGlpzhIwWNlbzSVnrF_7Vl0_C3LYfYQynq2I-1732723963-1.0.1.1-_zuaaPBWh9tBETCfb3kwhHoJvPdoHYu_TxNUDr... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_9ffbfbec2ccd9745a00eaedff3f9e629", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:44", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002492E964E00>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:12:44 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '121', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999983', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_e33993265ec84ab50c04da04e4ca66a8', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9366c6efc05e9a-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_e33993265ec84ab50c04da04e4ca66a8", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002492E964E00>, 'json_data': {'input': [[74598, 96256, 1506, 220, 4364, 23934, 220, 14815, 33006, 868, 13, 21, 23784, 11047, 12507, 90226, 1506, 1532, 11, 47353, 40842, 9136, 10298, 44858, 17756, 1506, 35592, 34943, 9239, 56999, 18999, 30392, 1482, 97334, 5927, 7820, 13337, 3114, 6856, 7486, 1532, 40842, 44946, 14476, 9542, 16742, 720, 1, 6735, 79686, 5927, 25756, 20346, 2156, 51627, 1, 46177, 8379, 15752, 11001, 114, 7094, 18999, 23934, 25756, 20346, 2156, 25657, 10589, 10298, 19190, 44786, 45916, 19039, 11, 21022, 19175, 2297, 43293, 44938, 7820, 17721, 13433, 2297, 34943, 9239, 56999, 18999, 68088, 720, 13810, 8164, 4655, 1830, 35667, 18482, 6850, 7753, 18226, 2156, 50619, 44065, 81376, 23680, 17165, 11, 25756, 48262, 2233, 1482, 41873, 96485, 15458, 17766, 34613, 7820, 6856, 7753, 23934, 12, 8164, 9706, 40842, 1482, 12426, 5591, 4655, 18034, 35... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:12:45 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '105', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998465', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '18ms', 'x-request-id': 'req_f8899edd14148009530ed983e5cf755f', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9366cc0b825e9a-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_f8899edd14148009530ed983e5cf755f", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002492E964E00>, 'json_data': {'input': [[74598, 96256, 1506, 220, 7994, 23934, 220, 14815, 33006, 49899, 17766, 67124, 2233, 17766, 1840, 10589, 32062, 85864, 13, 23784, 12561, 13337, 28089, 94962, 90226, 1506, 1532, 93129, 73181, 12561, 16494, 5372, 94975, 12561, 35111, 5372, 34613, 7952, 2233, 5372, 38657, 13, 720, 868, 13, 1032, 23784, 330, 10693, 7975, 9706, 44786, 1, 55617, 94538, 10693, 18034, 35297, 7094, 24697, 19190, 39988, 5173, 3114, 9542, 4655, 11, 21022, 50945, 59138, 13373, 14257, 6148, 84350, 53671, 22918, 1532, 5524, 29256, 2233, 4329, 17394, 18999, 34943, 330, 6735, 5372, 16742, 720, 5591, 25756, 20346, 2156, 51627, 1, 46177, 13373, 20346, 17394, 39988, 18868, 5372, 16742, 34943, 9239, 56999, 18999, 19175, 89159, 1482, 14257, 52037, 18226, 11320, 5591, 18482, 84714, 1532, 15458, 39127, 44065, 720, 15752, 48262, 2233, 1482, 12426, 8... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:45", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:12:45 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '395', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998825', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '14ms', 'x-request-id': 'req_c483f4849a2d420632ca52d0108b0099', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9366ce6d685e9a-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_c483f4849a2d420632ca52d0108b0099", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002492E964E00>, 'json_data': {'input': [[74598, 96256, 1506, 220, 2287, 23934, 220, 14815, 33006, 806, 13, 2983, 23227, 31203, 86291, 36750, 84198, 18034, 35297, 7094, 24697, 19190, 6856, 7740, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 19175, 89159, 1482, 78085, 2233, 7975, 59921, 18482, 720, 15752, 3114, 64569, 19479, 3865, 7740, 10693, 11122, 16331, 21956, 18999, 11, 100147, 4655, 7740, 78876, 8164, 7975, 21956, 17618, 5927, 5173, 3114, 7486, 1532, 11, 14257, 77911, 20812, 1482, 20879, 49284, 6735, 44938, 7740, 6850, 1840, 12426, 11, 99396, 17618, 720, 15752, 48262, 2233, 1482, 41873, 96485, 57186, 7740, 7820, 50223, 52744, 12561, 16494, 5372, 5372, 44786, 96573, 7753, 1840, 16331, 6856, 7740, 38098, 79370, 15458, 12415, 13, 35889, 1506, 14257, 77911, 20812, 1482, 320, 8164, 9706, 15752, 13337, 6856, 36352, 8, 720, 23630, 47805, 39280... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:12:46 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '115', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '12ms', 'x-request-id': 'req_a51e4e5fc2ae2f0c8d527640e1255af7', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9366d2e9e25e9a-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_a51e4e5fc2ae2f0c8d527640e1255af7", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002492E964E00>, 'json_data': {'input': [[806, 33006, 20, 13, 23, 13, 16, 13, 17, 23227, 15088, 39103, 23311, 4329, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 320, 4898, 7486, 16331, 6856, 11, 51548, 9706, 10589, 33742, 11, 18868, 38438, 44786, 18600, 32985, 7753, 5591, 3865, 17721, 6856, 8, 720, 7094, 48181, 12648, 48835, 8341, 4929, 25756, 48262, 2233, 1482, 41873, 96485, 15458, 12182, 20440, 57925, 13337, 5591, 52866, 18999, 5173, 29256, 23680, 39280, 5927, 9706, 4655, 5927, 2156, 38521, 2233, 4929, 720, 2297, 1482, 9239, 56999, 62491, 13, 720, 20, 13, 23, 13, 16, 13, 18, 39903, 14009, 14257, 77911, 94071, 5927, 3114, 34493, 1482, 41873, 96485, 57186, 46177, 25756, 48262, 2233, 1482, 41873, 96485, 57186, 12561, 16494, 5372, 4329, 70129, 18600, 3865, 3114, 17766, 44065, 720, 4898, 24803, 26503, 44065, 7740, 25756, 48262, 2233, 1482, 418... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:46", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:12:46 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '106', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998401', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '19ms', 'x-request-id': 'req_e22b23ef4db12bec350dd445fe3454bf', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9366d60c7b5e9a-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_e22b23ef4db12bec350dd445fe3454bf", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 19:12:47. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 120 \u0438\u0437 239 \\n \\n15.6 \u0412 \u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u0435\u0441\u043b\u0438 \u043f\u043e\u0434\u0437\u0435\u043c\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u0438\u0442\u0441\u044f \u0432 \u043a\u043e\u0442\u043b\u043e\u0432\u0430\u043d\u0435 \u043f\u043e\u0434 \u0437\u0430\u0449\u0438\u0442\u043e\u0439 \\n\"\u0441\u0442\u0435\u043d\u044b \u0432 \u0433\u0440\u0443\u043d\u0442\u0435\" \u0438\u043b\u0438 \u043e\u0433\u0440\u0430\u0436\u0434\u0435\u043d\u0438\u044f \u0438\u0437 \u0433\u0440\u0443\u043d\u0442\u043e\u0446\u0435\u043c\u0435\u043d\u0442\u043d\u044b\u0445 \u0441\u0432\u0430\u0439, \u0430 \u043d\u0435\u0441\u0443\u0449\u0438\u0439 \u043a\u0430\u0440\u043a\u0430\u0441 \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \\n\u0438\u0441\u043f\u044b\u0442\u044b\u0432\u0430\u0442\u044c... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 16:12:54 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '6897'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '793751'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '468ms'), ('x-request-id', 'req_cd8b8c12ed013f0f0b4260f809624e9d'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=guCctMdw2maJWatNnaZBOar4.HmT9iuy4YvHigOPmuo-1732723974-1.0.1.1-s5MBsrnOiuuVn7kyUe.O_oNXjA28CFWgk.nmDvQ0TpZv37n29WKbQHTS4axPfDlrRzfe_4mpowblXFYWZFJFhw; path=/; expires=Wed, 27... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_cd8b8c12ed013f0f0b4260f809624e9d", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:54", "name": "llm_service", "levelname": "ERROR", "message": "Error in is_prompt_relevant_to_documents: not enough values to unpack (expected 2, got 1)", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\llm_service.py\", line 317, in is_prompt_relevant_to_documents\n    max_similarity = max([similarity for _, similarity in relevance_scores], default=0.0)\n                                         ^^^^^^^^^^^^^\nValueError: not enough values to unpack (expected 2, got 1)", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:54", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity threshold not met. Returning answer without references.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:54", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0434\u043b\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u0437\u0434\u0430\u043d\u0438\u0435 \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u0447\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438, \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u0438 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b \u0438 \u043f\u043e\u044f\u0432\u043b\u0435\u043d\u0438\u044e \u043f\u043b\u0435\u0441\u0435\u043d\u0438. \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u043f\u0440\u043e\u0434\u043b\u0438\u0442\u044c \u0441\u0440\u043e\u043a \u0441\u043b\u0443\u0436\u0431\u044b \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0435\u0433\u043e \u043f\u0440\u043e\u0447\u043d\u043e\u0441\u0442\u044c, \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u0432\u044b\u0441\u043e\u043a\u043e\u0433\u043e \u0443\u0440\u043e\u0432\u043d\u044f \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u0438\u043b\u0438 \u0430\u0433\u0440\u0435\u0441\u0441\u0438\u0432\u043d\u043e\u0439 \u0441\u0440\u0435\u0434\u044b.', None)", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:54", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:55", "name": "handlers", "levelname": "INFO", "message": "Sent response to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:55", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='2db21885-5c8f-44c0-af15-6c67d55e7307'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:12:55", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:14:54", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 19:14:55", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 19:14:56", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 19:14:56", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 19:15:09", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:09", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:09", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:10", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:10", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:10", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:10", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:10", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: ru", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:10", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:10", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:10", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x000002A37658B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 15, 8, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2446, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193607), <telegram.ext._callbackcontext.CallbackContext object at 0x000002A31BC3CDE0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:10", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x000002A3789F0CA0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:11", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:11", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:13", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:13", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:13", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:13", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:13", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x000002A37658B7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), id='1051116660600026541', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 15, 10, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2447, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations')... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:13", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x000002A31B8FF8A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:13", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:13", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:13", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x000002A31BD051C0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:13", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:13", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x000002A31BD051C0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:13", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:13", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:13", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:13", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:13", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:13", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:13", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:14", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:14", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:19", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:19", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:19", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:19", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:19", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x000002A37658B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 15, 19, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2449, supergroup_chat_created=False, text='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), update_id=881193609), <telegram.ext._callbackcontext.CallbackContext object at 0x000002A31BC3D470>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:19", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x000002A31BCF89A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:19", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='44818c16-92db-44fa-98bf-6edc42771787' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:20", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='44818c16-92db-44fa-98bf-6edc42771787'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:20", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:20", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x000002A31BD051C0>, '\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), kwargs: {'chat_history': [HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0434\u043b\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u0437\u0434\u0430\u043d\u0438\u0435 \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u0447\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438, \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u0438 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b \u0438 \u043f\u043e\u044f\u0432\u043b\u0435\u043d\u0438\u044e \u043f\u043b\u0435\u0441\u0435\u043d\u0438. \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u043f\u0440\u043e\u0434\u043b\u0438\u0442\u044c \u0441\u0440\u043e\u043a \u0441\u043b\u0443\u0436\u0431\u044b \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430 \u0438 \u0441\u043e\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0435\u0433\u043e \u043f\u0440\u043e\u0447\u043d\u043e\u0441\u0442\u044c, \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u0432\u044b\u0441\u043e\u043a\u043e\u0433\u043e \u0443\u0440\u043e\u0432\u043d\u044f \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u0438\u043b\u0438 \u0430\u0433\u0440\u0435\u0441\u0441\u0438\u0432\u043d\u043e\u0439 \u0441\u0440\u0435\u0434\u044b.', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0434\u043b\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u0447\u0442\u043e \u043c\u043e\u0436\u0435\u0442... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002A31BD2FA60>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 16:15:20 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '48'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999982'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_2a65fdeaa5551cb07b08e4885e1fb2f1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=0zjF5GblozWUVt5L0Xq2.l8YOdEMKuNuPpe7Nv6s8cQ-1732724120-1.0.1.1-oOIL5EGP9Sm9y1L7rzoiGlDe6q_W6n3oPRPz9O... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_2a65fdeaa5551cb07b08e4885e1fb2f1", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:20", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002A31A530E00>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:15:20 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '41', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999983', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_91ee647fbe14c88d8d22d39b7718f7b9', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e936a99397dee12-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_91ee647fbe14c88d8d22d39b7718f7b9", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002A31A530E00>, 'json_data': {'input': [[74598, 96256, 1506, 220, 4364, 23934, 220, 14815, 33006, 868, 13, 21, 23784, 11047, 12507, 90226, 1506, 1532, 11, 47353, 40842, 9136, 10298, 44858, 17756, 1506, 35592, 34943, 9239, 56999, 18999, 30392, 1482, 97334, 5927, 7820, 13337, 3114, 6856, 7486, 1532, 40842, 44946, 14476, 9542, 16742, 720, 1, 6735, 79686, 5927, 25756, 20346, 2156, 51627, 1, 46177, 8379, 15752, 11001, 114, 7094, 18999, 23934, 25756, 20346, 2156, 25657, 10589, 10298, 19190, 44786, 45916, 19039, 11, 21022, 19175, 2297, 43293, 44938, 7820, 17721, 13433, 2297, 34943, 9239, 56999, 18999, 68088, 720, 13810, 8164, 4655, 1830, 35667, 18482, 6850, 7753, 18226, 2156, 50619, 44065, 81376, 23680, 17165, 11, 25756, 48262, 2233, 1482, 41873, 96485, 15458, 17766, 34613, 7820, 6856, 7753, 23934, 12, 8164, 9706, 40842, 1482, 12426, 5591, 4655, 18034, 35... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:15:21 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '196', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998465', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '18ms', 'x-request-id': 'req_bb1eff32c27084bc901d6456c76a7a81', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e936a9b6dfaee12-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_bb1eff32c27084bc901d6456c76a7a81", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002A31A530E00>, 'json_data': {'input': [[74598, 96256, 1506, 220, 7994, 23934, 220, 14815, 33006, 49899, 17766, 67124, 2233, 17766, 1840, 10589, 32062, 85864, 13, 23784, 12561, 13337, 28089, 94962, 90226, 1506, 1532, 93129, 73181, 12561, 16494, 5372, 94975, 12561, 35111, 5372, 34613, 7952, 2233, 5372, 38657, 13, 720, 868, 13, 1032, 23784, 330, 10693, 7975, 9706, 44786, 1, 55617, 94538, 10693, 18034, 35297, 7094, 24697, 19190, 39988, 5173, 3114, 9542, 4655, 11, 21022, 50945, 59138, 13373, 14257, 6148, 84350, 53671, 22918, 1532, 5524, 29256, 2233, 4329, 17394, 18999, 34943, 330, 6735, 5372, 16742, 720, 5591, 25756, 20346, 2156, 51627, 1, 46177, 13373, 20346, 17394, 39988, 18868, 5372, 16742, 34943, 9239, 56999, 18999, 19175, 89159, 1482, 14257, 52037, 18226, 11320, 5591, 18482, 84714, 1532, 15458, 39127, 44065, 720, 15752, 48262, 2233, 1482, 12426, 8... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:22", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:15:21 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '70', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998826', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '14ms', 'x-request-id': 'req_2336e821808169a492203fc7f87920ce', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e936a9e4abaee12-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:22", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_2336e821808169a492203fc7f87920ce", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:22", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002A31A530E00>, 'json_data': {'input': [[74598, 96256, 1506, 220, 2287, 23934, 220, 14815, 33006, 806, 13, 2983, 23227, 31203, 86291, 36750, 84198, 18034, 35297, 7094, 24697, 19190, 6856, 7740, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 19175, 89159, 1482, 78085, 2233, 7975, 59921, 18482, 720, 15752, 3114, 64569, 19479, 3865, 7740, 10693, 11122, 16331, 21956, 18999, 11, 100147, 4655, 7740, 78876, 8164, 7975, 21956, 17618, 5927, 5173, 3114, 7486, 1532, 11, 14257, 77911, 20812, 1482, 20879, 49284, 6735, 44938, 7740, 6850, 1840, 12426, 11, 99396, 17618, 720, 15752, 48262, 2233, 1482, 41873, 96485, 57186, 7740, 7820, 50223, 52744, 12561, 16494, 5372, 5372, 44786, 96573, 7753, 1840, 16331, 6856, 7740, 38098, 79370, 15458, 12415, 13, 35889, 1506, 14257, 77911, 20812, 1482, 320, 8164, 9706, 15752, 13337, 6856, 36352, 8, 720, 23630, 47805, 39280... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:22", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:22", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:15:22 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '155', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '12ms', 'x-request-id': 'req_185925614d8e0a2beab7d3995c470cb4', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e936aa239e5ee12-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:22", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_185925614d8e0a2beab7d3995c470cb4", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:22", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002A31A530E00>, 'json_data': {'input': [[806, 33006, 20, 13, 23, 13, 16, 13, 17, 23227, 15088, 39103, 23311, 4329, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 320, 4898, 7486, 16331, 6856, 11, 51548, 9706, 10589, 33742, 11, 18868, 38438, 44786, 18600, 32985, 7753, 5591, 3865, 17721, 6856, 8, 720, 7094, 48181, 12648, 48835, 8341, 4929, 25756, 48262, 2233, 1482, 41873, 96485, 15458, 12182, 20440, 57925, 13337, 5591, 52866, 18999, 5173, 29256, 23680, 39280, 5927, 9706, 4655, 5927, 2156, 38521, 2233, 4929, 720, 2297, 1482, 9239, 56999, 62491, 13, 720, 20, 13, 23, 13, 16, 13, 18, 39903, 14009, 14257, 77911, 94071, 5927, 3114, 34493, 1482, 41873, 96485, 57186, 46177, 25756, 48262, 2233, 1482, 41873, 96485, 57186, 12561, 16494, 5372, 4329, 70129, 18600, 3865, 3114, 17766, 44065, 720, 4898, 24803, 26503, 44065, 7740, 25756, 48262, 2233, 1482, 418... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:22", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:24", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:15:23 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '152', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998401', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '19ms', 'x-request-id': 'req_d13793da6e12d76f49b83420d1e815da', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e936aa50ee1ee12-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:24", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_d13793da6e12d76f49b83420d1e815da", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:24", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 19:15:24. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 120 \u0438\u0437 239 \\n \\n15.6 \u0412 \u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u0435\u0441\u043b\u0438 \u043f\u043e\u0434\u0437\u0435\u043c\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u0438\u0442\u0441\u044f \u0432 \u043a\u043e\u0442\u043b\u043e\u0432\u0430\u043d\u0435 \u043f\u043e\u0434 \u0437\u0430\u0449\u0438\u0442\u043e\u0439 \\n\"\u0441\u0442\u0435\u043d\u044b \u0432 \u0433\u0440\u0443\u043d\u0442\u0435\" \u0438\u043b\u0438 \u043e\u0433\u0440\u0430\u0436\u0434\u0435\u043d\u0438\u044f \u0438\u0437 \u0433\u0440\u0443\u043d\u0442\u043e\u0446\u0435\u043c\u0435\u043d\u0442\u043d\u044b\u0445 \u0441\u0432\u0430\u0439, \u0430 \u043d\u0435\u0441\u0443\u0449\u0438\u0439 \u043a\u0430\u0440\u043a\u0430\u0441 \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \\n\u0438\u0441\u043f\u044b\u0442\u044b\u0432\u0430\u0442\u044c... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:24", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:30", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 16:15:29 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '5415'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '793815'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '463ms'), ('x-request-id', 'req_f9445ce980f4e85e1fc14e0ba54b9249'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=779bf.QNyujvunjjfa0hWE7Xjvo3g49i7wYNROHr0U8-1732724129-1.0.1.1-cqN7x3jzZrezC.XlMMdrXseu6Jh7ET4iFaVNcG4lcydCmdBZXTG3fXet5uS0lAzn8redP7_hw9NiysCGE26i.g; path=/; expires=Wed, 27... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:30", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_f9445ce980f4e85e1fc14e0ba54b9249", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:30", "name": "llm_service", "levelname": "ERROR", "message": "Error in is_prompt_relevant_to_documents: not enough values to unpack (expected 2, got 1)", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\llm_service.py\", line 317, in is_prompt_relevant_to_documents\n    max_similarity = max([similarity for _, similarity in relevance_scores], default=0.0)\n                                         ^^^^^^^^^^^^^\nValueError: not enough values to unpack (expected 2, got 1)", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:30", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity threshold not met. Returning answer without references.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:30", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0434\u043b\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442 \u043e\u0442 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0430\u044f \u0440\u0430\u0437\u0440\u0443\u0448\u0435\u043d\u0438\u0435 \u0431\u0435\u0442\u043e\u043d\u043d\u044b\u0445 \u0438 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u043d\u044b\u0445 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0439, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043b\u0435\u0441\u0435\u043d\u0438 \u0438 \u0433\u0440\u0438\u0431\u043a\u0430. \u042d\u0442\u0430 \u0437\u0430\u0449\u0438\u0442\u0430 \u0441\u043f\u043e\u0441\u043e\u0431\u0441\u0442\u0432\u0443\u0435\u0442 \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u0438 \u0438 \u043d\u0430\u0434\u0435\u0436\u043d\u043e\u0441\u0442\u0438 \u0432\u0441\u0435\u0439 \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438.', None)", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:30", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:30", "name": "handlers", "levelname": "INFO", "message": "Sent response to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:30", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='44818c16-92db-44fa-98bf-6edc42771787'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:15:30", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:18", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 19:25:19", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 19:25:20", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 19:25:20", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 19:25:31", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:31", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:31", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:32", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:32", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:32", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:32", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:32", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: ru", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:33", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:33", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:33", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x000001C1569FB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 25, 31, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2451, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193610), <telegram.ext._callbackcontext.CallbackContext object at 0x000001C17BF8CDE0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:33", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x000001C17BE47AC0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:33", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:33", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:35", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:35", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:35", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:35", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:35", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x000001C1569FB7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), id='1051116660962802550', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 25, 33, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2452, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations')... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:35", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x000001C17AC7F8A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:35", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:35", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:35", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x000001C17C084290>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:35", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:35", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x000001C17C084290>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:35", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:35", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:35", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:35", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:35", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:35", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:35", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:36", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:36", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:47", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:47", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:47", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:47", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:47", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x000001C1569FB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 25, 46, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2454, supergroup_chat_created=False, text='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), update_id=881193612), <telegram.ext._callbackcontext.CallbackContext object at 0x000001C17BF8D470>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:47", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x000001C17C0789A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:47", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='de340ada-0cca-4c2a-9fa8-61c66673e073' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:47", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='de340ada-0cca-4c2a-9fa8-61c66673e073'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:47", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:47", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x000001C17C084290>, '\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), kwargs: {'chat_history': [HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0434\u043b\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442 \u043e\u0442 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0430\u044f \u0440\u0430\u0437\u0440\u0443\u0448\u0435\u043d\u0438\u0435 \u0431\u0435\u0442\u043e\u043d\u043d\u044b\u0445 \u0438 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u043d\u044b\u0445 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0439, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043e\u0431\u0440\u0430\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u043b\u0435\u0441\u0435\u043d\u0438 \u0438 \u0433\u0440\u0438\u0431\u043a\u0430. \u042d\u0442\u0430 \u0437\u0430\u0449\u0438\u0442\u0430 \u0441\u043f\u043e\u0441\u043e\u0431\u0441\u0442\u0432\u0443\u0435\u0442 \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u0438 \u0438 \u043d\u0430\u0434\u0435\u0436\u043d\u043e\u0441\u0442\u0438 \u0432\u0441\u0435\u0439 \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438.', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0434\u043b\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u0437\u0434\u0430\u043d\u0438\u0435 \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u0447\u0442\u043e \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u0432\u0435\u0441\u0442\u0438 \u043a \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438, \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u0438 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b \u0438 \u043f\u043e\u044f\u0432\u043b\u0435\u043d\u0438... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001C17C0AF420>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:47", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 16:25:47 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '112'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999982'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_d98e30f400e1cd0d0e6c9f3a4117fe6b'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=CjvG7uuWYq4IrMdG0hpIbl9J9yxf6SgmTaoNf6jyH0c-1732724747-1.0.1.1-Qk.1DfY8FpOW6d3a6ele1xmKDgaMfllyWbzgH... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_d98e30f400e1cd0d0e6c9f3a4117fe6b", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:48", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001C17A884E00>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:25:48 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '112', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999982', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_827da840613a52fef0d9b8dc02a1fe7b', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9379eb09c54ad9-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_827da840613a52fef0d9b8dc02a1fe7b", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001C17A884E00>, 'json_data': {'input': [[74598, 96256, 1506, 220, 4364, 23934, 220, 14815, 33006, 868, 13, 21, 23784, 11047, 12507, 90226, 1506, 1532, 11, 47353, 40842, 9136, 10298, 44858, 17756, 1506, 35592, 34943, 9239, 56999, 18999, 30392, 1482, 97334, 5927, 7820, 13337, 3114, 6856, 7486, 1532, 40842, 44946, 14476, 9542, 16742, 720, 1, 6735, 79686, 5927, 25756, 20346, 2156, 51627, 1, 46177, 8379, 15752, 11001, 114, 7094, 18999, 23934, 25756, 20346, 2156, 25657, 10589, 10298, 19190, 44786, 45916, 19039, 11, 21022, 19175, 2297, 43293, 44938, 7820, 17721, 13433, 2297, 34943, 9239, 56999, 18999, 68088, 720, 13810, 8164, 4655, 1830, 35667, 18482, 6850, 7753, 18226, 2156, 50619, 44065, 81376, 23680, 17165, 11, 25756, 48262, 2233, 1482, 41873, 96485, 15458, 17766, 34613, 7820, 6856, 7753, 23934, 12, 8164, 9706, 40842, 1482, 12426, 5591, 4655, 18034, 35... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:48", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:25:48 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '360', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998465', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '18ms', 'x-request-id': 'req_c6a3e1e7a9746a6644c7c0b0ad878409', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9379ed6b604ad9-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_c6a3e1e7a9746a6644c7c0b0ad878409", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001C17A884E00>, 'json_data': {'input': [[74598, 96256, 1506, 220, 7994, 23934, 220, 14815, 33006, 49899, 17766, 67124, 2233, 17766, 1840, 10589, 32062, 85864, 13, 23784, 12561, 13337, 28089, 94962, 90226, 1506, 1532, 93129, 73181, 12561, 16494, 5372, 94975, 12561, 35111, 5372, 34613, 7952, 2233, 5372, 38657, 13, 720, 868, 13, 1032, 23784, 330, 10693, 7975, 9706, 44786, 1, 55617, 94538, 10693, 18034, 35297, 7094, 24697, 19190, 39988, 5173, 3114, 9542, 4655, 11, 21022, 50945, 59138, 13373, 14257, 6148, 84350, 53671, 22918, 1532, 5524, 29256, 2233, 4329, 17394, 18999, 34943, 330, 6735, 5372, 16742, 720, 5591, 25756, 20346, 2156, 51627, 1, 46177, 13373, 20346, 17394, 39988, 18868, 5372, 16742, 34943, 9239, 56999, 18999, 19175, 89159, 1482, 14257, 52037, 18226, 11320, 5591, 18482, 84714, 1532, 15458, 39127, 44065, 720, 15752, 48262, 2233, 1482, 12426, 8... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:25:49 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '134', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998825', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '14ms', 'x-request-id': 'req_01b81a56204fe2a12d085936edfae701', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9379f15d7d4ad9-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_01b81a56204fe2a12d085936edfae701", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001C17A884E00>, 'json_data': {'input': [[74598, 96256, 1506, 220, 2287, 23934, 220, 14815, 33006, 806, 13, 2983, 23227, 31203, 86291, 36750, 84198, 18034, 35297, 7094, 24697, 19190, 6856, 7740, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 19175, 89159, 1482, 78085, 2233, 7975, 59921, 18482, 720, 15752, 3114, 64569, 19479, 3865, 7740, 10693, 11122, 16331, 21956, 18999, 11, 100147, 4655, 7740, 78876, 8164, 7975, 21956, 17618, 5927, 5173, 3114, 7486, 1532, 11, 14257, 77911, 20812, 1482, 20879, 49284, 6735, 44938, 7740, 6850, 1840, 12426, 11, 99396, 17618, 720, 15752, 48262, 2233, 1482, 41873, 96485, 57186, 7740, 7820, 50223, 52744, 12561, 16494, 5372, 5372, 44786, 96573, 7753, 1840, 16331, 6856, 7740, 38098, 79370, 15458, 12415, 13, 35889, 1506, 14257, 77911, 20812, 1482, 320, 8164, 9706, 15752, 13337, 6856, 36352, 8, 720, 23630, 47805, 39280... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:25:49 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '138', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '12ms', 'x-request-id': 'req_3b6ec214077115c67b2177cc498fc039', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9379f3ff344ad9-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_3b6ec214077115c67b2177cc498fc039", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001C17A884E00>, 'json_data': {'input': [[806, 33006, 20, 13, 23, 13, 16, 13, 17, 23227, 15088, 39103, 23311, 4329, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 320, 4898, 7486, 16331, 6856, 11, 51548, 9706, 10589, 33742, 11, 18868, 38438, 44786, 18600, 32985, 7753, 5591, 3865, 17721, 6856, 8, 720, 7094, 48181, 12648, 48835, 8341, 4929, 25756, 48262, 2233, 1482, 41873, 96485, 15458, 12182, 20440, 57925, 13337, 5591, 52866, 18999, 5173, 29256, 23680, 39280, 5927, 9706, 4655, 5927, 2156, 38521, 2233, 4929, 720, 2297, 1482, 9239, 56999, 62491, 13, 720, 20, 13, 23, 13, 16, 13, 18, 39903, 14009, 14257, 77911, 94071, 5927, 3114, 34493, 1482, 41873, 96485, 57186, 46177, 25756, 48262, 2233, 1482, 41873, 96485, 57186, 12561, 16494, 5372, 4329, 70129, 18600, 3865, 3114, 17766, 44065, 720, 4898, 24803, 26503, 44065, 7740, 25756, 48262, 2233, 1482, 418... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:25:50 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '82', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998401', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '19ms', 'x-request-id': 'req_4839d4c5d1654e421d451ee931b5c0a0', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9379f6a8bf4ad9-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_4839d4c5d1654e421d451ee931b5c0a0", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 19:25:50. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 120 \u0438\u0437 239 \\n \\n15.6 \u0412 \u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u0435\u0441\u043b\u0438 \u043f\u043e\u0434\u0437\u0435\u043c\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u0438\u0442\u0441\u044f \u0432 \u043a\u043e\u0442\u043b\u043e\u0432\u0430\u043d\u0435 \u043f\u043e\u0434 \u0437\u0430\u0449\u0438\u0442\u043e\u0439 \\n\"\u0441\u0442\u0435\u043d\u044b \u0432 \u0433\u0440\u0443\u043d\u0442\u0435\" \u0438\u043b\u0438 \u043e\u0433\u0440\u0430\u0436\u0434\u0435\u043d\u0438\u044f \u0438\u0437 \u0433\u0440\u0443\u043d\u0442\u043e\u0446\u0435\u043c\u0435\u043d\u0442\u043d\u044b\u0445 \u0441\u0432\u0430\u0439, \u0430 \u043d\u0435\u0441\u0443\u0449\u0438\u0439 \u043a\u0430\u0440\u043a\u0430\u0441 \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \\n\u0438\u0441\u043f\u044b\u0442\u044b\u0432\u0430\u0442\u044c... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 16:25:53 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '2227'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '793887'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '458ms'), ('x-request-id', 'req_c6a7a828a6ee8bfa53f4f399dd93bc2d'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=H21LiQS1RcXKD0RKu9d45FlLZtylwtLdSlLGx4iYARg-1732724753-1.0.1.1-4JYDmbBvfsPftIEyYKjkgBqyUHKRZdvCR1a9TpoJUT36KcDhsji3q2Qyy_7BMg0DnYbkD_oDHkcPyEPaIYprtw; path=/; expires=Wed, 27... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_c6a7a828a6ee8bfa53f4f399dd93bc2d", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:53", "name": "llm_service", "levelname": "DEBUG", "message": "Maximum similarity: 0.8719969551400885", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:53", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:53", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0434\u043b\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e \u043e\u0442 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0430\u044f \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044f \u0431\u0435\u0442\u043e\u043d\u0430 \u0438 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0440\u0430\u0437\u0432\u0438\u0442\u0438\u0435 \u043f\u043b\u0435\u0441\u0435\u043d\u0438 \u0438 \u0433\u0440\u0438\u0431\u043a\u0430. \u042d\u0442\u043e \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432\u0430\u0436\u043d\u043e \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u0432\u044b\u0441\u043e\u043a\u043e\u0433\u043e \u0443\u0440\u043e\u0432\u043d\u044f \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u0438\u043b\u0438 \u0430\u0433\u0440\u0435\u0441\u0441\u0438\u0432\u043d\u043e\u0439 \u0441\u0440\u0435\u0434\u044b, \u0447\u0442\u043e\u0431\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u044c \u0438 \u043d\u0430\u0434\u0435\u0436\u043d\u043e\u0441\u0442\u044c \u0437\u0434\u0430\u043d\u0438\u044f.\\n\\n------------------\\nReferences:\\n\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf, pages: 65, 119, 120\\n\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0435 \u0414\u043e\u043c\u0430_\u0421\u041f 31-105-2002 .pdf, pages: 10\\n', {'\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf', '\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0435 \u0414\u043e\u043c\u0430_\u0421\u041f 31-105-2002 .pdf'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:53", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:54", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:54", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='de340ada-0cca-4c2a-9fa8-61c66673e073'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:25:54", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:13", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:13", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:13", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:13", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='Hello'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:13", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x000001C1569FB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 26, 13, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2456, supergroup_chat_created=False, text='Hello'), update_id=881193613), <telegram.ext._callbackcontext.CallbackContext object at 0x000001C17BF8EC10>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:13", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x000001C17C0789A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:13", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='daaa4d30-bb81-404f-9f41-389f8e88bcfe' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:14", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='daaa4d30-bb81-404f-9f41-389f8e88bcfe'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:14", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:14", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x000001C17C084290>, 'Hello'), kwargs: {'chat_history': [HumanMessage(content='Hello', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0434\u043b\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e \u043e\u0442 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0430\u044f \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044f \u0431\u0435\u0442\u043e\u043d\u0430 \u0438 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0440\u0430\u0437\u0432\u0438\u0442\u0438\u0435 \u043f\u043b\u0435\u0441\u0435\u043d\u0438 \u0438 \u0433\u0440\u0438\u0431\u043a\u0430. \u042d\u0442\u043e \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432\u0430\u0436\u043d\u043e \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u0432\u044b\u0441\u043e\u043a\u043e\u0433\u043e \u0443\u0440\u043e\u0432\u043d\u044f \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u0438\u043b\u0438 \u0430\u0433\u0440\u0435\u0441\u0441\u0438\u0432\u043d\u043e\u0439 \u0441\u0440\u0435\u0434\u044b, \u0447\u0442\u043e\u0431\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u044c \u0438 \u043d\u0430\u0434\u0435\u0436\u043d\u043e\u0441\u0442\u044c \u0437\u0434\u0430\u043d\u0438\u044f.\\n\\n------------------\\nReferences:\\n\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf, pages: 65, 119, 120\\n\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0435 \u0414\u043e\u043c\u0430_\u0421\u041f 31-105-2002 .pdf, pages: 10', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0434\u043b\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432. \u041e\u043d\u0430... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:14", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001C1A4845620>, 'json_data': {'input': [[9906]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:14", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:14", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:26:14 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '58', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999999', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_f500b37edbb97e11474a1192307e34de', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e937a8e4e01ee20-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:14", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_f500b37edbb97e11474a1192307e34de", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:14", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:14", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001C17A884EA0>, 'json_data': {'input': [[9906]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:14", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:14", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:26:14 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '61', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999999', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_d8a62f419a2b4d1701f45f095fb24b25', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e937a904a79ee20-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:14", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_d8a62f419a2b4d1701f45f095fb24b25", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:14", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001C17A884EA0>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 1644]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:14", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:15", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:26:15 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '45', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_fd71098d6adcaea22b89198e78008347', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e937a922e29ee20-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:15", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_fd71098d6adcaea22b89198e78008347", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:15", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001C17A884EA0>, 'json_data': {'input': [[39091, 31274, 20807, 31274, 19871, 35095, 56191, 34604, 19871, 35095, 16604, 20976, 28599, 35095, 34604, 20976, 31274, 35095, 56191, 65014, 140, 105, 19871, 35095, 16604, 37255, 720, 31274, 1301, 244, 31274, 65014, 31274, 140, 102, 20807, 20976, 12, 27435, 20976, 39091, 39091, 41682, 20807, 37255, 65014, 140, 105, 20807, 20976, 38214, 20976, 1301, 98, 20976, 36551, 86491, 140, 247, 19871, 35095, 16604, 37255, 2355, 34604, 20976, 19871, 19871, 31274, 140, 247, 19871, 27435, 20976, 140, 247, 67891, 56191, 25079, 56191, 34604, 37255, 93899, 31274, 31274, 33006, 720, 19871, 16604, 20976, 25079, 23227, 34604, 37255, 16604, 31274, 65014, 2355, 33006, 33006, 49526, 33006, 19871, 17279, 220, 220, 17824, 13, 9413, 18216, 15, 13, 2366, 16, 33006, 33006, 33006, 33006, 31274, 20807, 140, 244, 56191, 20807, 56191, 34604,... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:15", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:15", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:26:15 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '47', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999790', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '2ms', 'x-request-id': 'req_902049999fc0a8953a101415df6f764e', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e937a954b73ee20-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:15", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_902049999fc0a8953a101415df6f764e", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:15", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001C17A884EA0>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 22]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:15", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:16", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:26:16 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '51', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_fcb38540a7bc4a86b1ac946e6421b38c', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e937a98585eee20-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:16", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_fcb38540a7bc4a86b1ac946e6421b38c", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:16", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000001C17A884EA0>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 1958]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:16", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:16", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:26:16 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '109', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_f72d41df0b46fa48c118e7ca5312f3ce', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e937a9a8ca0ee20-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:16", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_f72d41df0b46fa48c118e7ca5312f3ce", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:16", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"You are a project assistant from the consultant side on design and construction projects. If you don't know the answer, say that you don't know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 19:26:16. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u041f 29.13330.2011 \\n \\n33\\n\\n\u041c\u0418\u041d\u0418\u0421\u0422\u0415\u0420\u0421\u0422\u0412\u041e \u0421\u0422\u0420\u041e\u0418\u0422\u0415\u041b\u042c\u0421\u0422\u0412\u0410 \\n\u0418 \u0416\u0418\u041b\u0418\u0429\u041d\u041e-\u041a\u041e\u041c\u041c\u0423\u041d\u0410\u041b\u042c\u041d\u041e\u0413\u041e \u0425\u041e\u0417\u042f\u0419\u0421\u0422\u0412\u0410  \\n\u0420\u041e\u0421\u0421\u0418\u0419\u0421\u041a\u041e\u0419 \u0424\u0415\u0414\u0415\u0420\u0410\u0426\u0418\u0418 \\n \\n \\n\u0421\u0412\u041e\u0414 \u041f\u0420\u0410\u0412\u0418\u041b  \\n \\n \\n \\n \\n \\n  \\n \\n \\n\u0421\u041f  502.1325800.2021 \\n \\n \\n \\n \\n \\n \\n \\n\u0418\u041d\u0416\u0415\u041d\u0415\u0420\u041d\u041e... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:16", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:17", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:26:17 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '603', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '798915', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '81ms', 'x-request-id': 'req_a91457b6c51493bccedc8cc6fbfa1a19', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e937a9e7e70ee12-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:17", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_a91457b6c51493bccedc8cc6fbfa1a19", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:17", "name": "llm_service", "levelname": "DEBUG", "message": "Maximum similarity: 0.7464200988975203", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:17", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:17", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('Hello! How can I assist you today?\\n\\n------------------\\nReferences:\\n\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf, pages: 10, 36, 37\\n\u0418\u043d\u0436\u0435\u043d\u0435\u0440\u043d\u043e \u044d\u043a\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0437\u044b\u0441\u043a\u0430\u043d\u0438\u044f_\u0421\u041f 502.1325800.2021.pdf, pages: 0\\n', {'\u0418\u043d\u0436\u0435\u043d\u0435\u0440\u043d\u043e \u044d\u043a\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0437\u044b\u0441\u043a\u0430\u043d\u0438\u044f_\u0421\u041f 502.1325800.2021.pdf', '\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:17", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:18", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:18", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='daaa4d30-bb81-404f-9f41-389f8e88bcfe'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:18", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:26:54", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 19:26:56", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 19:26:56", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 19:26:56", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 19:27:04", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 19:27:06", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 19:27:06", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 19:27:06", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 19:27:33", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 19:27:35", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 19:27:35", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 19:27:35", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 19:28:11", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:12", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:12", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:12", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:12", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:12", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: ru", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:12", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:12", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/start'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:12", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: start with args: (<handlers.BotHandlers object at 0x000001937EEDB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 28, 10, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=6, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2458, supergroup_chat_created=False, text='/start'), update_id=881193614), <telegram.ext._callbackcontext.CallbackContext object at 0x00000193244DEC10>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:12", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: start with result: <coroutine object BotHandlers.start at 0x00000193243830F0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:12", "name": "handlers", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:12", "name": "handlers", "levelname": "INFO", "message": "Sent welcome message to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:12", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:23", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:23", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:23", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:23", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:23", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x000001937EEDB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 28, 22, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2460, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193615), <telegram.ext._callbackcontext.CallbackContext object at 0x00000193244DF230>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:23", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x0000019324397640>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:24", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:24", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:25", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:25", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:25", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:25", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:25", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x000001937EEDB7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), id='1051116661516281824', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 28, 23, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2461, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations')... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:25", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x00000193231CB8A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:26", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:26", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:26", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x00000193245A3A70>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:26", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:26", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x00000193245A3A70>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:26", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:26", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:26", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:26", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:26", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:26", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:26", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:26", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:26", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:32", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:32", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:32", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:32", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='hello'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:32", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x000001937EEDB7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 28, 31, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2463, supergroup_chat_created=False, text='hello'), update_id=881193617), <telegram.ext._callbackcontext.CallbackContext object at 0x00000193244DF230>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:32", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x00000193245B8B30>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:32", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='e4f22091-aa31-4224-82e7-064d7d9f8e92' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:32", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='e4f22091-aa31-4224-82e7-064d7d9f8e92'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:32", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:32", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x00000193245A3A70>, 'hello'), kwargs: {'chat_history': [HumanMessage(content='hello', additional_kwargs={}, response_metadata={}), HumanMessage(content='Hello', additional_kwargs={}, response_metadata={}), AIMessage(content='Hello! How can I assist you today?\\n\\n------------------\\nReferences:\\n\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf, pages: 10, 36, 37\\n\u0418\u043d\u0436\u0435\u043d\u0435\u0440\u043d\u043e \u044d\u043a\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0437\u044b\u0441\u043a\u0430\u043d\u0438\u044f_\u0421\u041f 502.1325800.2021.pdf, pages: 0', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0434\u043b\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e \u043e\u0442 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0430\u044f \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044f \u0431\u0435\u0442\u043e\u043d\u0430 \u0438 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b, \u0430 \u0442\u0430\u043a\u0436\u0435 \u0440\u0430\u0437\u0432\u0438\u0442\u0438\u0435 \u043f\u043b\u0435\u0441\u0435\u043d\u0438 \u0438 \u0433\u0440\u0438\u0431\u043a\u0430. \u042d\u0442\u043e \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432\u0430\u0436\u043d\u043e \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u0432\u044b\u0441\u043e\u043a\u043e\u0433\u043e \u0443\u0440\u043e\u0432\u043d\u044f \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u0438\u043b\u0438 \u0430\u0433\u0440\u0435\u0441\u0441\u0438\u0432\u043d\u043e\u0439 \u0441\u0440\u0435\u0434\u044b, \u0447\u0442\u043e\u0431\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u044c \u0438 \u043d\u0430\u0434\u0435\u0436\u043d\u043e\u0441\u0442\u044c \u0437\u0434\u0430\u043d\u0438\u044f.\\n\\n------------------\\nRefere... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:32", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000193245EBE20>, 'json_data': {'input': [[15339]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:32", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:33", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 16:28:33 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '113'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999999'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_aa9734fde2e23245b6c675dce3d87359'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=31_liK0FxAC0P8.Iwd42R.aLNVeOhJc5XwUrGPLuPHA-1732724913-1.0.1.1-eMP30tzqQ71kl338zzsRDyP_66Xm320g5jps2... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:33", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_aa9734fde2e23245b6c675dce3d87359", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:33", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:33", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000019322DC0E00>, 'json_data': {'input': [[15339]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:33", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:28:34 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '74', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999999', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_11baf026868a0951d4f540360b2265b0', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e937df74b322df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_11baf026868a0951d4f540360b2265b0", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000019322DC0E00>, 'json_data': {'input': [[12, 22, 49526, 720, 7529, 11, 23, 2355, 720, 12, 21, 49526, 720, 11128, 11, 17, 2355, 720, 12, 20, 49526, 720, 11515, 11, 21, 2355, 720, 12, 19, 49526, 720, 10132, 11, 24, 2355, 720, 12, 18, 49526, 720, 10465, 11, 24, 2355, 720, 12, 17, 49526, 720, 10148, 11, 21, 2355, 720, 12, 16, 49526, 720, 4386, 11, 24, 2355, 720, 15, 49526, 720, 4364, 11, 24, 2355, 720, 16, 49526, 720, 8190, 11, 19, 2355, 720, 17, 49526, 720, 7461, 11, 20, 2355, 720, 18, 49526, 720, 1041, 11, 15, 2355, 720, 19, 49526, 720, 6365, 11, 5925, 2355, 720, 20, 49526, 2421, 11, 1544]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:35", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:28:35 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '151', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999892', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '1ms', 'x-request-id': 'req_2914d27ac1a0684f0f6ae25ad923b295', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e937dfd6cf62df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:35", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_2914d27ac1a0684f0f6ae25ad923b295", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:35", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000019322DC0E00>, 'json_data': {'input': [[12, 1691, 49526, 720, 21123, 11, 17, 2355, 720, 12, 508, 49526, 720, 19773, 11, 17, 2355, 720, 12, 777, 49526, 720, 10617, 11, 16, 2355, 720, 12, 972, 49526, 720, 19561, 11, 24, 2355, 720, 12, 1114, 49526, 720, 19081, 11, 17, 2355, 720, 12, 845, 49526, 720, 6843, 11, 23, 2355, 720, 12, 868, 49526, 720, 16596, 11, 21, 2355, 720, 12, 975, 49526, 720, 13384, 11, 18, 2355, 720, 12, 1032, 49526, 720, 13754, 11, 23, 2355, 720, 12, 717, 49526, 720, 10914, 11, 24, 2355, 720, 12, 806, 49526, 720, 12326, 11, 20, 2355, 720, 12, 605, 49526, 720, 12422, 11, 20, 2355, 720, 12, 24, 49526, 720, 13762, 11, 23, 2355, 720, 12, 23, 720, 10866, 11, 17]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:35", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:36", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:28:36 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '164', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999876', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '1ms', 'x-request-id': 'req_81abd098b3decf1e2d5361453e47e0eb', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e937e001d9e2df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:36", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_81abd098b3decf1e2d5361453e47e0eb", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:36", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000019322DC0E00>, 'json_data': {'input': [[21, 49526, 720, 6069, 11, 1721, 2355, 720, 22, 49526, 720, 2495, 11, 16, 2355, 720, 23, 49526, 720, 5958, 11, 3971, 2355, 720, 24, 49526, 720, 3076, 11, 1313, 2355, 720, 605, 49526, 720, 2397, 11, 1313, 2355, 720, 806, 49526, 720, 5547, 11, 2618, 2355, 720, 717, 49526, 720, 3226, 11, 4161, 2355, 720, 1032, 49526, 720, 4370, 11, 2614, 2355, 720, 975, 49526, 720, 3971, 11, 21, 2355, 720, 868, 49526, 720, 2166, 11, 5332, 2355, 720, 845, 49526, 720, 2790, 11, 2437, 2355, 720, 1114, 49526, 720, 3391, 11, 2166, 2355, 720, 972, 49526, 720, 3174, 11, 806]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:36", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:37", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:28:37 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '44', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999898', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '1ms', 'x-request-id': 'req_0849b9ee702c391a170bd594ede3bc9b', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e937e06efac2df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:37", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_0849b9ee702c391a170bd594ede3bc9b", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:37", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000019322DC0E00>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 22]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:37", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:38", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:28:37 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '116', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_f5e0a450f5690c2cfe6d658f60905bc6', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e937e0c99642df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:38", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_f5e0a450f5690c2cfe6d658f60905bc6", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:38", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"You are a project assistant from the consultant side on design and construction projects. If you don't know the answer, say that you don't know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 19:28:38. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n-7 \\n  \\n \\n191,8  \\n \\n-6 \\n  \\n \\n179,2  \\n \\n-5 \\n  \\n \\n167,6  \\n \\n-4 \\n  \\n \\n156,9  \\n \\n-3 \\n  \\n \\n146,9  \\n \\n-2 \\n  \\n \\n137,6  \\n \\n-1 \\n  \\n \\n128,9  \\n \\n0 \\n  \\n \\n120,9  \\n \\n1 \\n  \\n \\n113,4  \\n \\n2 ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:38", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:39", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 16:28:39 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '570'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '799050'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '71ms'), ('x-request-id', 'req_ce1e5556256b2e3229147ef8d0fe6b03'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=ToDq9BgUFRxZEmYxSSlogVgyn.hebhySRa6sk355RHA-1732724919-1.0.1.1-sTWlo7Ivg_.09_UTNVMqCQJCZmCJtzEH0jUN81Y3G4XWWfjjoN3drVM4wAw5jjTXz4v.2sSJqXzk0AHgc726xg; path=/; expires=Wed, 27-N... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:39", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_ce1e5556256b2e3229147ef8d0fe6b03", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:39", "name": "llm_service", "levelname": "DEBUG", "message": "Maximum similarity: 0.7600849131962436", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:39", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:39", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('Hello! How can I help you today?\\n\\n------------------\\nReferences:\\n\u0422\u0435\u043f\u043b\u043e\u0432\u0430\u044f_\u0437\u0430\u0449\u0438\u0442\u0430_\u0437\u0434\u0430\u043d\u0438\u0439_\u0421\u041f_50_13330_2012.pdf, pages: 28, 29, 30\\n\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf, pages: 10\\n', {'\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf', '\u0422\u0435\u043f\u043b\u043e\u0432\u0430\u044f_\u0437\u0430\u0449\u0438\u0442\u0430_\u0437\u0434\u0430\u043d\u0438\u0439_\u0421\u041f_50_13330_2012.pdf'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:39", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:40", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:40", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='e4f22091-aa31-4224-82e7-064d7d9f8e92'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:28:40", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:16", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 19:29:18", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 19:29:18", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 19:29:18", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 19:29:38", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:38", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:38", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:39", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:39", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:39", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:39", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:39", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: ru", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:39", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:39", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:39", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x00000219F857B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 29, 37, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2465, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193618), <telegram.ext._callbackcontext.CallbackContext object at 0x000002199DC3CDE0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:39", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x00000219FAA00CA0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:39", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:40", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:42", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:42", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:42", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:42", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:42", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x00000219F857B7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), id='1051116658643761341', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 29, 39, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2466, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations')... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:42", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x000002199C92F8A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:43", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:43", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:43", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x000002199DD441A0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:43", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:43", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x000002199DD441A0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:43", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:43", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:43", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:43", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:43", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:43", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:43", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:43", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:43", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:49", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:49", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:49", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:49", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='hello'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:49", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x00000219F857B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 29, 48, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2468, supergroup_chat_created=False, text='hello'), update_id=881193620), <telegram.ext._callbackcontext.CallbackContext object at 0x000002199DC3D470>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:49", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x000002199DD389A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:49", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='87451875-0378-45c2-868e-22429b3ff2d6' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:49", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='87451875-0378-45c2-868e-22429b3ff2d6'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:49", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:49", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x000002199DD441A0>, 'hello'), kwargs: {'chat_history': [HumanMessage(content='hello', additional_kwargs={}, response_metadata={}), HumanMessage(content='hello', additional_kwargs={}, response_metadata={}), AIMessage(content='Hello! How can I help you today?\\n\\n------------------\\nReferences:\\n\u0422\u0435\u043f\u043b\u043e\u0432\u0430\u044f_\u0437\u0430\u0449\u0438\u0442\u0430_\u0437\u0434\u0430\u043d\u0438\u0439_\u0421\u041f_50_13330_2012.pdf, pages: 28, 29, 30\\n\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf, pages: 10', additional_kwargs={}, response_metadata={}), HumanMessage(content='Hello', additional_kwargs={}, response_metadata={}), AIMessage(content='Hello! How can I assist you today?\\n\\n------------------\\nReferences:\\n\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf, pages: 10, 36, 37\\n\u0418\u043d\u0436\u0435\u043d\u0435\u0440\u043d\u043e \u044d\u043a\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0437\u044b\u0441\u043a\u0430\u043d\u0438\u044f_\u0421\u041f 502.1325800.2021.pdf, pages: 0', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002199DD6F560>, 'json_data': {'input': [[15339]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 16:29:50 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '125'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999999'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_22374a1fc7f6bbb34d3ab8a72343aaa1'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=3tqo5oDCdA.iDjnmYfK4mYbEwZW5nHabBbbc3H51ckI-1732724990-1.0.1.1-vzM1yNbrxu5u86FLkfpoKTUscYLhDX8_7xsS0... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_22374a1fc7f6bbb34d3ab8a72343aaa1", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:50", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002199C530E00>, 'json_data': {'input': [[15339]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:29:51 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '40', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999999', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_be6691e7a0ba3df3d7d09da55cae0f37', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e937fd6dac56cf2-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_be6691e7a0ba3df3d7d09da55cae0f37", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002199C530E00>, 'json_data': {'input': [[12, 22, 49526, 720, 7529, 11, 23, 2355, 720, 12, 21, 49526, 720, 11128, 11, 17, 2355, 720, 12, 20, 49526, 720, 11515, 11, 21, 2355, 720, 12, 19, 49526, 720, 10132, 11, 24, 2355, 720, 12, 18, 49526, 720, 10465, 11, 24, 2355, 720, 12, 17, 49526, 720, 10148, 11, 21, 2355, 720, 12, 16, 49526, 720, 4386, 11, 24, 2355, 720, 15, 49526, 720, 4364, 11, 24, 2355, 720, 16, 49526, 720, 8190, 11, 19, 2355, 720, 17, 49526, 720, 7461, 11, 20, 2355, 720, 18, 49526, 720, 1041, 11, 15, 2355, 720, 19, 49526, 720, 6365, 11, 5925, 2355, 720, 20, 49526, 2421, 11, 1544]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:29:51 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '132', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999892', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '1ms', 'x-request-id': 'req_c41048ef99f6ca3aaeb8d2cd7049a8ab', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e937fda1caa6cf2-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_c41048ef99f6ca3aaeb8d2cd7049a8ab", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002199C530E00>, 'json_data': {'input': [[12, 1691, 49526, 720, 21123, 11, 17, 2355, 720, 12, 508, 49526, 720, 19773, 11, 17, 2355, 720, 12, 777, 49526, 720, 10617, 11, 16, 2355, 720, 12, 972, 49526, 720, 19561, 11, 24, 2355, 720, 12, 1114, 49526, 720, 19081, 11, 17, 2355, 720, 12, 845, 49526, 720, 6843, 11, 23, 2355, 720, 12, 868, 49526, 720, 16596, 11, 21, 2355, 720, 12, 975, 49526, 720, 13384, 11, 18, 2355, 720, 12, 1032, 49526, 720, 13754, 11, 23, 2355, 720, 12, 717, 49526, 720, 10914, 11, 24, 2355, 720, 12, 806, 49526, 720, 12326, 11, 20, 2355, 720, 12, 605, 49526, 720, 12422, 11, 20, 2355, 720, 12, 24, 49526, 720, 13762, 11, 23, 2355, 720, 12, 23, 720, 10866, 11, 17]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:29:51 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '62', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999876', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '1ms', 'x-request-id': 'req_d252e71e9e1ff90a06f65909b3b16a63', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e937fdc8e486cf2-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_d252e71e9e1ff90a06f65909b3b16a63", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002199C530E00>, 'json_data': {'input': [[21, 49526, 720, 6069, 11, 1721, 2355, 720, 22, 49526, 720, 2495, 11, 16, 2355, 720, 23, 49526, 720, 5958, 11, 3971, 2355, 720, 24, 49526, 720, 3076, 11, 1313, 2355, 720, 605, 49526, 720, 2397, 11, 1313, 2355, 720, 806, 49526, 720, 5547, 11, 2618, 2355, 720, 717, 49526, 720, 3226, 11, 4161, 2355, 720, 1032, 49526, 720, 4370, 11, 2614, 2355, 720, 975, 49526, 720, 3971, 11, 21, 2355, 720, 868, 49526, 720, 2166, 11, 5332, 2355, 720, 845, 49526, 720, 2790, 11, 2437, 2355, 720, 1114, 49526, 720, 3391, 11, 2166, 2355, 720, 972, 49526, 720, 3174, 11, 806]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:29:52 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '87', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999897', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '1ms', 'x-request-id': 'req_34805f687ea5fab2b3d5aab93ffd0df2', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e937fdeffce6cf2-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_34805f687ea5fab2b3d5aab93ffd0df2", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002199C530E00>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 22]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:29:52 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '57', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_a8db3f0605ea3e8d53715abff86d9a26', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e937fe128fe6cf2-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_a8db3f0605ea3e8d53715abff86d9a26", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"You are a project assistant from the consultant side on design and construction projects. If you don't know the answer, say that you don't know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 19:29:52. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n-7 \\n  \\n \\n191,8  \\n \\n-6 \\n  \\n \\n179,2  \\n \\n-5 \\n  \\n \\n167,6  \\n \\n-4 \\n  \\n \\n156,9  \\n \\n-3 \\n  \\n \\n146,9  \\n \\n-2 \\n  \\n \\n137,6  \\n \\n-1 \\n  \\n \\n128,9  \\n \\n0 \\n  \\n \\n120,9  \\n \\n1 \\n  \\n \\n113,4  \\n \\n2 ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 16:29:53 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '519'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '799169'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '62ms'), ('x-request-id', 'req_7a2083491d63ac481d87515c14e40b60'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=ga3JOQq63rB.oWsN9BpQoKeAPR2hRmgWKe5IeDIfS.0-1732724993-1.0.1.1-wrT.L4X9Wr76o3He5ycF9mVMzjA2LgdiHGQLeMf7wYoiOmZGvu3qaff5d5U2jmXjLIFKA0iS4ClJiGfmmoiakg; path=/; expires=Wed, 27-N... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_7a2083491d63ac481d87515c14e40b60", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:53", "name": "llm_service", "levelname": "DEBUG", "message": "Maximum similarity: 0.7600535917301503", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:53", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity threshold not met. Returning answer without references.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:53", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('Hello! How can I assist you today?', None)", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:53", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:54", "name": "handlers", "levelname": "INFO", "message": "Sent response to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:54", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='87451875-0378-45c2-868e-22429b3ff2d6'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:29:54", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:15", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:15", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:15", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:15", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:15", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x00000219F857B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 30, 14, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2470, supergroup_chat_created=False, text='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), update_id=881193621), <telegram.ext._callbackcontext.CallbackContext object at 0x000002199DC3DFD0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:15", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x000002199DD389A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:15", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='d08c6e95-921c-4fde-b957-52a513f01856' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:15", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='d08c6e95-921c-4fde-b957-52a513f01856'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:15", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:15", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x000002199DD441A0>, '\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), kwargs: {'chat_history': [HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), HumanMessage(content='hello', additional_kwargs={}, response_metadata={}), AIMessage(content='Hello! How can I assist you today?', additional_kwargs={}, response_metadata={}), HumanMessage(content='hello', additional_kwargs={}, response_metadata={}), AIMessage(content='Hello! How can I help you today?\\n\\n------------------\\nReferences:\\n\u0422\u0435\u043f\u043b\u043e\u0432\u0430\u044f_\u0437\u0430\u0449\u0438\u0442\u0430_\u0437\u0434\u0430\u043d\u0438\u0439_\u0421\u041f_50_13330_2012.pdf, pages: 28, 29, 30\\n\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf, pages: 10', additional_kwargs={}, response_metadata={}), HumanMessage(content='Hello', additional_kwargs={}, response_metadata={}), AIMessage(content='Hello! How can I assist you today?\\n\\n------------------\\nReferences:\\n\u041f\u043e\u043b\u044b_\u0421\u041f 29.13330.2011.pdf, pages: 10, 36, 37\\n\u0418\u043d\u0436\u0435\u043d\u0435\u0440\u043d\u043e \u044d\u043a\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0437\u044b\u0441\u043a... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:15", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002199C342840>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:15", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:17", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:30:16 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '69', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999982', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_e7e0f2e920b04d7518b205ce0e5b9da6', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e938074894b2df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:17", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_e7e0f2e920b04d7518b205ce0e5b9da6", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:17", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:17", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002199C530EA0>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:17", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:30:17 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '39', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999982', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_f1200ff88d5c93c201ed37d92e79afd2', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93807b6b392df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_f1200ff88d5c93c201ed37d92e79afd2", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002199C530EA0>, 'json_data': {'input': [[74598, 96256, 1506, 220, 4364, 23934, 220, 14815, 33006, 868, 13, 21, 23784, 11047, 12507, 90226, 1506, 1532, 11, 47353, 40842, 9136, 10298, 44858, 17756, 1506, 35592, 34943, 9239, 56999, 18999, 30392, 1482, 97334, 5927, 7820, 13337, 3114, 6856, 7486, 1532, 40842, 44946, 14476, 9542, 16742, 720, 1, 6735, 79686, 5927, 25756, 20346, 2156, 51627, 1, 46177, 8379, 15752, 11001, 114, 7094, 18999, 23934, 25756, 20346, 2156, 25657, 10589, 10298, 19190, 44786, 45916, 19039, 11, 21022, 19175, 2297, 43293, 44938, 7820, 17721, 13433, 2297, 34943, 9239, 56999, 18999, 68088, 720, 13810, 8164, 4655, 1830, 35667, 18482, 6850, 7753, 18226, 2156, 50619, 44065, 81376, 23680, 17165, 11, 25756, 48262, 2233, 1482, 41873, 96485, 15458, 17766, 34613, 7820, 6856, 7753, 23934, 12, 8164, 9706, 40842, 1482, 12426, 5591, 4655, 18034, 35... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:19", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:30:19 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '88', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998465', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '18ms', 'x-request-id': 'req_00ccbe11307723442c620b2fee27b5da', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9380825dcd2df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:19", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_00ccbe11307723442c620b2fee27b5da", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:19", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002199C530EA0>, 'json_data': {'input': [[74598, 96256, 1506, 220, 7994, 23934, 220, 14815, 33006, 49899, 17766, 67124, 2233, 17766, 1840, 10589, 32062, 85864, 13, 23784, 12561, 13337, 28089, 94962, 90226, 1506, 1532, 93129, 73181, 12561, 16494, 5372, 94975, 12561, 35111, 5372, 34613, 7952, 2233, 5372, 38657, 13, 720, 868, 13, 1032, 23784, 330, 10693, 7975, 9706, 44786, 1, 55617, 94538, 10693, 18034, 35297, 7094, 24697, 19190, 39988, 5173, 3114, 9542, 4655, 11, 21022, 50945, 59138, 13373, 14257, 6148, 84350, 53671, 22918, 1532, 5524, 29256, 2233, 4329, 17394, 18999, 34943, 330, 6735, 5372, 16742, 720, 5591, 25756, 20346, 2156, 51627, 1, 46177, 13373, 20346, 17394, 39988, 18868, 5372, 16742, 34943, 9239, 56999, 18999, 19175, 89159, 1482, 14257, 52037, 18226, 11320, 5591, 18482, 84714, 1532, 15458, 39127, 44065, 720, 15752, 48262, 2233, 1482, 12426, 8... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:19", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:30:20 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '161', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998825', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '14ms', 'x-request-id': 'req_c09f2f87e07642e9c9059f4ab77fba8b', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93808948c22df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_c09f2f87e07642e9c9059f4ab77fba8b", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002199C530EA0>, 'json_data': {'input': [[74598, 96256, 1506, 220, 2287, 23934, 220, 14815, 33006, 806, 13, 2983, 23227, 31203, 86291, 36750, 84198, 18034, 35297, 7094, 24697, 19190, 6856, 7740, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 19175, 89159, 1482, 78085, 2233, 7975, 59921, 18482, 720, 15752, 3114, 64569, 19479, 3865, 7740, 10693, 11122, 16331, 21956, 18999, 11, 100147, 4655, 7740, 78876, 8164, 7975, 21956, 17618, 5927, 5173, 3114, 7486, 1532, 11, 14257, 77911, 20812, 1482, 20879, 49284, 6735, 44938, 7740, 6850, 1840, 12426, 11, 99396, 17618, 720, 15752, 48262, 2233, 1482, 41873, 96485, 57186, 7740, 7820, 50223, 52744, 12561, 16494, 5372, 5372, 44786, 96573, 7753, 1840, 16331, 6856, 7740, 38098, 79370, 15458, 12415, 13, 35889, 1506, 14257, 77911, 20812, 1482, 320, 8164, 9706, 15752, 13337, 6856, 36352, 8, 720, 23630, 47805, 39280... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:30:21 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '97', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '12ms', 'x-request-id': 'req_04c61c33e9a595020147d71873d45784', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93808fab432df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_04c61c33e9a595020147d71873d45784", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002199C530EA0>, 'json_data': {'input': [[806, 33006, 20, 13, 23, 13, 16, 13, 17, 23227, 15088, 39103, 23311, 4329, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 320, 4898, 7486, 16331, 6856, 11, 51548, 9706, 10589, 33742, 11, 18868, 38438, 44786, 18600, 32985, 7753, 5591, 3865, 17721, 6856, 8, 720, 7094, 48181, 12648, 48835, 8341, 4929, 25756, 48262, 2233, 1482, 41873, 96485, 15458, 12182, 20440, 57925, 13337, 5591, 52866, 18999, 5173, 29256, 23680, 39280, 5927, 9706, 4655, 5927, 2156, 38521, 2233, 4929, 720, 2297, 1482, 9239, 56999, 62491, 13, 720, 20, 13, 23, 13, 16, 13, 18, 39903, 14009, 14257, 77911, 94071, 5927, 3114, 34493, 1482, 41873, 96485, 57186, 46177, 25756, 48262, 2233, 1482, 41873, 96485, 57186, 12561, 16494, 5372, 4329, 70129, 18600, 3865, 3114, 17766, 44065, 720, 4898, 24803, 26503, 44065, 7740, 25756, 48262, 2233, 1482, 418... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:22", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:30:21 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '121', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998401', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '19ms', 'x-request-id': 'req_e6eef1e78c61944cb1805fa7aabca647', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e938095ed892df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:22", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_e6eef1e78c61944cb1805fa7aabca647", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:22", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 19:30:22. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 120 \u0438\u0437 239 \\n \\n15.6 \u0412 \u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u0435\u0441\u043b\u0438 \u043f\u043e\u0434\u0437\u0435\u043c\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u0438\u0442\u0441\u044f \u0432 \u043a\u043e\u0442\u043b\u043e\u0432\u0430\u043d\u0435 \u043f\u043e\u0434 \u0437\u0430\u0449\u0438\u0442\u043e\u0439 \\n\"\u0441\u0442\u0435\u043d\u044b \u0432 \u0433\u0440\u0443\u043d\u0442\u0435\" \u0438\u043b\u0438 \u043e\u0433\u0440\u0430\u0436\u0434\u0435\u043d\u0438\u044f \u0438\u0437 \u0433\u0440\u0443\u043d\u0442\u043e\u0446\u0435\u043c\u0435\u043d\u0442\u043d\u044b\u0445 \u0441\u0432\u0430\u0439, \u0430 \u043d\u0435\u0441\u0443\u0449\u0438\u0439 \u043a\u0430\u0440\u043a\u0430\u0441 \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \\n\u0438\u0441\u043f\u044b\u0442\u044b\u0432\u0430\u0442\u044c... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:22", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:24", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:30:24 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '1277', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '794180', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '436ms', 'x-request-id': 'req_1a5ad7418c038e7582a84cda5026f8f3', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93809c0f162df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:24", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_1a5ad7418c038e7582a84cda5026f8f3", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:24", "name": "llm_service", "levelname": "DEBUG", "message": "Maximum similarity: 0.872080484839924", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:24", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity threshold not met. Returning answer without references.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:24", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0434\u043b\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442 \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u0447\u0442\u043e \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0442\u0438\u0442\u044c \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u044e \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b, \u0440\u0430\u0437\u0440\u0443\u0448\u0435\u043d\u0438\u0435 \u0431\u0435\u0442\u043e\u043d\u0430 \u0438 \u0434\u0440\u0443\u0433\u0438\u0435 \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044f, \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u0441 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435\u043c \u0432\u043e\u0434\u044b. \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432\u0430\u0436\u043d\u0430 \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u0432\u044b\u0441\u043e\u043a\u043e\u0433\u043e \u0443\u0440\u043e\u0432\u043d\u044f \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u0438\u043b\u0438 \u0430\u0433\u0440\u0435\u0441\u0441\u0438\u0432\u043d\u043e\u0439 \u0432\u043d\u0435\u0448\u043d\u0435\u0439 \u0441\u0440\u0435\u0434\u044b, \u0447\u0442\u043e\u0431\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u044c \u0438 \u043d\u0430\u0434\u0435\u0436\u043d\u043e\u0441\u0442\u044c \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438.', None)", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:24", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:25", "name": "handlers", "levelname": "INFO", "message": "Sent response to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:25", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='d08c6e95-921c-4fde-b957-52a513f01856'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:25", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:30:58", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-11-27 19:30:59", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-11-27 19:31:00", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-11-27 19:31:00", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-11-27 19:31:21", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:21", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:21", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:22", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:22", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:22", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:22", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:22", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: ru", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:22", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:23", "name": "decorators", "levelname": "WARNING", "message": "Documents not indexed for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:29", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:29", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:29", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:29", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:29", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x000002320CF4B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 31, 29, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2474, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193623), <telegram.ext._callbackcontext.CallbackContext object at 0x000002323259F3F0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:29", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x0000023232457640>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:30", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:30", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:32", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:32", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:32", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:32", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:32", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x000002320CF4B7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), id='1051116662064258108', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 31, 30, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2475, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations')... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:32", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x000002323128F8A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:32", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:32", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:32", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x00000232326762A0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:32", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:32", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x00000232326762A0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:32", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:32", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:32", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:32", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:32", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:32", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:32", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:32", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:32", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:38", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:38", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:38", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:38", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='Hello'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:38", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x000002320CF4B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 31, 37, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2477, supergroup_chat_created=False, text='Hello'), update_id=881193625), <telegram.ext._callbackcontext.CallbackContext object at 0x000002323259F3F0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:38", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x00000232326689A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:38", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='34adef00-65a8-4be3-9cb3-cabca6c5e2eb' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:38", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='34adef00-65a8-4be3-9cb3-cabca6c5e2eb'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:38", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:38", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x00000232326762A0>, 'Hello'), kwargs: {'chat_history': [HumanMessage(content='Hello', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0434\u043b\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442 \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u0447\u0442\u043e \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0442\u0438\u0442\u044c \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u044e \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b, \u0440\u0430\u0437\u0440\u0443\u0448\u0435\u043d\u0438\u0435 \u0431\u0435\u0442\u043e\u043d\u0430 \u0438 \u0434\u0440\u0443\u0433\u0438\u0435 \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044f, \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u0441 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435\u043c \u0432\u043e\u0434\u044b. \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432\u0430\u0436\u043d\u0430 \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u0432\u044b\u0441\u043e\u043a\u043e\u0433\u043e \u0443\u0440\u043e\u0432\u043d\u044f \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u0438\u043b\u0438 \u0430\u0433\u0440\u0435\u0441\u0441\u0438\u0432\u043d\u043e\u0439 \u0432\u043d\u0435\u0448\u043d\u0435\u0439 \u0441\u0440\u0435\u0434\u044b, \u0447\u0442\u043e\u0431\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u044c \u0438 \u043d\u0430\u0434\u0435\u0436\u043d\u043e\u0441\u0442\u044c \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438.', additional_kwargs={}, response_metadata={}), HumanMessage(content='hello', additional_kwargs={}, response_metadata={}), AIMessage(content='Hello! How can I assist you today?', additional_kwargs={}, response_metadata={}), HumanMessage(content='hello', additional_kwargs={}, response_metadata={... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:38", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002323269F4C0>, 'json_data': {'input': [[9906]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:38", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:39", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 16:31:39 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '202'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999999'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_fad9ec73106e05b590c93734b8b23497'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=EkayVzFbhI3hzBjb5tFwHDMEGJv.KMg4iN.smOqi31Y-1732725099-1.0.1.1-S8Oh47UL9A_lDhbG3GYLbg5xN4PiT73zx45OQ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:39", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_fad9ec73106e05b590c93734b8b23497", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:39", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:39", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000023230E80E00>, 'json_data': {'input': [[9906]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:39", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:40", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:31:40 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '116', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999999', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_a11bab9227796fbde75a792109f0f7fe', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9382805a3f2df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:40", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_a11bab9227796fbde75a792109f0f7fe", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:40", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000023230E80E00>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 1644]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:40", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:41", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:31:41 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '104', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_fff5de03b4ed8942378421d1669fa296', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9382854c1f2df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:41", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_fff5de03b4ed8942378421d1669fa296", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:41", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000023230E80E00>, 'json_data': {'input': [[39091, 31274, 20807, 31274, 19871, 35095, 56191, 34604, 19871, 35095, 16604, 20976, 28599, 35095, 34604, 20976, 31274, 35095, 56191, 65014, 140, 105, 19871, 35095, 16604, 37255, 720, 31274, 1301, 244, 31274, 65014, 31274, 140, 102, 20807, 20976, 12, 27435, 20976, 39091, 39091, 41682, 20807, 37255, 65014, 140, 105, 20807, 20976, 38214, 20976, 1301, 98, 20976, 36551, 86491, 140, 247, 19871, 35095, 16604, 37255, 2355, 34604, 20976, 19871, 19871, 31274, 140, 247, 19871, 27435, 20976, 140, 247, 67891, 56191, 25079, 56191, 34604, 37255, 93899, 31274, 31274, 33006, 720, 19871, 16604, 20976, 25079, 23227, 34604, 37255, 16604, 31274, 65014, 2355, 33006, 33006, 49526, 33006, 19871, 17279, 220, 220, 17824, 13, 9413, 18216, 15, 13, 2366, 16, 33006, 33006, 33006, 33006, 31274, 20807, 140, 244, 56191, 20807, 56191, 34604,... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:41", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:42", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:31:41 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '76', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999790', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '2ms', 'x-request-id': 'req_43d5417f882395ceec552231e8fdaf7f', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e938289ee252df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:42", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_43d5417f882395ceec552231e8fdaf7f", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:42", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002323269FBA0>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 22]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:42", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:42", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:31:42 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '115', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_e87e5d33631195aafa57f8a849376ac4', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93828e8fdd2df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:42", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_e87e5d33631195aafa57f8a849376ac4", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:42", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002323269FBA0>, 'json_data': {'input': [[19871, 17279, 220, 1682, 13, 9423, 966, 13, 679, 16, 33006, 1958]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:42", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:42", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:31:42 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '104', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_924a1865512743e2e17cbc12acd1c090', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e938290b8de2df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:42", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_924a1865512743e2e17cbc12acd1c090", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:43", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"You are a project assistant from the consultant side on design and construction projects. If you don't know the answer, say that you don't know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 19:31:42. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u041f 29.13330.2011 \\n \\n33\\n\\n\u041c\u0418\u041d\u0418\u0421\u0422\u0415\u0420\u0421\u0422\u0412\u041e \u0421\u0422\u0420\u041e\u0418\u0422\u0415\u041b\u042c\u0421\u0422\u0412\u0410 \\n\u0418 \u0416\u0418\u041b\u0418\u0429\u041d\u041e-\u041a\u041e\u041c\u041c\u0423\u041d\u0410\u041b\u042c\u041d\u041e\u0413\u041e \u0425\u041e\u0417\u042f\u0419\u0421\u0422\u0412\u0410  \\n\u0420\u041e\u0421\u0421\u0418\u0419\u0421\u041a\u041e\u0419 \u0424\u0415\u0414\u0415\u0420\u0410\u0426\u0418\u0418 \\n \\n \\n\u0421\u0412\u041e\u0414 \u041f\u0420\u0410\u0412\u0418\u041b  \\n \\n \\n \\n \\n \\n  \\n \\n \\n\u0421\u041f  502.1325800.2021 \\n \\n \\n \\n \\n \\n \\n \\n\u0418\u041d\u0416\u0415\u041d\u0415\u0420\u041d\u041e... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:43", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Wed, 27 Nov 2024 16:31:44 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '392'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '799359'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '48ms'), ('x-request-id', 'req_5e75cbb64ac600ca08c07d969b530064'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=srDzpW_.qAgKtwNJwhi48yFp7UhatBUlkzY9AVwDQT8-1732725104-1.0.1.1-_GxsVd8VZ2IPH_5Yr7gNl4pE8sKqVwCeldwaXF0uOE1Qe9CnBWYE.0vqd_M.y.ka7xJVgXgL2cRueKgLgXW_9A; path=/; expires=Wed, 27-N... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:44", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_5e75cbb64ac600ca08c07d969b530064", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:44", "name": "llm_service", "levelname": "DEBUG", "message": "Maximum similarity: 0.7464200988975203", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:44", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity threshold not met. Returning answer without references.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:44", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('Hello! How can I assist you today?', None)", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:44", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:44", "name": "handlers", "levelname": "INFO", "message": "Sent response to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:45", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='34adef00-65a8-4be3-9cb3-cabca6c5e2eb'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:45", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:53", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:53", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:53", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:53", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:53", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x000002320CF4B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 31, 52, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2479, supergroup_chat_created=False, text='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), update_id=881193626), <telegram.ext._callbackcontext.CallbackContext object at 0x000002323259ED60>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:53", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x00000232326689A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:53", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='3eb04266-f3a3-47c0-bc03-384567a152d6' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:53", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='3eb04266-f3a3-47c0-bc03-384567a152d6'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:53", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:53", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x00000232326762A0>, '\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c'), kwargs: {'chat_history': [HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), HumanMessage(content='Hello', additional_kwargs={}, response_metadata={}), AIMessage(content='Hello! How can I assist you today?', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430 \u0434\u043b\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442 \u043e\u0442 \u043f\u0440\u043e\u043d\u0438\u043a\u043d\u043e\u0432\u0435\u043d\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u0447\u0442\u043e \u043f\u043e\u043c\u043e\u0433\u0430\u0435\u0442 \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0442\u0438\u0442\u044c \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u044e \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b, \u0440\u0430\u0437\u0440\u0443\u0448\u0435\u043d\u0438\u0435 \u0431\u0435\u0442\u043e\u043d\u0430 \u0438 \u0434\u0440\u0443\u0433\u0438\u0435 \u043f\u043e\u0432\u0440\u0435\u0436\u0434\u0435\u043d\u0438\u044f, \u0441\u0432\u044f\u0437\u0430\u043d\u043d\u044b\u0435 \u0441 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435\u043c \u0432\u043e\u0434\u044b. \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432\u0430\u0436\u043d\u0430 \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u0432\u044b\u0441\u043e\u043a\u043e\u0433\u043e \u0443\u0440\u043e\u0432\u043d\u044f \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u0438\u043b\u0438 \u0430\u0433\u0440\u0435\u0441\u0441\u0438\u0432\u043d\u043e\u0439 \u0432\u043d\u0435\u0448\u043d\u0435\u0439 \u0441\u0440\u0435\u0434\u044b, \u0447\u0442\u043e\u0431\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u044c \u0438 \u043d\u0430\u0434\u0435\u0436\u043d\u043e\u0441\u0442\u044c \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438.', additional_kwargs={}, response_metadata={}), HumanMessage(... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x00000232A2E49D00>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:31:54 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '66', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999982', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_d538c8b1653efcdacbf190c02420a569', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9382d7e8a82dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_d538c8b1653efcdacbf190c02420a569", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:54", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002323269F100>, 'json_data': {'input': [[2156, 56999, 14525, 59195, 25756, 48262, 2233, 1482, 41873, 96485, 71829, 18034, 35297, 7094, 24697, 19190, 24697]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:31:55 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '87', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999983', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_568f6c99921a605607eb889a1d721845', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9382ddf96f2dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_568f6c99921a605607eb889a1d721845", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002323269F100>, 'json_data': {'input': [[74598, 96256, 1506, 220, 4364, 23934, 220, 14815, 33006, 868, 13, 21, 23784, 11047, 12507, 90226, 1506, 1532, 11, 47353, 40842, 9136, 10298, 44858, 17756, 1506, 35592, 34943, 9239, 56999, 18999, 30392, 1482, 97334, 5927, 7820, 13337, 3114, 6856, 7486, 1532, 40842, 44946, 14476, 9542, 16742, 720, 1, 6735, 79686, 5927, 25756, 20346, 2156, 51627, 1, 46177, 8379, 15752, 11001, 114, 7094, 18999, 23934, 25756, 20346, 2156, 25657, 10589, 10298, 19190, 44786, 45916, 19039, 11, 21022, 19175, 2297, 43293, 44938, 7820, 17721, 13433, 2297, 34943, 9239, 56999, 18999, 68088, 720, 13810, 8164, 4655, 1830, 35667, 18482, 6850, 7753, 18226, 2156, 50619, 44065, 81376, 23680, 17165, 11, 25756, 48262, 2233, 1482, 41873, 96485, 15458, 17766, 34613, 7820, 6856, 7753, 23934, 12, 8164, 9706, 40842, 1482, 12426, 5591, 4655, 18034, 35... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:31:55 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '76', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998465', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '18ms', 'x-request-id': 'req_de3db763a85fe9b73eadc32eee804905', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9382e37a1c2dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_de3db763a85fe9b73eadc32eee804905", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002323269F100>, 'json_data': {'input': [[74598, 96256, 1506, 220, 7994, 23934, 220, 14815, 33006, 49899, 17766, 67124, 2233, 17766, 1840, 10589, 32062, 85864, 13, 23784, 12561, 13337, 28089, 94962, 90226, 1506, 1532, 93129, 73181, 12561, 16494, 5372, 94975, 12561, 35111, 5372, 34613, 7952, 2233, 5372, 38657, 13, 720, 868, 13, 1032, 23784, 330, 10693, 7975, 9706, 44786, 1, 55617, 94538, 10693, 18034, 35297, 7094, 24697, 19190, 39988, 5173, 3114, 9542, 4655, 11, 21022, 50945, 59138, 13373, 14257, 6148, 84350, 53671, 22918, 1532, 5524, 29256, 2233, 4329, 17394, 18999, 34943, 330, 6735, 5372, 16742, 720, 5591, 25756, 20346, 2156, 51627, 1, 46177, 13373, 20346, 17394, 39988, 18868, 5372, 16742, 34943, 9239, 56999, 18999, 19175, 89159, 1482, 14257, 52037, 18226, 11320, 5591, 18482, 84714, 1532, 15458, 39127, 44065, 720, 15752, 48262, 2233, 1482, 12426, 8... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:31:56 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '114', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998826', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '14ms', 'x-request-id': 'req_baafbc2a877d00b38bca0d6a6363b9f6', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9382e5fa6f2dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_baafbc2a877d00b38bca0d6a6363b9f6", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002323269F100>, 'json_data': {'input': [[74598, 96256, 1506, 220, 2287, 23934, 220, 14815, 33006, 806, 13, 2983, 23227, 31203, 86291, 36750, 84198, 18034, 35297, 7094, 24697, 19190, 6856, 7740, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 19175, 89159, 1482, 78085, 2233, 7975, 59921, 18482, 720, 15752, 3114, 64569, 19479, 3865, 7740, 10693, 11122, 16331, 21956, 18999, 11, 100147, 4655, 7740, 78876, 8164, 7975, 21956, 17618, 5927, 5173, 3114, 7486, 1532, 11, 14257, 77911, 20812, 1482, 20879, 49284, 6735, 44938, 7740, 6850, 1840, 12426, 11, 99396, 17618, 720, 15752, 48262, 2233, 1482, 41873, 96485, 57186, 7740, 7820, 50223, 52744, 12561, 16494, 5372, 5372, 44786, 96573, 7753, 1840, 16331, 6856, 7740, 38098, 79370, 15458, 12415, 13, 35889, 1506, 14257, 77911, 20812, 1482, 320, 8164, 9706, 15752, 13337, 6856, 36352, 8, 720, 23630, 47805, 39280... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:31:57 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '73', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '12ms', 'x-request-id': 'req_8362b7aed2021e48996e767eb9da764f', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9382eacb172dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_8362b7aed2021e48996e767eb9da764f", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002323269F100>, 'json_data': {'input': [[806, 33006, 20, 13, 23, 13, 16, 13, 17, 23227, 15088, 39103, 23311, 4329, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 320, 4898, 7486, 16331, 6856, 11, 51548, 9706, 10589, 33742, 11, 18868, 38438, 44786, 18600, 32985, 7753, 5591, 3865, 17721, 6856, 8, 720, 7094, 48181, 12648, 48835, 8341, 4929, 25756, 48262, 2233, 1482, 41873, 96485, 15458, 12182, 20440, 57925, 13337, 5591, 52866, 18999, 5173, 29256, 23680, 39280, 5927, 9706, 4655, 5927, 2156, 38521, 2233, 4929, 720, 2297, 1482, 9239, 56999, 62491, 13, 720, 20, 13, 23, 13, 16, 13, 18, 39903, 14009, 14257, 77911, 94071, 5927, 3114, 34493, 1482, 41873, 96485, 57186, 46177, 25756, 48262, 2233, 1482, 41873, 96485, 57186, 12561, 16494, 5372, 4329, 70129, 18600, 3865, 3114, 17766, 44065, 720, 4898, 24803, 26503, 44065, 7740, 25756, 48262, 2233, 1482, 418... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:31:57 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '156', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998401', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '19ms', 'x-request-id': 'req_ddd94d2a80bb46ec0fa037eda4828581', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9382f05c0e2dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_ddd94d2a80bb46ec0fa037eda4828581", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 19:31:58. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 120 \u0438\u0437 239 \\n \\n15.6 \u0412 \u0442\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435, \u0435\u0441\u043b\u0438 \u043f\u043e\u0434\u0437\u0435\u043c\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u0441\u0442\u0440\u043e\u0438\u0442\u0441\u044f \u0432 \u043a\u043e\u0442\u043b\u043e\u0432\u0430\u043d\u0435 \u043f\u043e\u0434 \u0437\u0430\u0449\u0438\u0442\u043e\u0439 \\n\"\u0441\u0442\u0435\u043d\u044b \u0432 \u0433\u0440\u0443\u043d\u0442\u0435\" \u0438\u043b\u0438 \u043e\u0433\u0440\u0430\u0436\u0434\u0435\u043d\u0438\u044f \u0438\u0437 \u0433\u0440\u0443\u043d\u0442\u043e\u0446\u0435\u043c\u0435\u043d\u0442\u043d\u044b\u0445 \u0441\u0432\u0430\u0439, \u0430 \u043d\u0435\u0441\u0443\u0449\u0438\u0439 \u043a\u0430\u0440\u043a\u0430\u0441 \u0441\u043e\u043e\u0440\u0443\u0436\u0435\u043d\u0438\u044f \u043c\u043e\u0436\u0435\u0442 \\n\u0438\u0441\u043f\u044b\u0442\u044b\u0432\u0430\u0442\u044c... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:31:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:02", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:32:02 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '3339', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '794235', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '432ms', 'x-request-id': 'req_05da6fcf498245999db2fcece08b771b', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9382f329d32df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:02", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_05da6fcf498245999db2fcece08b771b", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:02", "name": "llm_service", "levelname": "DEBUG", "message": "Maximum similarity: 0.872080484839924", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:02", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:02", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e \u043e\u0442 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0430\u044f \u0440\u0430\u0437\u0440\u0443\u0448\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u0430 \u0438 \u043f\u0440\u043e\u0434\u043b\u0435\u0432\u0430\u044f \u0441\u0440\u043e\u043a \u0441\u043b\u0443\u0436\u0431\u044b \u0437\u0434\u0430\u043d\u0438\u044f. \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432\u0430\u0436\u043d\u0430 \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u0432\u044b\u0441\u043e\u043a\u043e\u0433\u043e \u0443\u0440\u043e\u0432\u043d\u044f \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u0438\u043b\u0438 \u0430\u0433\u0440\u0435\u0441\u0441\u0438\u0432\u043d\u043e\u0439 \u0432\u043d\u0435\u0448\u043d\u0435\u0439 \u0441\u0440\u0435\u0434\u044b.\\n\\n------------------\\nReferences:\\n\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf, pages: 65, 119, 120\\n\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0435 \u0414\u043e\u043c\u0430_\u0421\u041f 31-105-2002 .pdf, pages: 10\\n', {'\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf', '\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0435 \u0414\u043e\u043c\u0430_\u0421\u041f 31-105-2002 .pdf'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:02", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:03", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:03", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='3eb04266-f3a3-47c0-bc03-384567a152d6'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:03", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:26", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:26", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:26", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:26", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='My name is Andrei'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:26", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x000002320CF4B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 32, 26, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2481, supergroup_chat_created=False, text='My name is Andrei'), update_id=881193627), <telegram.ext._callbackcontext.CallbackContext object at 0x00000232A6199A90>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:26", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x00000232326689A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:26", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='508a7a73-9faf-4bc9-a478-1a2ed703fdd6' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:26", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='508a7a73-9faf-4bc9-a478-1a2ed703fdd6'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:27", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:27", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x00000232326762A0>, 'My name is Andrei'), kwargs: {'chat_history': [HumanMessage(content='My name is Andrei', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e \u043e\u0442 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0430\u044f \u0440\u0430\u0437\u0440\u0443\u0448\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u0430 \u0438 \u043f\u0440\u043e\u0434\u043b\u0435\u0432\u0430\u044f \u0441\u0440\u043e\u043a \u0441\u043b\u0443\u0436\u0431\u044b \u0437\u0434\u0430\u043d\u0438\u044f. \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432\u0430\u0436\u043d\u0430 \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u0432\u044b\u0441\u043e\u043a\u043e\u0433\u043e \u0443\u0440\u043e\u0432\u043d\u044f \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u0438\u043b\u0438 \u0430\u0433\u0440\u0435\u0441\u0441\u0438\u0432\u043d\u043e\u0439 \u0432\u043d\u0435\u0448\u043d\u0435\u0439 \u0441\u0440\u0435\u0434\u044b.\\n\\n------------------\\nReferences:\\n\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf, pages: 65, 119, 120\\n\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0435 \u0414\u043e\u043c\u0430_\u0421\u041f 31-105-2002 .pdf, pages: 10', additional_kwargs={}, response_metadata={}), HumanMessage(content='Hello', additional_kwargs={}, response_metadata={}), AIMessage(content='Hello! How can I assist you today?', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:27", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000023230E68400>, 'json_data': {'input': [[5159, 836, 374, 27525, 72]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:27", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:27", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:32:27 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '77', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999994', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_48f80546193b2304c14312b709342a22', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9383a81c649185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:27", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_48f80546193b2304c14312b709342a22", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:27", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:27", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000023230E68400>, 'json_data': {'input': [[5159, 836, 374, 27525, 72]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:27", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:28", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:32:28 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '117', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999994', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_6faa78369f320eeadf1f57f3e6195df5', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9383acbe0b9185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:28", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_6faa78369f320eeadf1f57f3e6195df5", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:28", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000023230E68400>, 'json_data': {'input': [[27435, 37255, 34604, 35095, 37255, 53677, 25756, 662, 49520, 37255, 140, 247, 35448, 35889, 43896, 49520, 20976, 23784, 37255, 20807, 43896, 60376, 720, 19871, 56191, 16604, 56191, 34604, 20807, 20976, 140, 247, 1301, 100, 37255, 19871, 35095, 31274, 720, 56191, 16604, 34604, 20976, 17279, 60376, 140, 247, 28599, 27435, 20976, 1301, 247, 220, 51418, 56191, 34604, 34604, 31274, 51418, 20976, 49520, 31274, 43896, 2355, 34604, 20976, 19871, 19871, 31274, 1301, 247, 19871, 27435, 20976, 140, 247, 220, 67891, 56191, 25079, 56191, 34604, 37255, 93899, 31274, 31274, 23227, 20976, 720, 35095, 20976, 65014, 140, 102, 43896, 20807, 56191, 28599, 35095, 56191, 20807, 27435, 31274, 61565, 20976, 65014, 20976, 65014, 140, 223, 25079, 37255, 720, 20807, 37255, 23784, 140, 104, 19871, 20976, 35095, 56191, 220, 1049, 45458,... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:28", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:29", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:32:28 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '83', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998685', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '15ms', 'x-request-id': 'req_f4b11f231eb10a09d91179b77fa4f0e1', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9383b17f509185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:29", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_f4b11f231eb10a09d91179b77fa4f0e1", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:29", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000023230E68400>, 'json_data': {'input': [[39091, 31274, 20807, 31274, 19871, 35095, 56191, 34604, 19871, 35095, 16604, 20976, 28599, 35095, 34604, 20976, 31274, 35095, 56191, 65014, 140, 105, 19871, 35095, 16604, 37255, 2355, 31274, 1301, 244, 31274, 65014, 31274, 140, 102, 20807, 20976, 12, 27435, 20976, 39091, 39091, 41682, 20807, 37255, 65014, 140, 105, 20807, 20976, 38214, 20976, 1301, 98, 20976, 36551, 86491, 140, 247, 19871, 35095, 16604, 37255, 2355, 34604, 20976, 19871, 19871, 31274, 140, 247, 19871, 27435, 20976, 140, 247, 67891, 56191, 25079, 56191, 34604, 37255, 93899, 31274, 31274, 33006, 720, 19871, 23784, 35448, 39903, 220, 23227, 49520, 57855, 23784, 43896, 1301, 249, 5996, 33006, 33006, 720, 19871, 17279, 220, 20385, 13, 9413, 18216, 15, 13, 679, 24, 33006, 33006, 33006, 33006, 33006, 33006, 33006, 33006, 31274, 20807, 140, 244, 5619... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:29", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:29", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:32:29 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '274', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999784', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '2ms', 'x-request-id': 'req_d92a35d608a25b4339bfc69326ea6c68', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9383b3f84e9185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:29", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_d92a35d608a25b4339bfc69326ea6c68", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:29", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000023230E68400>, 'json_data': {'input': [[39091, 31274, 20807, 31274, 19871, 35095, 56191, 34604, 19871, 35095, 16604, 20976, 28599, 35095, 34604, 20976, 31274, 35095, 56191, 65014, 140, 105, 19871, 35095, 16604, 37255, 720, 31274, 1301, 244, 31274, 65014, 31274, 140, 102, 20807, 20976, 12, 27435, 20976, 39091, 39091, 41682, 20807, 37255, 65014, 140, 105, 20807, 20976, 38214, 20976, 1301, 98, 20976, 36551, 86491, 140, 247, 19871, 35095, 16604, 37255, 2355, 34604, 20976, 19871, 19871, 31274, 140, 247, 19871, 27435, 20976, 140, 247, 67891, 56191, 25079, 56191, 34604, 37255, 93899, 31274, 31274, 33006, 720, 19871, 16604, 20976, 25079, 23227, 34604, 37255, 16604, 31274, 65014, 2355, 33006, 33006, 49526, 33006, 19871, 17279, 220, 220, 17824, 13, 9413, 18216, 15, 13, 2366, 16, 33006, 33006, 33006, 33006, 31274, 20807, 140, 244, 56191, 20807, 56191, 34604,... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:29", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:31", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:32:30 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '298', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999790', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '2ms', 'x-request-id': 'req_8052f5de598c77641b3ab26d33beba76', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9383b9babe9185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:31", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_8052f5de598c77641b3ab26d33beba76", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:31", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000023230E68400>, 'json_data': {'input': [[39091, 31274, 20807, 31274, 19871, 35095, 56191, 34604, 19871, 35095, 16604, 20976, 28599, 35095, 34604, 20976, 31274, 35095, 56191, 65014, 140, 105, 19871, 35095, 16604, 37255, 720, 31274, 1301, 244, 31274, 65014, 31274, 140, 102, 20807, 20976, 12, 27435, 20976, 39091, 39091, 41682, 20807, 37255, 65014, 140, 105, 20807, 20976, 38214, 20976, 1301, 98, 20976, 36551, 86491, 140, 247, 19871, 35095, 16604, 37255, 720, 34604, 20976, 19871, 19871, 31274, 140, 247, 19871, 27435, 20976, 140, 247, 67891, 56191, 25079, 56191, 34604, 37255, 93899, 31274, 31274, 33006, 33006, 19871, 23784, 35448, 39903, 256, 23227, 49520, 57855, 23784, 43896, 1301, 249, 7714, 28599, 17279, 220, 21851, 13, 9413, 18216, 15, 13, 2366, 18, 33006, 33006, 33006, 33006, 720, 19871, 56191, 35095, 31274, 28599, 16604, 86491, 36551, 31274, 33006,... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:31", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:31", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:32:31 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '127', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999835', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '1ms', 'x-request-id': 'req_8b69bbb558d48d5644b2ab85f42243c7', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9383c0bda49185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:31", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_8b69bbb558d48d5644b2ab85f42243c7", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:31", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 19:32:31. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u041a\u0410\u0420\u0422\u0410 \u0417 \u0433 . \u0420\u0410\u0419 \u041e \u041d \u0418 \u0420\u041e \u0412\u0410\u041d \u0418 \u0415 \\n\u0421\u0415\u0412\u0415\u0420\u041d\u041e\u0419 \u0427\u0410\u0421\u0422\u0418 \\n\u0415\u0412\u0420\u041e\u041f \u0415\u0419 \u0421\u041a\u041e \u0419  \u0422\u0415\u0420\u0420\u0418 \u0422\u041e \u0420\u0418 \u0418  \\n\u0420\u041e\u0421\u0421\u0418 \u0419\u0421\u041a\u041e\u0419  \u0424\u0415\u0414\u0415\u0420\u0410\u0426\u0418\u0418 \u041f\u041e \\n\u0422\u041e\u041b\u0429 \u0418\u041d\u0415 \u0421\u0422\u0415\u041d\u041a\u0418 \u0413\u041e\u041b\u041e\u041b\u0401\u0414\u0410 \\n\u041d\u0410 \u0412\u042b\u0421\u041e\u0422\u0415 200 \u041c\\nF \\n4 \\np i\\n\u043f-\u043e\u0432 \u0420\u044b\u0431\u0430\u0447\u0438\u0439/\\n/ V /\\n\u0411 \u0410 \u0420 \u0415 \u041d \u0426 \u0415 \u0412 \u041e\\n\u041c\u041e\u0420... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:31", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:32", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:32:32 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '438', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '798334', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '124ms', 'x-request-id': 'req_01db78078a85a5f62e8b3b304525eaa0', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9383c3bb8bee27-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:32", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_01db78078a85a5f62e8b3b304525eaa0", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:32", "name": "llm_service", "levelname": "DEBUG", "message": "Maximum similarity: 0.7657428766878204", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:32", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity threshold not met. Returning answer without references.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:32", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('Nice to meet you, Andrei! How can I help you today?', None)", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:32", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:33", "name": "handlers", "levelname": "INFO", "message": "Sent response to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:33", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='508a7a73-9faf-4bc9-a478-1a2ed703fdd6'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:33", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:57", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:57", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:57", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:57", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u043a\u0430\u043a \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044c \u0441\u0442\u0435\u043d \u0434\u043b\u044f \u0434\u043e\u043c\u0430 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:57", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x000002320CF4B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 32, 56, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2483, supergroup_chat_created=False, text='\u043a\u0430\u043a \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044c \u0441\u0442\u0435\u043d \u0434\u043b\u044f \u0434\u043e\u043c\u0430 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438'), update_id=881193628), <telegram.ext._callbackcontext.CallbackContext object at 0x000002323259EF90>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:57", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x00000232326689A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:57", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='fcff35d5-c52b-4039-bc82-308ceff3dcac' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:57", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='fcff35d5-c52b-4039-bc82-308ceff3dcac'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:57", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:57", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x00000232326762A0>, '\u043a\u0430\u043a \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044c \u0441\u0442\u0435\u043d \u0434\u043b\u044f \u0434\u043e\u043c\u0430 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438'), kwargs: {'chat_history': [HumanMessage(content='\u043a\u0430\u043a \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044c \u0441\u0442\u0435\u043d \u0434\u043b\u044f \u0434\u043e\u043c\u0430 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438', additional_kwargs={}, response_metadata={}), HumanMessage(content='My name is Andrei', additional_kwargs={}, response_metadata={}), AIMessage(content='Nice to meet you, Andrei! How can I help you today?', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043d\u0443\u0436\u043d\u0430 \u043b\u0438 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430\u043c', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0414\u0430, \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u043e\u0432 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u0430. \u041e\u043d\u0430 \u0437\u0430\u0449\u0438\u0449\u0430\u0435\u0442 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e \u043e\u0442 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0432\u043b\u0430\u0433\u0438, \u043f\u0440\u0435\u0434\u043e\u0442\u0432\u0440\u0430\u0449\u0430\u044f \u0440\u0430\u0437\u0440\u0443\u0448\u0435\u043d\u0438\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u0430 \u0438 \u043f\u0440\u043e\u0434\u043b\u0435\u0432\u0430\u044f \u0441\u0440\u043e\u043a \u0441\u043b\u0443\u0436\u0431\u044b \u0437\u0434\u0430\u043d\u0438\u044f. \u0413\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044f \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u0432\u0430\u0436\u043d\u0430 \u0432 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u0432\u044b\u0441\u043e\u043a\u043e\u0433\u043e \u0443\u0440\u043e\u0432\u043d\u044f \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u0438\u043b\u0438 \u0430\u0433\u0440\u0435\u0441\u0441\u0438\u0432\u043d\u043e\u0439 \u0432\u043d\u0435\u0448\u043d\u0435\u0439 \u0441\u0440\u0435\u0434\u044b.\\n\\n------------------\\nReferences:\\n\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf, pages: 65, 119, 120\\n\u041a\u0430\u0440\u043a\u0430\u0441\u043d... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002323269F6A0>, 'json_data': {'input': [[4898, 16248, 63229, 2233, 18482, 14257, 1830, 67124, 3114, 56008, 18868, 5372, 20440, 7952, 12507, 1506, 5927, 11562, 23630, 90877, 66144, 16742, 21923, 31443, 55523]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:32:57 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '41', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999974', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_2a27dbe1615fba2e240daa600b5a640f', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e938466af14ee33-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_2a27dbe1615fba2e240daa600b5a640f", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:57", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002323269F6A0>, 'json_data': {'input': [[4898, 16248, 63229, 2233, 18482, 14257, 1830, 67124, 3114, 56008, 18868, 5372, 20440, 7952, 12507, 1506, 5927, 11562, 23630, 90877, 66144, 16742, 21923, 31443, 55523]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:32:58 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '52', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999974', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_4978e601e98a1531d7037cb4ff6b8c42', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e938468cabbee33-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_4978e601e98a1531d7037cb4ff6b8c42", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002323269F6A0>, 'json_data': {'input': [[2297, 89327, 14332, 10298, 78876, 64322, 6856, 11047, 10298, 8164, 7753, 8131, 56515, 44786, 29619, 21708, 2355, 20807, 13, 16, 35448, 94722, 38098, 79370, 57186, 11, 63229, 35682, 39988, 20440, 78876, 64322, 1506, 49526, 74598, 51412, 5524, 11047, 67124, 39865, 41873, 96485, 15458, 17766, 39988, 18034, 18437, 23680, 39988, 93099, 16742, 5524, 11047, 17766, 4898, 16494, 55617, 1830, 67187, 8131, 56515, 12648, 6578, 35875, 1482, 10298, 13, 720, 55258, 18437, 23680, 44858, 93099, 1506, 11562, 17766, 23311, 20346, 50819, 13373, 18868, 5372, 3865, 11122, 7094, 39280, 11, 99396, 5372, 39900, 5524, 7820, 17721, 13433, 2297, 12507, 23934, 11562, 17766, 7975, 9542, 39900, 720, 17394, 12394, 32985, 14082, 8341, 74828, 13, 35889, 17721, 56999, 44065, 18868, 79686, 72060, 7975, 40251, 70129, 21204, 23934, 7820, 78746, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:32:58 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '88', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999522', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '5ms', 'x-request-id': 'req_e26aad529e7afeda59868575f999ca6a', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93846b1ea9ee33-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_e26aad529e7afeda59868575f999ca6a", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002323269F6A0>, 'json_data': {'input': [[1830, 67124, 3114, 6856, 63233, 5173, 41056, 44613, 10693, 26, 33006, 12, 99396, 17618, 11562, 7753, 29256, 31203, 4329, 23311, 12415, 18154, 46339, 1830, 16494, 41873, 54686, 28114, 67124, 23680, 1506, 7952, 18226, 62776, 13373, 5927, 49899, 1532, 5524, 8341, 21708, 720, 1830, 67124, 3114, 23630, 2156, 38722, 17394, 18999, 5927, 11122, 7094, 39280, 26, 33006, 12, 14257, 68462, 13433, 21022, 2156, 98695, 76559, 39127, 39988, 21022, 2233, 6578, 8131, 3865, 39103, 5927, 11562, 37277, 1506, 10693, 21923, 14476, 47295, 5173, 33295, 39280, 26, 33006, 12, 5524, 15088, 52866, 17618, 6850, 7753, 30436, 74828, 29118, 39900, 81803, 2233, 50693, 62776, 11047, 67124, 3114, 6856, 16742, 7740, 21599, 3114, 30656, 31203, 6148, 23297, 4898, 16742, 21599, 2156, 7753, 15752, 47273, 13373, 720, 8164, 44075, 8164, 31203, 4329, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:59", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:32:58 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '175', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998542', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '17ms', 'x-request-id': 'req_7bcec7c443cd6f63083611374b433fd0', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93846d3a80ee33-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:59", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_7bcec7c443cd6f63083611374b433fd0", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:59", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002323269F6A0>, 'json_data': {'input': [[27435, 11320, 6578, 8131, 81301, 17165, 1532, 67445, 39103, 25190, 117, 74828, 30392, 1482, 56008, 94071, 12561, 19479, 16494, 1506, 70129, 21204, 18154, 28599, 17279, 220, 9263, 13, 9423, 966, 20440, 720, 15752, 13, 25079, 6578, 9542, 24803, 45458, 23630, 90877, 66144, 16742, 21923, 3114, 13, 49526, 19871, 44075, 40251, 4329, 11047, 10298, 8164, 7753, 8131, 3865, 22911, 20879, 29256, 56008, 39900, 28114, 1840, 87878, 720, 12, 18, 11, 16, 37386, 19871, 26, 49526, 8164, 2233, 9706, 48181, 56008, 61379, 20879, 29256, 56008, 39900, 28114, 1840, 87878, 720, 12463, 5524, 38521, 26, 49526, 1830, 10298, 8164, 7753, 8131, 3865, 22911, 5927, 2156, 38521, 2233, 5372, 2156, 47295, 5927, 35387, 3865, 10693, 1506, 720, 508, 37386, 34, 13, 49526, 85587, 81376, 47805, 1532, 90189, 6578, 8131, 81301, 17165, 10693, 45658, 15... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:59", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:59", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:32:59 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '172', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999256', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '8ms', 'x-request-id': 'req_dca8b47eccc3dd3a65de19107b06926a', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93846ffebcee33-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:59", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_dca8b47eccc3dd3a65de19107b06926a", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:59", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x000002323269F6A0>, 'json_data': {'input': [[3226, 33006, 20807, 18437, 4655, 8164, 77495, 11047, 67124, 39865, 41873, 96485, 15458, 12182, 7952, 29256, 44155, 13433, 50819, 12561, 16494, 5372, 94975, 74726, 13373, 25756, 9239, 41873, 97341, 39127, 44786, 720, 8164, 6856, 7753, 10693, 13999, 6735, 4329, 10693, 11, 21022, 50945, 59138, 5927, 38098, 79370, 71829, 10693, 7820, 39103, 12426, 11, 28114, 15298, 2233, 35667, 1506, 90457, 67745, 90211, 40590, 6148, 44065, 320, 6578, 7486, 2297, 17721, 7094, 44065, 8, 720, 8164, 12507, 86610, 18999, 7740, 48835, 1532, 90457, 67745, 14257, 4898, 3114, 17766, 19175, 14391, 7975, 50506, 220, 16, 25, 20, 13, 720, 24, 13, 17, 13, 16, 13, 19, 39903, 14009, 93781, 18999, 5927, 41291, 10589, 94520, 1532, 81757, 33793, 3114, 3865, 8131, 54686, 7952, 12507, 6856, 11047, 67124, 3114, 20219, 1506, 14476, 9542, 44786, 45916... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:32:59", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:33:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:32:59 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '131', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999087', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '10ms', 'x-request-id': 'req_75fb1c506b225010f0cc0631bf9e38d1', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e938472eb8cee33-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:33:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_75fb1c506b225010f0cc0631bf9e38d1", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:33:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"You are a project assistant from the consultant side on design and construction projects. If you don't know the answer, say that you don't know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 19:33:00. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0440\u0430\u0441\u0447\u0435\u0442\u043e\u0432 \u0442\u0435\u043c\u043f\u0435\u0440\u0430\u0442\u0443\u0440\u043d\u044b\u0445 \u043f\u043e\u043b\u0435\u0439  \\n\u041d.1 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438, \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0439 \u0434\u043b\u044f \u0440\u0430\u0441\u0447\u0435\u0442\u0430 \\n  \\n\u0421\u0442\u0435\u043d\u0430 \u0441 \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u043e\u043d\u043d\u043e\u0439 \u0444\u0430\u0441\u0430\u0434\u043d\u043e\u0439 \u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439 \u0441 \u0442\u043e\u043d\u043a\u0438\u043c \u0448\u0442\u0443\u043a\u0430\u0442\u0443\u0440\u043d\u044b\u043c \u0441\u043b\u043e\u0435\u043c. \\n\u0424\u0430\u0441\u0430\u0434\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430 \u043c\u043e\u043d\u0442\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u043d\u0430 \u0441\u0442\u0435\u043d\u0443 \u0437... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:33:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:33:05", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:33:04 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '4650', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '795865', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '310ms', 'x-request-id': 'req_77ff8d69294a1c9e1084e2c41cddf62d', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93847639c0be97-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:33:05", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_77ff8d69294a1c9e1084e2c41cddf62d", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:33:05", "name": "llm_service", "levelname": "DEBUG", "message": "Maximum similarity: 0.8480864156645662", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:33:05", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:33:05", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u041f\u0440\u0438 \u0432\u044b\u0431\u043e\u0440\u0435 \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044f \u0434\u043b\u044f \u0441\u0442\u0435\u043d \u0434\u043e\u043c\u0430 \u0432 \u041c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0444\u0430\u043a\u0442\u043e\u0440\u043e\u0432:\\n\\n1. <b>\u0422\u0435\u043f\u043b\u043e\u043f\u0440\u043e\u0432\u043e\u0434\u043d\u043e\u0441\u0442\u044c</b>: \u0412\u044b\u0431\u0438\u0440\u0430\u0439\u0442\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b \u0441 \u043d\u0438\u0437\u043a\u0438\u043c \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442\u043e\u043c \u0442\u0435\u043f\u043b\u043e\u043f\u0440\u043e\u0432\u043e\u0434\u043d\u043e\u0441\u0442\u0438, \u0447\u0442\u043e\u0431\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c \u0445\u043e\u0440\u043e\u0448\u0443\u044e \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044e. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043c\u0438\u043d\u0435\u0440\u0430\u043b\u044c\u043d\u0430\u044f \u0432\u0430\u0442\u0430 \u0438 \u043f\u0435\u043d\u043e\u043f\u043e\u043b\u0438\u0441\u0442\u0438\u0440\u043e\u043b \u0438\u043c\u0435\u044e\u0442 \u043d\u0438\u0437\u043a\u0443\u044e \u0442\u0435\u043f\u043b\u043e\u043f\u0440\u043e\u0432\u043e\u0434\u043d\u043e\u0441\u0442\u044c.\\n\\n2. <b>\u0412\u043b\u0430\u0433\u043e\u0441\u0442\u043e\u0439\u043a\u043e\u0441\u0442\u044c</b>: \u0412 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u041c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438, \u0433\u0434\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b \u0447\u0430\u0441\u0442\u044b\u0435 \u043e\u0441\u0430\u0434\u043a\u0438, \u0432\u0430\u0436\u043d\u043e \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0432\u043b\u0430\u0433\u043e\u0441\u0442\u043e\u0439\u043a\u0438\u0439 \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044c \u0438\u043b\u0438 \u043f\u0440\u0435\u0434\u0443\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043c\u0435\u0440\u044b \u0437\u0430\u0449\u0438\u0442\u044b \u043e\u0442 \u0432\u043b\u0430\u0433\u0438.\\n\\n3. <b>\u041f\u0430\u0440\u043e\u043f\u0440\u043e\u043d\u0438\u0446\u0430\u0435\u043c\u043e\u0441\u0442\u044c</b>: \u0415\u0441\u043b\u0438 \u0441\u0442\u0435\u043d\u044b \u0434\u043e\u043c\u0430 \"\u0434\u044b\u0448\u0430\u0442\", \u0432\u044b\u0431\u0438\u0440\u0430\u0439\u0442\u0435 \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u0438 \u0441 \u0432\u044b\u0441\u043e\u043a\u043e\u0439 \u043f\u0430\u0440\u043e\u043f\u0440\u043e\u043d\u0438\u0446\u0430\u0435\u043c\u043e\u0441\u0442\u044c\u044e, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a \u043c\u0438\u043d\u0435\u0440\u0430\u043b\u044c\u043d\u0430\u044f \u0432\u0430\u0442\u0430, \u0447\u0442\u043e\u0431\u044b \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u043d\u0430\u043a\u043e\u043f\u043b\u0435\u043d\u0438\u044f \u0432\u043b\u0430\u0433\u0438 \u0432\u043d\u0443\u0442\u0440\u0438 \u0441\u0442\u0435\u043d.\\n\\n4. <b>\u041c\u043e\u043d\u0442\u0430\u0436 \u0438 \u0440\u0435\u043c\u043e\u043d\u0442\u043e\u043f\u0440\u0438\u0433\u043e\u0434\u043d\u043e\u0441\u0442\u044c</b>: \u041e\u0431\u0440\u0430\u0442\u0438\u0442\u0435 \u0432\u043d\u0438\u043c\u0430\u043d\u0438\u0435 \u043d\u0430 \u0443\u0434\u043e\u0431\u0441\u0442\u0432\u043e \u043c\u043e\u043d\u0442\u0430\u0436\u0430 \u0438 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0437\u0430\u043c\u0435\u043d\u044b \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044f \u0432 \u0441\u043b\u0443\u0447\u0430\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438.\\n\\n5. <b>\u042d\u043a\u043e\u043b\u043e\u0433\u0438\u0447\u043d\u043e\u0441\u0442\u044c \u0438 \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u043d\u043e\u0441\u0442\u044c</b>: \u0423\u0431\u0435\u0434\u0438\u0442\u0435\u0441\u044c, \u0447\u0442\u043e \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u044b\u0439 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b \u0431\u0435\u0437\u043e\u043f\u0430\u0441\u0435\u043d \u0434\u043b\u044f \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u044f \u0438 \u043e\u043a\u0440\u0443\u0436\u0430\u044e\u0449\u0435\u0439 \u0441\u0440\u0435\u0434\u044b.\\n\\n6. <b>\u0421\u0442\u043e\u0438\u043c\u043e\u0441\u0442\u044c</b>: \u0421\u0440\u0430\u0432\u043d... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:33:05", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:33:06", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:33:06", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='fcff35d5-c52b-4039-bc82-308ceff3dcac'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:33:06", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:33", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:33", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:33", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:33", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:33", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x000002320CF4B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 41, 32, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2485, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193629), <telegram.ext._callbackcontext.CallbackContext object at 0x00000232A6199B00>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:33", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x000002323274FE20>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:34", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:34", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:37", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:37", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:37", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:37", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:ISO Regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:37", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x000002320CF4B7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:ISO Regulations', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), id='1051116659867244777', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 41, 33, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2486, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations'),), (... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:37", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x0000023232591BC0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:37", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\iso_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:37", "name": "handlers", "levelname": "DEBUG", "message": "Found 5 valid files in folder_path='E:\\knowledge_base\\iso_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:37", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x00000232326762A0>, 'E:\\\\knowledge_base\\\\iso_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:37", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\iso_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:37", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x00000232326762A0>, 'E:\\\\knowledge_base\\\\iso_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:37", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\iso_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:37", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:37", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\iso_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:37", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:37", "name": "handlers", "levelname": "INFO", "message": "Knowledge base 'ISO Regulations' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:37", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:55", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:55", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:55", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:55", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='What is BIM level 2'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:55", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x000002320CF4B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 41, 54, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2488, supergroup_chat_created=False, text='What is BIM level 2'), update_id=881193631), <telegram.ext._callbackcontext.CallbackContext object at 0x000002323259D470>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:55", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x00000232A55FEA70>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:55", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='d2152fa4-385c-4709-b465-5402866d1b69' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:55", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='d2152fa4-385c-4709-b465-5402866d1b69'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:55", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:55", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x00000232326762A0>, 'What is BIM level 2'), kwargs: {'chat_history': [HumanMessage(content='What is BIM level 2', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u043a\u0430\u043a \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044c \u0441\u0442\u0435\u043d \u0434\u043b\u044f \u0434\u043e\u043c\u0430 \u0432 \u043c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438', additional_kwargs={}, response_metadata={}), AIMessage(content='\u041f\u0440\u0438 \u0432\u044b\u0431\u043e\u0440\u0435 \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044f \u0434\u043b\u044f \u0441\u0442\u0435\u043d \u0434\u043e\u043c\u0430 \u0432 \u041c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0444\u0430\u043a\u0442\u043e\u0440\u043e\u0432:\\n\\n1. <b>\u0422\u0435\u043f\u043b\u043e\u043f\u0440\u043e\u0432\u043e\u0434\u043d\u043e\u0441\u0442\u044c</b>: \u0412\u044b\u0431\u0438\u0440\u0430\u0439\u0442\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b \u0441 \u043d\u0438\u0437\u043a\u0438\u043c \u043a\u043e\u044d\u0444\u0444\u0438\u0446\u0438\u0435\u043d\u0442\u043e\u043c \u0442\u0435\u043f\u043b\u043e\u043f\u0440\u043e\u0432\u043e\u0434\u043d\u043e\u0441\u0442\u0438, \u0447\u0442\u043e\u0431\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c \u0445\u043e\u0440\u043e\u0448\u0443\u044e \u0442\u0435\u043f\u043b\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u044e. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043c\u0438\u043d\u0435\u0440\u0430\u043b\u044c\u043d\u0430\u044f \u0432\u0430\u0442\u0430 \u0438 \u043f\u0435\u043d\u043e\u043f\u043e\u043b\u0438\u0441\u0442\u0438\u0440\u043e\u043b \u0438\u043c\u0435\u044e\u0442 \u043d\u0438\u0437\u043a\u0443\u044e \u0442\u0435\u043f\u043b\u043e\u043f\u0440\u043e\u0432\u043e\u0434\u043d\u043e\u0441\u0442\u044c.\\n\\n2. <b>\u0412\u043b\u0430\u0433\u043e\u0441\u0442\u043e\u0439\u043a\u043e\u0441\u0442\u044c</b>: \u0412 \u0443\u0441\u043b\u043e\u0432\u0438\u044f\u0445 \u041c\u043e\u0441\u043a\u043e\u0432\u0441\u043a\u043e\u0439 \u043e\u0431\u043b\u0430\u0441\u0442\u0438, \u0433\u0434\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u044b \u0447\u0430\u0441\u0442\u044b\u0435 \u043e\u0441\u0430\u0434\u043a\u0438, \u0432\u0430\u0436\u043d\u043e \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u0432\u043b\u0430\u0433\u043e\u0441\u0442\u043e\u0439\u043a\u0438\u0439 \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u044c \u0438\u043b\u0438 \u043f\u0440\u0435\u0434\u0443\u0441\u043c\u043e\u0442\u0440\u0435\u0442\u044c \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043c\u0435\u0440\u044b \u0437\u0430\u0449\u0438\u0442\u044b \u043e\u0442 \u0432\u043b\u0430\u0433\u0438.\\n\\n3. <b>\u041f\u0430\u0440\u043e\u043f\u0440\u043e\u043d\u0438\u0446\u0430\u0435\u043c\u043e\u0441\u0442\u044c</b>: \u0415\u0441\u043b\u0438 \u0441\u0442\u0435\u043d\u044b \u0434\u043e\u043c\u0430 \"\u0434\u044b\u0448\u0430\u0442\", \u0432\u044b\u0431\u0438\u0440\u0430\u0439\u0442\u0435 \u0443\u0442\u0435\u043f\u043b\u0438\u0442\u0435\u043b\u0438 \u0441 \u0432\u044b\u0441\u043e\u043a\u043e\u0439 \u043f\u0430\u0440\u043e\u043f\u0440\u043e\u043d\u0438\u0446\u0430\u0435\u043c\u043e\u0441\u0442\u044c\u044e, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a \u043c\u0438\u043d\u0435\u0440\u0430\u043b\u044c\u043d\u0430... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000023230E68680>, 'json_data': {'input': [[3923, 374, 426, 1829, 2237, 220, 17]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:41:55 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '186', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999993', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_868514a3ea5a3e02248d756c20d09621', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9391872fd64ac3-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_868514a3ea5a3e02248d756c20d09621", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:55", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000023230E684A0>, 'json_data': {'input': [[3923, 374, 426, 1829, 2237, 220, 17]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:41:55 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '41', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999993', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_4114f88a6f36f5e66e40289e13545eee', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e939189f9c94ac3-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_4114f88a6f36f5e66e40289e13545eee", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000023230E684A0>, 'json_data': {'input': [[62619, 42674, 323, 16099, 2065, 315, 2038, 922, 720, 5957, 826, 323, 8431, 15009, 4375, 11, 2737, 4857, 720, 26125, 61966, 320, 33, 1829, 8, 4194, 2345, 8245, 6373, 720, 985, 4857, 2038, 61966, 4194, 2345, 198, 5920, 4194, 20, 25, 720, 15712, 34423, 5603, 311, 2038, 6373, 198, 16, 197, 36020, 198, 2028, 2246, 30202, 279, 16565, 323, 8670, 369, 4868, 34423, 2038, 6373, 720, 266, 264, 6566, 315, 48261, 7633, 439, 1054, 24177, 2038, 61966, 320, 33, 1829, 8, 4184, 311, 279, 22705, 4194, 5162, 1135, 720, 20473, 9520, 323, 439, 4613, 304, 22705, 4194, 220, 5162, 1135, 12, 16, 11, 439, 1664, 439, 279, 4868, 34423, 6373, 315, 16614, 720, 26125, 430, 374, 12457, 11, 3549, 11, 15590, 323, 9967, 439, 961, 315, 11, 477, 304, 12976, 311, 11, 904, 1023, 720, 2381, 54679, 11, 2447, 11, 9513, 11, 2027, 477, 2532, 627, 2181,... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:41:56 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '146', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999440', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '6ms', 'x-request-id': 'req_486c28edb382d3fe12dbb09cbb15c794', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93918c6bad4ac3-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_486c28edb382d3fe12dbb09cbb15c794", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000023230E684A0>, 'json_data': {'input': [[7497, 40, 35653, 57994, 198, 42674, 323, 16099, 2065, 315, 2038, 922, 720, 5957, 826, 323, 8431, 15009, 4375, 11, 2737, 720, 24177, 2038, 61966, 4194, 5462, 1829, 8, 4194, 2345, 8245, 720, 43573, 1701, 4857, 2038, 61966, 198, 5920, 220, 18, 25, 90396, 10474, 315, 279, 12032, 198, 7497, 4194, 965, 4194, 25141, 4194, 5162, 1135, 57064, 18, 25, 2366, 15]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:41:56 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '42', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999937', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_0ff8e65e70a2a13612693845b5fae086', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93918ffe934ac3-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_0ff8e65e70a2a13612693845b5fae086", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000023230E684A0>, 'json_data': {'input': [[62619, 42674, 323, 16099, 2065, 315, 2038, 922, 720, 5957, 826, 323, 8431, 15009, 4375, 11, 2737, 4857, 720, 26125, 61966, 320, 33, 1829, 8, 4194, 2345, 8245, 6373, 720, 985, 4857, 2038, 61966, 4194, 2345, 198, 5920, 4194, 17, 25, 720, 39221, 10474, 315, 279, 12032, 198, 16, 197, 36020, 198, 2028, 2246, 30202, 8670, 369, 2038, 6373, 11, 304, 279, 1376, 315, 264, 6373, 720, 4734, 11, 2949, 279, 2317, 315, 279, 9889, 10474, 315, 12032, 323, 279, 30098, 315, 2038, 2949, 433, 11, 720, 985, 4857, 2038, 61966, 627, 2028, 2246, 649, 387, 9435, 311, 682, 4595, 315, 12032, 323, 555, 682, 4595, 323, 12562, 315, 11351, 11, 15851, 720, 1073, 279, 12146, 53678, 8446, 627, 17, 197, 20935, 1413, 15407, 198, 791, 2768, 9477, 527, 14183, 311, 304, 279, 1495, 304, 1778, 264, 1648, 430, 1063, 477, 682, 315, 872, 2262, 720, 104... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:41:57 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '146', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999560', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '5ms', 'x-request-id': 'req_2065c5218bb11eb872cca9b6309f52f0', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93919318794ac3-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_2065c5218bb11eb872cca9b6309f52f0", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000023230E684A0>, 'json_data': {'input': [[7497, 40, 35653, 57994, 198, 42674, 323, 16099, 2065, 315, 2038, 922, 720, 5957, 826, 323, 8431, 15009, 4375, 11, 2737, 720, 24177, 2038, 61966, 320, 33, 1829, 8, 482, 8245, 720, 43573, 1701, 4857, 2038, 61966, 198, 5920, 220, 16, 25, 76872, 323, 16565, 198, 7497, 4194, 965, 4194, 25141, 4194, 5162, 1135, 57064, 16, 25, 679, 23]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:41:57 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '65', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999940', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_71e1a330ba793ec291cb0f30c7f9fad9', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9391959a4a4ac3-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_71e1a330ba793ec291cb0f30c7f9fad9", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"You are a project assistant from the consultant side on design and construction projects. If you don't know the answer, say that you don't know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 19:41:57. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\\ufeff\\nOrganization and digitization of information about \\nbuildings and civil engineering works, including building \\ninformation modelling (BIM)\\xa0\u2014 Information management \\nusing building information modelling\\... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:41:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:42:01", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:42:00 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '2778', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '797594', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '180ms', 'x-request-id': 'req_f0374641ed847470563fd1f61c70989b', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9391983e2aee1c-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:42:01", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_f0374641ed847470563fd1f61c70989b", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:42:01", "name": "llm_service", "levelname": "DEBUG", "message": "Maximum similarity: 0.8105264673051262", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:42:01", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:42:01", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('BIM Level 2 refers to a specific level of maturity in Building Information Modelling (BIM) processes. It represents a managed 3D environment with data attached, but created in separate discipline models. These models are not necessarily integrated into a single shared model but are exchanged between different project participants to ensure collaborative working.\\n\\nKey characteristics of BIM Level 2 include:\\n\\n\u2022 <b>Collaboration</b>: Different disciplines create their own 3D models, which are then shared among team members using a common data environment (CDE). This facilitates better coordination and reduces clashes between different building systems.\\n\\n\u2022 <b>Data Management</b>: BIM Level 2 involves the use of standardized file formats, such as IFC (Industry Foundation Classes) or COBie (Construction Operations Building Information Exchange), to ensure that information can be easily shared and understood by all parties involved.\\n\\n... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:42:01", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:42:01", "name": "handlers", "levelname": "INFO", "message": "Sent response with source files to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:42:02", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='d2152fa4-385c-4709-b465-5402866d1b69'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:42:02", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:42:53", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:42:53", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:42:53", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:42:53", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:42:53", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x000002320CF4B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 42, 52, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2490, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193632), <telegram.ext._callbackcontext.CallbackContext object at 0x0000023232B80910>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:42:53", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x000002323274F0A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:42:53", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:42:53", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:04", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:05", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:05", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:05", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:05", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x000002320CF4B7D0>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), id='1051116661648474309', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 42, 53, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2491, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations')... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:05", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x0000023232591FE0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:05", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:05", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:05", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x00000232326762A0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:05", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:05", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x00000232326762A0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:06", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:06", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:06", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:06", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:06", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:06", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:17", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:18", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:18", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:18", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='what is BIM level 3'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:18", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x000002320CF4B7D0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 11, 27, 16, 43, 17, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2493, supergroup_chat_created=False, text='what is BIM level 3'), update_id=881193634), <telegram.ext._callbackcontext.CallbackContext object at 0x0000023232B82A50>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:18", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x00000232A5C544F0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:18", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='d0e7175e-78d7-4ae6-b124-fc88014033ca' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:18", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='d0e7175e-78d7-4ae6-b124-fc88014033ca'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:18", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:18", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x00000232326762A0>, 'what is BIM level 3'), kwargs: {'chat_history': [HumanMessage(content='what is BIM level 3', additional_kwargs={}, response_metadata={}), HumanMessage(content='What is BIM level 2', additional_kwargs={}, response_metadata={}), AIMessage(content='BIM Level 2 refers to a specific level of maturity in Building Information Modelling (BIM) processes. It represents a managed 3D environment with data attached, but created in separate discipline models. These models are not necessarily integrated into a single shared model but are exchanged between different project participants to ensure collaborative working.\\n\\nKey characteristics of BIM Level 2 include:\\n\\n\u2022 <b>Collaboration</b>: Different disciplines create their own 3D models, which are then shared among team members using a common data environment (CDE). This facilitates better coordination and reduces clashes between different build... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000023232B3C680>, 'json_data': {'input': [[12840, 374, 426, 1829, 2237, 220, 18]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:43:18 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '113', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999993', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_d5f4bb0a8dd622d465bcd6c330f42fe6', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93938f2a694ab6-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_d5f4bb0a8dd622d465bcd6c330f42fe6", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:18", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000023232B3D580>, 'json_data': {'input': [[12840, 374, 426, 1829, 2237, 220, 18]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:19", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:43:18 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '109', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999993', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_65fde3a66703e749c57ed56fefee2468', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9393918bfb4ab6-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:19", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_65fde3a66703e749c57ed56fefee2468", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:19", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000023232B3D580>, 'json_data': {'input': [[19871, 17279, 220, 5495, 13, 9423, 966, 13, 679, 23, 64571, 8341, 17766, 44065, 7740, 58317, 12394, 32985, 14082, 8341, 17766, 44065, 38098, 79370, 57186, 13, 35448, 2297, 47805, 44065, 29619, 21956, 18999, 13, 28599, 20807, 1840, 17279, 220, 4103, 12, 1721, 12, 1049, 18, 320, 2297, 43896, 9136, 38972, 9882, 10298, 452, 220, 16, 340, 19871, 49899, 73226, 64292, 20879, 220, 777, 7952, 15298, 38722, 2233, 4329, 220, 679, 23, 25756, 13, 97990, 220, 5495, 13, 9423, 966, 13, 679, 23, 198, 74598, 96256, 1506, 220, 845, 198, 25079, 92533, 93781, 5372, 5524, 91146, 1830, 97065, 27437, 522, 406, 67, 24497, 2001, 21599, 3114, 30656, 2233, 17766, 39900, 18034, 17766, 40590, 23934, 14391, 7975, 50506, 220, 914, 220, 931, 220, 931, 6850, 32330, 8131, 28089, 13999, 12, 44646, 6856, 63233, 7740, 6850, 32330, 8131, 28089, 1... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:19", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:19", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:43:19 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '95', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998881', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '13ms', 'x-request-id': 'req_3cc6ba895361feea8cf2ba2fa766a704', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e939393cd634ab6-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:19", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_3cc6ba895361feea8cf2ba2fa766a704", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:19", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000023232B3D580>, 'json_data': {'input': [[19871, 17279, 220, 5495, 13, 9423, 966, 13, 679, 23, 64571, 8341, 17766, 44065, 7740, 58317, 12394, 32985, 14082, 8341, 17766, 44065, 38098, 79370, 57186, 13, 35448, 2297, 47805, 44065, 29619, 21956, 18999, 13, 28599, 20807, 1840, 17279, 220, 4103, 12, 1721, 12, 1049, 18, 320, 2297, 43896, 9136, 38972, 9882, 10298, 452, 220, 16, 340, 19871, 49899, 73226, 64292, 20879, 220, 777, 7952, 15298, 38722, 2233, 4329, 220, 679, 23, 25756, 13, 97990, 220, 5495, 13, 9423, 966, 13, 679, 23, 198, 74598, 96256, 1506, 220, 8874, 198, 25079, 92533, 93781, 5372, 5524, 91146, 1830, 97065, 27437, 522, 406, 67, 24497, 2001, 21599, 3114, 30656, 2233, 17766, 39900, 18034, 17766, 40590, 23934, 14391, 7975, 50506, 220, 914, 220, 931, 220, 931, 6850, 32330, 8131, 28089, 13999, 12, 44646, 6856, 63233, 7740, 6850, 32330, 8131, 28089, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:19", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:43:19 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '191', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999037', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '11ms', 'x-request-id': 'req_eb0bd3d5c85cc1f504d38d23db87ec8a', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e9393964f194ab6-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_eb0bd3d5c85cc1f504d38d23db87ec8a", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000023232B3D580>, 'json_data': {'input': [[19871, 17279, 220, 5495, 13, 9423, 966, 13, 679, 23, 64571, 8341, 17766, 44065, 7740, 58317, 12394, 32985, 14082, 8341, 17766, 44065, 38098, 79370, 57186, 13, 35448, 2297, 47805, 44065, 29619, 21956, 18999, 13, 28599, 20807, 1840, 17279, 220, 4103, 12, 1721, 12, 1049, 18, 320, 2297, 43896, 9136, 38972, 9882, 10298, 452, 220, 16, 340, 19871, 49899, 73226, 64292, 20879, 220, 777, 7952, 15298, 38722, 2233, 4329, 220, 679, 23, 25756, 13, 97990, 220, 5495, 13, 9423, 966, 13, 679, 23, 198, 74598, 96256, 1506, 220, 9263, 198, 25079, 92533, 93781, 5372, 5524, 91146, 1830, 97065, 27437, 522, 406, 67, 24497, 2001, 21599, 3114, 30656, 2233, 17766, 39900, 18034, 17766, 40590, 23934, 14391, 7975, 50506, 220, 914, 220, 931, 220, 931, 6850, 32330, 8131, 28089, 13999, 12, 44646, 6856, 63233, 7740, 6850, 32330, 8131, 28089, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:43:20 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '168', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998931', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '12ms', 'x-request-id': 'req_5a527116df025d1ce86fc67b0ba22abb', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93939929a94ab6-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_5a527116df025d1ce86fc67b0ba22abb", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000023232B3D580>, 'json_data': {'input': [[19871, 17279, 220, 5495, 13, 9423, 966, 13, 679, 23, 64571, 8341, 17766, 44065, 7740, 58317, 12394, 32985, 14082, 8341, 17766, 44065, 38098, 79370, 57186, 13, 35448, 2297, 47805, 44065, 29619, 21956, 18999, 13, 28599, 20807, 1840, 17279, 220, 4103, 12, 1721, 12, 1049, 18, 320, 2297, 43896, 9136, 38972, 9882, 10298, 452, 220, 16, 340, 19871, 49899, 73226, 64292, 20879, 220, 777, 7952, 15298, 38722, 2233, 4329, 220, 679, 23, 25756, 13, 97990, 220, 5495, 13, 9423, 966, 13, 679, 23, 198, 74598, 96256, 1506, 220, 1627, 198, 25079, 92533, 93781, 5372, 5524, 91146, 1830, 97065, 27437, 522, 406, 67, 24497, 2001, 21599, 3114, 30656, 2233, 17766, 39900, 18034, 17766, 40590, 23934, 14391, 7975, 50506, 220, 914, 220, 931, 220, 931, 6850, 32330, 8131, 28089, 13999, 12, 44646, 6856, 63233, 7740, 6850, 32330, 8131, 28089, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:43:20 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '131', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998236', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '21ms', 'x-request-id': 'req_999b232064bac5ba5ddf64e61061bf23', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93939c6bd24ab6-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_999b232064bac5ba5ddf64e61061bf23", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-11-27, 19:43:21. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u041f 63.13330.2018 \u0411\u0435\u0442\u043e\u043d\u043d\u044b\u0435 \u0438 \u0436\u0435\u043b\u0435\u0437\u043e\u0431\u0435\u0442\u043e\u043d\u043d\u044b\u0435 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438. \u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u044f. \u0421\u041d\u0438\u041f 52-01-2003 (\u0441 \u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435\u043c N 1)\\n\u0421\u0432\u043e\u0434 \u043f\u0440\u0430\u0432\u0438\u043b \u043e\u0442 19 \u0434\u0435\u043a\u0430\u0431\u0440\u044f 2018 \u0433. \u2116 63.13330.2018\\n\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 16\\n\u0414\u043e\u043a\u0443\u043c\u0435\u043d\u0442 \u0441\u043e\u0445\u0440\u0430\u043d\u0435\u043d \u0441 \u043f\u043e\u0440\u0442\u0430\u043b\u0430 docs.cntd.... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:28", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Wed, 27 Nov 2024 16:43:28 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '7123', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '794140', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '439ms', 'x-request-id': 'req_186f1042dd172c26e3539ef326757926', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8e93939f9de2eb6c-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:28", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_186f1042dd172c26e3539ef326757926", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:28", "name": "llm_service", "levelname": "DEBUG", "message": "Maximum similarity: 0.7279628625056184", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:28", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity threshold not met. Returning answer without references.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:28", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('BIM Level 3 represents the next stage of maturity in Building Information Modelling, building upon the foundations laid by BIM Level 2. It involves a fully integrated and collaborative approach to project delivery, where all stakeholders work on a shared model. Key characteristics of BIM Level 3 include:\\n\\n1. <b>Single Shared Model</b>: Unlike BIM Level 2, where separate discipline models are used, BIM Level 3 involves a single, shared model that all parties contribute to and access. This enhances collaboration and minimizes the risk of inconsistencies.\\n\\n2. <b>Cloud-Based Environment</b>: The shared model is typically hosted in a cloud-based environment, allowing real-time access and updates by all project participants, regardless of their location.\\n\\n3. <b>Interoperability</b>: BIM Level 3 focuses on seamless interoperability between different software platforms, ensuring that all stakeholders can access and use the model effectiv... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:28", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:29", "name": "handlers", "levelname": "INFO", "message": "Sent response to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:29", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='d0e7175e-78d7-4ae6-b124-fc88014033ca'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-11-27 19:43:29", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
