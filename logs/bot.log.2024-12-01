{"asctime": "2024-12-01 03:28:40", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-12-01 03:28:46", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-12-01 03:28:46", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-12-01 03:28:47", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-12-01 04:39:52", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 154, in _connect\n    stream = await stream.start_tls(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 69, in start_tls\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: ", "taskName": "Task-847"}
{"asctime": "2024-12-01 04:52:35", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-983"}
{"asctime": "2024-12-01 04:52:47", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-990"}
{"asctime": "2024-12-01 04:52:48", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-993"}
{"asctime": "2024-12-01 04:52:50", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-996"}
{"asctime": "2024-12-01 04:52:52", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-999"}
{"asctime": "2024-12-01 04:52:59", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-1002"}
{"asctime": "2024-12-01 04:53:05", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-1005"}
{"asctime": "2024-12-01 04:53:12", "name": "telegram.ext.Application", "levelname": "ERROR", "message": "No error handlers are registered, logging exception.", "exc_info": "Traceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 72, in map_httpcore_exceptions\n    yield\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 377, in handle_async_request\n    resp = await self._pool.handle_async_request(req)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 216, in handle_async_request\n    raise exc from None\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection_pool.py\", line 196, in handle_async_request\n    response = await connection.handle_async_request(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 99, in handle_async_request\n    raise exc\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 76, in handle_async_request\n    stream = await self._connect(request)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_async\\connection.py\", line 122, in _connect\n    stream = await self._network_backend.connect_tcp(**kwargs)\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\auto.py\", line 30, in connect_tcp\n    return await self._backend.connect_tcp(\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_backends\\anyio.py\", line 115, in connect_tcp\n    with map_exceptions(exc_map):\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpcore\\_exceptions.py\", line 14, in map_exceptions\n    raise to_exc(exc) from exc\nhttpcore.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 293, in do_request\n    res = await self._client.request(\n          ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1585, in request\n    return await self.send(request, auth=auth, follow_redirects=follow_redirects)\n           ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1674, in send\n    response = await self._send_handling_auth(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1702, in _send_handling_auth\n    response = await self._send_handling_redirects(\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1739, in _send_handling_redirects\n    response = await self._send_single_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_client.py\", line 1776, in _send_single_request\n    response = await transport.handle_async_request(request)\n               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 376, in handle_async_request\n    with map_httpcore_exceptions():\n  File \"C:\\Users\\Andrey\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\contextlib.py\", line 155, in __exit__\n    self.gen.throw(value)\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\httpx\\_transports\\default.py\", line 89, in map_httpcore_exceptions\n    raise mapped_exc(message) from exc\nhttpx.ConnectError: [Errno 11001] getaddrinfo failed\n\nThe above exception was the direct cause of the following exception:\n\nTraceback (most recent call last):\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 743, in _network_loop_retry\n    if not await do_action():\n           ^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 737, in do_action\n    return action_cb_task.result()\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_updater.py\", line 367, in polling_action_cb\n    updates = await self.bot.get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 647, in get_updates\n    updates = await super().get_updates(\n              ^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 4421, in get_updates\n    await self._post(\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 617, in _post\n    return await self._do_post(\n           ^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\ext\\_extbot.py\", line 351, in _do_post\n    return await super()._do_post(\n           ^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\_bot.py\", line 646, in _do_post\n    result = await request.post(\n             ^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 202, in post\n    result = await self._request_wrapper(\n             ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_baserequest.py\", line 334, in _request_wrapper\n    code, payload = await self.do_request(\n                    ^^^^^^^^^^^^^^^^^^^^^^\n  File \"E:\\Python_Projects\\pdflyx\\venv\\Lib\\site-packages\\telegram\\request\\_httpxrequest.py\", line 317, in do_request\n    raise NetworkError(f\"httpx.{err.__class__.__name__}: {err}\") from err\ntelegram.error.NetworkError: httpx.ConnectError: [Errno 11001] getaddrinfo failed", "taskName": "Task-1008"}
{"asctime": "2024-12-01 05:01:52", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-12-01 05:01:53", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-12-01 05:01:54", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-12-01 05:01:54", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-12-01 05:02:05", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 05:02:06", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 05:02:06", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 05:02:06", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 05:02:06", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 05:02:06", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: ru", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 05:02:06", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 05:02:06", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/start'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 05:02:06", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: start with args: (<handlers.BotHandlers object at 0x0000029668767BF0>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 12, 1, 2, 2, 5, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=6, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='ru', username='Akumsk'), group_chat_created=False, message_id=2770, supergroup_chat_created=False, text='/start'), update_id=881193804), <telegram.ext._callbackcontext.CallbackContext object at 0x0000029669B99010>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 05:02:06", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: start with result: <coroutine object BotHandlers.start at 0x0000029669A43480>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 05:02:06", "name": "handlers", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 05:02:07", "name": "handlers", "levelname": "INFO", "message": "Sent welcome message to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 05:02:07", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 05:07:33", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-12-01 05:07:34", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-12-01 05:07:35", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-12-01 05:07:35", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-12-01 05:09:39", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-12-01 05:09:41", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-12-01 05:09:41", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-12-01 05:09:41", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-12-01 05:25:21", "name": "root", "levelname": "DEBUG", "message": "Logging has been configured successfully.", "taskName": null}
{"asctime": "2024-12-01 05:25:22", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: English (en)", "taskName": "Task-5"}
{"asctime": "2024-12-01 05:25:23", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Russian (ru)", "taskName": "Task-5"}
{"asctime": "2024-12-01 05:25:23", "name": "handlers", "levelname": "INFO", "message": "Commands set for language: Indonesian (id)", "taskName": "Task-5"}
{"asctime": "2024-12-01 06:47:53", "name": "decorators", "levelname": "DEBUG", "message": "Initialized DatabaseService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:47:54", "name": "llm_service", "levelname": "INFO", "message": "LLMService initialized with model 'gpt-4o'.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:47:54", "name": "decorators", "levelname": "DEBUG", "message": "Initialized LLMService.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:47:54", "name": "decorators", "levelname": "DEBUG", "message": "Set user_id: 244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:47:54", "name": "decorators", "levelname": "DEBUG", "message": "Set user_name: Andrey", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:47:54", "name": "decorators", "levelname": "DEBUG", "message": "Set language_code: en", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:47:54", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:47:54", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/start'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:47:54", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: start with args: (<handlers.BotHandlers object at 0x0000022A58739D60>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 12, 1, 3, 47, 53, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=6, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2772, supergroup_chat_created=False, text='/start'), update_id=881193805), <telegram.ext._callbackcontext.CallbackContext object at 0x0000022A5A1BAD60>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:47:54", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: start with result: <coroutine object BotHandlers.start at 0x0000022A5A063940>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:47:55", "name": "handlers", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:47:55", "name": "handlers", "levelname": "INFO", "message": "Sent welcome message to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:47:55", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:03", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:03", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:03", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:03", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:03", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x0000022A58739D60>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 12, 1, 3, 48, 2, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2774, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193806), <telegram.ext._callbackcontext.CallbackContext object at 0x0000022A5A1B9780>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:03", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x0000022A5A07B880>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:04", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:04", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:06", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:06", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:06", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:06", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:06", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x0000022A58739D60>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), id='1051116659392060867', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 12, 1, 3, 48, 3, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2775, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations'),),... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:06", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x0000022A58EAF5E0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:06", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:06", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:06", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x0000022A58A5C8F0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:06", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:06", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x0000022A58A5C8F0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:06", "name": "faiss.loader", "levelname": "DEBUG", "message": "Environment variable FAISS_OPT_LEVEL is not set, so let's pick the instruction set according to the current CPU", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:06", "name": "faiss.loader", "levelname": "INFO", "message": "Loading faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:06", "name": "faiss.loader", "levelname": "INFO", "message": "Successfully loaded faiss with AVX2 support.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:07", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:07", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:07", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:07", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:07", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:07", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:29", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:29", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:30", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:30", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u041a\u0430\u043a \u043d\u0430\u0437\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0448\u0442\u0443\u043a\u0438 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u0443 \u043f\u0440\u0438 \u0437\u0430\u043b\u0438\u0432\u043a\u0435 \u0431\u0435\u0442\u043e\u043d\u0430'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:30", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x0000022A58739D60>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 12, 1, 3, 48, 29, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2777, supergroup_chat_created=False, text='\u041a\u0430\u043a \u043d\u0430\u0437\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0448\u0442\u0443\u043a\u0438 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u0443 \u043f\u0440\u0438 \u0437\u0430\u043b\u0438\u0432\u043a\u0435 \u0431\u0435\u0442\u043e\u043d\u0430'), update_id=881193808), <telegram.ext._callbackcontext.CallbackContext object at 0x0000022A5A1B9780>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:30", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x0000022A5A1F4E50>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:30", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='a0b78e48-ac93-41db-ab82-4ef40df3ffec' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:30", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='a0b78e48-ac93-41db-ab82-4ef40df3ffec'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:30", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:30", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x0000022A58A5C8F0>, '\u041a\u0430\u043a \u043d\u0430\u0437\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0448\u0442\u0443\u043a\u0438 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u0443 \u043f\u0440\u0438 \u0437\u0430\u043b\u0438\u0432\u043a\u0435 \u0431\u0435\u0442\u043e\u043d\u0430'), kwargs: {'chat_history': [HumanMessage(content='\u041a\u0430\u043a \u043d\u0430\u0437\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0448\u0442\u0443\u043a\u0438 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u0443 \u043f\u0440\u0438 \u0437\u0430\u043b\u0438\u0432\u043a\u0435 \u0431\u0435\u0442\u043e\u043d\u0430', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u0418\u0437 \u0447\u0435\u0433\u043e \u043e\u043d\u0438 \u0441\u043e\u0441\u0442\u043e\u044f\u0442?', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u041a\u0430\u043a \u043d\u0430\u0437\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0448\u0442\u0443\u043a\u0438 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u0443 \u043f\u0440\u0438 \u0437\u0430\u043b\u0438\u0432\u043a\u0435 \u0431\u0435\u0442\u043e\u043d\u0430', additional_kwargs={}, response_metadata={}), AIMessage(content='\u042d\u043b\u0435\u043c\u0435\u043d\u0442\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u0443 \u043f\u0440\u0438 \u0437\u0430\u043b\u0438\u0432\u043a\u0435 \u0431\u0435\u0442\u043e\u043d\u0430, \u043d\u0430\u0437\u044b\u0432\u0430\u044e\u0442\u0441\u044f <b>\u0444\u0438\u043a\u0441\u0430\u0442\u043e\u0440\u0430\u043c\u0438 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b</b>. \u041e\u043d\u0438 \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u044b \u0434\u043b\u044f \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0435\u043d\u0438\u044f \u043d\u0443\u0436\u043d\u043e\u0433\u043e \u0437\u0430\u0449\u0438\u0442\u043d\u043e\u0433\u043e \u0441\u043b\u043e\u044f \u0431\u0435\u0442\u043e\u043d\u0430 \u0438 \u0443\u0434\u0435\u0440\u0436\u0430\u043d\u0438\u044f \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b \u0432 \u043f\u0440\u043e\u0435\u043a\u0442\u043d\u043e\u043c \u043f\u043e\u043b\u043e\u0436\u0435\u043d\u0438\u0438 \u0432\u043e \u0432\u0440\u0435\u043c\u044f \u0437\u0430\u043b\u0438\u0432\u043a\u0438.\\n\\n------------------\\nReferences (/references):\\n\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf, pages: 70, 72, 208, 209', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u041a\u0430\u043a \u0440\u0430\u0441\u0441... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:30", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A5A2A8720>, 'json_data': {'input': [[27435, 16248, 6850, 19188, 35667, 1506, 70129, 21204, 55617, 89348, 17165, 38153, 51736, 40842, 7094, 58669, 28089, 1506, 70129, 21022, 2233, 6578, 8131, 3865, 20346, 37405, 44946, 11320, 5591, 53671, 14391, 8341, 74828]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:30", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:31", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers([('date', 'Sun, 01 Dec 2024 03:48:31 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-allow-origin', '*'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-model', 'text-embedding-ada-002'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '80'), ('openai-version', '2020-10-01'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '5000000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '4999967'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '0s'), ('x-request-id', 'req_2a9689375324921756dfc9de45ff6060'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=.aBWXY5PCgzljLiq0njIHGKbV2otM1q7CbpN9HpExL4-1733024911-1.0.1.1-hvZEACIkudrszjJmr80PqAWTnt4Hm7nNQ609kM... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:31", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_2a9689375324921756dfc9de45ff6060", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:31", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:31", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A58AA4D60>, 'json_data': {'input': [[27435, 16248, 6850, 19188, 35667, 1506, 70129, 21204, 55617, 89348, 17165, 38153, 51736, 40842, 7094, 58669, 28089, 1506, 70129, 21022, 2233, 6578, 8131, 3865, 20346, 37405, 44946, 11320, 5591, 53671, 14391, 8341, 74828]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:31", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:32", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:48:32 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '70', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999967', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_bfd1d2e5874c69ed827c752292d878e0', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb01a202ab32df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:32", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_bfd1d2e5874c69ed827c752292d878e0", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:32", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A58AA4D60>, 'json_data': {'input': [[74598, 96256, 1506, 220, 8848, 23934, 220, 14815, 33006, 33006, 16, 482, 11047, 20346, 10124, 4655, 20440, 40842, 50223, 1840, 18600, 1506, 20812, 9239, 1506, 7740, 46339, 2233, 94520, 6856, 17165, 26, 720, 17, 482, 69471, 5591, 38657, 69775, 11, 30889, 47680, 5372, 44858, 14391, 8341, 17766, 12507, 26, 220, 18, 482, 21022, 2233, 6578, 8131, 56515, 34613, 7820, 17721, 13433, 2297, 26, 720, 19, 482, 48446, 19619, 7486, 4655, 26, 220, 20, 482, 6850, 34493, 2156, 8341, 32062, 35723, 18600, 1506, 20812, 9239, 33006, 34604, 13810, 35297, 15088, 49520, 13, 17, 482, 35448, 8164, 2233, 94520, 6856, 13433, 18868, 5591, 7975, 1506, 45916, 1506, 1840, 320, 8164, 2233, 81448, 4655, 8, 33006, 33006, 33006, 17279, 31203, 82941, 17618, 28599, 33006, 35095, 34604, 56191, 61432, 20976, 16604, 37255, 20807, 31274, 86491, 3647... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:32", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:33", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:48:33 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '117', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999808', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '2ms', 'x-request-id': 'req_590a9986f686961fc174e6693578f2ec', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb01a26eecc2df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:33", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_590a9986f686961fc174e6693578f2ec", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:33", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A58AA4D60>, 'json_data': {'input': [[74598, 96256, 1506, 220, 12652, 23934, 220, 14815, 33006, 33006, 16, 482, 11047, 20346, 10124, 1506, 20440, 40842, 50223, 1840, 18600, 1506, 20812, 9239, 1506, 26, 220, 17, 482, 11047, 20346, 10124, 1506, 20440, 78085, 2233, 96485, 21477, 31101, 1506, 720, 22911, 20812, 9239, 1506, 26, 220, 18, 482, 69471, 5591, 38657, 69775, 11, 30889, 47680, 5372, 44858, 14391, 8341, 17766, 12507, 26, 220, 19, 482, 21022, 2233, 6578, 8131, 56515, 34613, 720, 13433, 2233, 13433, 2297, 26, 220, 20, 482, 21923, 7975, 38438, 13433, 23934, 12561, 38438, 39900, 5524, 19479, 1830, 8341, 81301, 4898, 22885, 96573, 7753, 1840, 97065, 26, 720, 21, 482, 29619, 97747, 21923, 7975, 38438, 17165, 26, 220, 22, 482, 6850, 34493, 2156, 8341, 32062, 35723, 18600, 1506, 20812, 9239, 26, 720, 23, 482, 41291, 30656, 44858, 20879, 6578, 8341, 1... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:33", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:48:34 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '74', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999802', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '2ms', 'x-request-id': 'req_15737679bf3f1abae8512bb0cc76ae58', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb01a2cea3e2df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_15737679bf3f1abae8512bb0cc76ae58", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A58AA4D60>, 'json_data': {'input': [[74598, 96256, 1506, 220, 6028, 23934, 220, 14815, 33006, 34493, 2233, 25698, 8131, 6856, 25756, 2233, 21708, 19916, 7753, 39900, 11, 14257, 7094, 17721, 39900, 11, 18600, 36594, 39900, 11, 7820, 6856, 12426, 6856, 22885, 46177, 55617, 2156, 15298, 6856, 22885, 64933, 1506, 11, 5173, 49855, 96485, 90457, 67745, 720, 8164, 12507, 16494, 1482, 14391, 56515, 18999, 69471, 5591, 38657, 1840, 12648, 62315, 9706, 18264, 14257, 68462, 36352, 21022, 2233, 6578, 59921, 28241, 10693, 7820, 17721, 13433, 2297, 6856, 7740, 14391, 8341, 17766, 59921, 27717, 11, 21022, 50945, 59138, 720, 41873, 5591, 3114, 56857, 17618, 21923, 2297, 23680, 44786, 11047, 20346, 10124, 13, 720, 17279, 31203, 20879, 2297, 38521, 20812, 47273, 40842, 9136, 10298, 44786, 5927, 9706, 5927, 57925, 12394, 1506, 10693, 25756, 3114, 64569, 1840, 126... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:34", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:35", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:48:34 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '78', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998606', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '16ms', 'x-request-id': 'req_92be128761464c35945ed913fd6acf38', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb01a330e392df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:35", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_92be128761464c35945ed913fd6acf38", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:35", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A58AA4D60>, 'json_data': {'input': [[74598, 96256, 1506, 220, 5958, 23934, 220, 14815, 33006, 717, 13, 17, 13, 605, 23784, 39233, 44100, 10693, 57925, 13337, 5591, 52866, 18999, 40842, 34694, 10298, 1506, 7740, 5524, 6578, 86610, 18999, 5927, 5173, 3114, 7486, 1532, 21022, 2233, 6578, 8131, 56515, 39900, 7820, 17721, 13433, 2297, 1506, 720, 67187, 80230, 90705, 16742, 14391, 8341, 17766, 39988, 5524, 6578, 23297, 89052, 7740, 5927, 41291, 10589, 94520, 1532, 23934, 5591, 3114, 56857, 18999, 14391, 8341, 17766, 7975, 9542, 39988, 46177, 21923, 2297, 23680, 39988, 11047, 20346, 10124, 4655, 11, 720, 13433, 2233, 13433, 2297, 19175, 89159, 1482, 59313, 2233, 67124, 18264, 5927, 41291, 30656, 94962, 29619, 21956, 84198, 13, 28599, 1830, 2233, 29256, 6856, 13433, 7820, 17721, 13433, 2297, 1506, 56449, 14525, 21923, 23297, 8164, 56857, 28089, 18482, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:35", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:36", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:48:35 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '107', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998564', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '17ms', 'x-request-id': 'req_ea1a31fe0678554c162baa19fb91edbd', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb01a358f972df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:36", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_ea1a31fe0678554c162baa19fb91edbd", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:36", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"You are a project assistant from the consultant side on design and construction projects. If you don't know the answer, say that you don't know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-12-01, 06:48:36. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 210 \u0438\u0437 239 \\n \\n \\n \\n1 - \u0442\u0440\u0443\u0431\u044b \u0434\u043b\u044f \u043f\u043e\u0434\u0430\u0447\u0438 \u0440\u0430\u0441\u0442\u0432\u043e\u0440\u0430 \u0438 \u043e\u043f\u0440\u0435\u0441\u0441\u043e\u0432\u043a\u0438; \\n2 - \u0441\u043a\u0432\u0430\u0436\u0438\u043d\u0430, \u0437\u0430\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u0430\u044f \u0431\u0435\u0442\u043e\u043d\u043e\u043c; 3 - \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u043d\u044b\u0439 \u043a\u0430\u0440\u043a\u0430\u0441; \\n4 - \u043a\u043b\u0430\u043f\u0430\u043d\u044b; 5 - \u043d\u0430\u0433\u043d\u0435\u0442\u0430\u0435\u043c\u044b\u0439 \u0440\u0430\u0441\u0442\u0432\u043e\u0440 \\n \\n\u0420\u0438\u0441\u0443\u043d\u043e\u043a \u0420.2 - \u041e\u043f\u0440\u0435\u0441\u0441\u043e\u0432\u043a\u0430 \u0441\u0442\u0432\u043e\u043b\u0430 \u0441\u0432\u0430\u0438 ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:36", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:38", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers([('date', 'Sun, 01 Dec 2024 03:48:37 GMT'), ('content-type', 'application/json'), ('transfer-encoding', 'chunked'), ('connection', 'keep-alive'), ('access-control-expose-headers', 'X-Request-ID'), ('openai-organization', 'nuanu-wimbwa'), ('openai-processing-ms', '598'), ('openai-version', '2020-10-01'), ('x-ratelimit-limit-requests', '5000'), ('x-ratelimit-limit-tokens', '800000'), ('x-ratelimit-remaining-requests', '4999'), ('x-ratelimit-remaining-tokens', '795638'), ('x-ratelimit-reset-requests', '12ms'), ('x-ratelimit-reset-tokens', '327ms'), ('x-request-id', 'req_637f022fd6670b49d6c43f546f8549d4'), ('strict-transport-security', 'max-age=31536000; includeSubDomains; preload'), ('cf-cache-status', 'DYNAMIC'), ('set-cookie', '__cf_bm=HP5Z9_ngleJroc1.kb_yLG0nmPRy2SMKXyQVz5qcgOU-1733024917-1.0.1.1-tXnjHWe0PnEI3MpeLtpHErXDHhA_IoqXbWpEDO1sJLG_OLVcl6pjEcTQb3kKw6MGmsxjevRmfpUdMJXKvBUirA; path=/; expires=Sun, 01-... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:38", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_637f022fd6670b49d6c43f546f8549d4", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:38", "name": "llm_service", "levelname": "DEBUG", "message": "Maximum similarity: 0.8457853139394058, RELEVANCE_THRESHOLD_PROMPT: 0.8", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:38", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer. RELEVANCE_THRESHOLD_DOCS: 0.7", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:38", "name": "llm_service", "levelname": "DEBUG", "message": "Generating suggestions based on user prompt and LLM response.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:38", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"Given the following user prompt and LLM response, determine if additional information is needed to help the user fulfill their request and continue the conversation effectively. If yes, provide up to 3 additional prompts based on key concepts in the response, such as 'learn more about ...', 'how to determine ...', 'how to calculate ...', etc., that the user can use to gather more information. If no additional prompts are needed, respond with 'No suggestions needed'.\\n\\nUser Prompt: \u041a\u0430\u043a \u043d\u0430\u0437\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0448\u0442\u0443\u043a\u0438 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u0443 \u043f\u0440\u0438 \u0437\u0430\u043b\u0438\u0432\u043a\u0435 \u0431\u0435\u0442\u043e\u043d\u0430\\n\\nLLM Response: \u042d\u043b\u0435\u043c\u0435\u043d\u0442\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u0443 \u043f\u0440\u0438 \u0437\u0430\u043b\u0438\u0432\u043a\u0435 \u0431\u0435\u0442\u043e\u043d\u0430, \u043d\u0430\u0437\u044b\u0432\u0430\u044e\u0442\u0441\u044f <b>\u0444\u0438\u043a\u0441\u0430\u0442\u043e\u0440\u0430\u043c\u0438 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b</b>.\\n\\nSuggestions:\", 'role': 'user'}], 'model': 'gpt-4o', 'n': 1, 'stream': False, 'temperature': 0.7}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:38", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:38", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:48:38 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '150', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '799777', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '16ms', 'x-request-id': 'req_749ae4da87403ce0511bc83862161206', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb01a491b24c02e-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:38", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_749ae4da87403ce0511bc83862161206", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:38", "name": "llm_service", "levelname": "DEBUG", "message": "LLM determined that no suggestions are needed.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:38", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u042d\u043b\u0435\u043c\u0435\u043d\u0442\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u0443 \u043f\u0440\u0438 \u0437\u0430\u043b\u0438\u0432\u043a\u0435 \u0431\u0435\u0442\u043e\u043d\u0430, \u043d\u0430\u0437\u044b\u0432\u0430\u044e\u0442\u0441\u044f <b>\u0444\u0438\u043a\u0441\u0430\u0442\u043e\u0440\u0430\u043c\u0438 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b</b>.\\n\\n------------------\\nReferences (/references):\\n\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf, pages: 70, 72, 208, 209\\n', {'\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf'}, None)", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:38", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:38", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='a0b78e48-ac93-41db-ab82-4ef40df3ffec'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:39", "name": "handlers", "levelname": "INFO", "message": "Sent response to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:39", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:53", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:53", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:53", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:53", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u041a\u0430\u043a\u0438\u0445 \u0432\u0438\u0434\u043e\u0432 \u043e\u043d\u0438 \u0431\u044b\u0432\u0430\u044e\u0442'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:53", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x0000022A58739D60>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 12, 1, 3, 48, 52, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2779, supergroup_chat_created=False, text='\u041a\u0430\u043a\u0438\u0445 \u0432\u0438\u0434\u043e\u0432 \u043e\u043d\u0438 \u0431\u044b\u0432\u0430\u044e\u0442'), update_id=881193809), <telegram.ext._callbackcontext.CallbackContext object at 0x0000022A5A1BB310>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:53", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x0000022A5A1F5030>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:53", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='6983e905-8721-4fea-a56f-14a5c959987e' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:53", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='6983e905-8721-4fea-a56f-14a5c959987e'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:53", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:53", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x0000022A58A5C8F0>, '\u041a\u0430\u043a\u0438\u0445 \u0432\u0438\u0434\u043e\u0432 \u043e\u043d\u0438 \u0431\u044b\u0432\u0430\u044e\u0442'), kwargs: {'chat_history': [HumanMessage(content='\u041a\u0430\u043a\u0438\u0445 \u0432\u0438\u0434\u043e\u0432 \u043e\u043d\u0438 \u0431\u044b\u0432\u0430\u044e\u0442', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u041a\u0430\u043a \u043d\u0430\u0437\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0448\u0442\u0443\u043a\u0438 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u0443 \u043f\u0440\u0438 \u0437\u0430\u043b\u0438\u0432\u043a\u0435 \u0431\u0435\u0442\u043e\u043d\u0430', additional_kwargs={}, response_metadata={}), AIMessage(content='\u042d\u043b\u0435\u043c\u0435\u043d\u0442\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u0443 \u043f\u0440\u0438 \u0437\u0430\u043b\u0438\u0432\u043a\u0435 \u0431\u0435\u0442\u043e\u043d\u0430, \u043d\u0430\u0437\u044b\u0432\u0430\u044e\u0442\u0441\u044f <b>\u0444\u0438\u043a\u0441\u0430\u0442\u043e\u0440\u0430\u043c\u0438 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b</b>.\\n\\n------------------\\nReferences (/references):\\n\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf, pages: 70, 72, 208, 209', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u0418\u0437 \u0447\u0435\u0433\u043e \u043e\u043d\u0438 \u0441\u043e\u0441\u0442\u043e\u044f\u0442?', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u041a\u0430\u043a \u043d\u0430\u0437\u044b\u0432\u0430\u044e\u0442\u0441\u044f \u0448\u0442\u0443\u043a\u0438 \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u0443 \u043f\u0440\u0438 \u0437\u0430\u043b\u0438\u0432\u043a\u0435 \u0431\u0435\u0442\u043e\u043d\u0430', additional_kwargs={}, response_metadata={}), AIMessage(content='\u042d\u043b\u0435\u043c\u0435\u043d\u0442\u044b, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u044e\u0442 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u0443 \u043f\u0440\u0438 \u0437\u0430\u043b\u0438\u0432\u043a\u0435 \u0431\u0435\u0442\u043e\u043d\u0430, \u043d\u0430\u0437\u044b\u0432\u0430\u044e\u0442\u0441\u044f <b>\u0444\u0438\u043a\u0441\u0430\u0442\u043e\u0440\u0430\u043c\u0438 \u0430\u0440\u043c\u0430\u0442... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A5A756520>, 'json_data': {'input': [[27435, 16248, 67745, 74020, 6856, 8379, 23446, 14391, 35667, 1506, 70129]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:48:54 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '135', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999988', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_9701c94b469a76be93c481ac59d464f3', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb01aa8fc092df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_9701c94b469a76be93c481ac59d464f3", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:54", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A58AA4C20>, 'json_data': {'input': [[27435, 16248, 67745, 74020, 6856, 8379, 23446, 14391, 35667, 1506, 70129]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:48:54 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '62', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999988', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_9b666c335657de282ac1e88069fa5985', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb01aafe9402df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_9b666c335657de282ac1e88069fa5985", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A58AA4C20>, 'json_data': {'input': [[74598, 96256, 1506, 220, 11515, 23934, 220, 14815, 33006, 16604, 31274, 25079, 140, 104, 36479, 20976, 20807, 35095, 34604, 20976, 65014, 86491, 36479, 37255, 73919, 56191, 19871, 35095, 16604, 37255, 11, 51418, 56191, 34604, 39091, 31274, 20807, 140, 104, 43896, 35448, 17279, 34604, 56191, 25079, 56191, 65014, 56191, 20807, 31274, 86491, 33006, 37255, 13, 16, 23784, 48262, 4655, 78085, 2233, 96485, 60748, 62809, 1840, 15458, 20346, 70129, 21204, 18154, 93129, 72119, 16494, 37405, 9136, 2156, 16248, 24697, 25, 720, 37255, 13, 16, 13, 16, 23784, 93323, 13810, 16494, 85864, 20879, 11562, 37277, 1506, 7740, 65811, 9882, 62315, 13404, 18999, 78085, 2233, 96485, 5927, 11047, 98285, 2156, 7975, 14837, 81301, 4898, 12507, 41291, 10589, 94520, 1532, 720, 7, 6735, 23680, 40231, 78085, 2233, 96485, 1680, 720, 12, 5927... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:48:55 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '121', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998868', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '13ms', 'x-request-id': 'req_dc874f6d7e7f20094f444d9e7d3d68d7', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb01ab24ae72df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_dc874f6d7e7f20094f444d9e7d3d68d7", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A5A29FF60>, 'json_data': {'input': [[27435, 37255, 34604, 35095, 37255, 220, 18, 13, 49520, 37255, 140, 247, 20976, 20807, 31274, 34604, 20976, 16604, 37255, 20807, 31274, 56191, 51418, 56191, 34604, 34604, 31274, 35095, 20976, 34604, 31274, 31274, 720, 34604, 20976, 19871, 19871, 31274, 140, 247, 19871, 27435, 20976, 140, 247, 67891, 56191, 25079, 56191, 34604, 37255, 93899, 31274, 31274, 198, 8164, 1482, 11047, 7975, 14476, 19479, 1532, 18868, 5372, 17165, 25756, 7975, 7975, 13404, 1506]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:48:56 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '71', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999929', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_e25291ca8a905d0283cfdb70ac92e138', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb01ab92f982df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_e25291ca8a905d0283cfdb70ac92e138", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A5A29FF60>, 'json_data': {'input': [[27435, 37255, 34604, 35095, 37255, 220, 16, 1506, 13, 49520, 37255, 140, 247, 20976, 20807, 31274, 34604, 20976, 16604, 37255, 20807, 31274, 56191, 51418, 56191, 34604, 34604, 31274, 35095, 20976, 34604, 31274, 31274, 720, 20976, 19871, 35095, 34604, 20976, 16604, 37255, 28599, 37255, 140, 98, 37255, 65014, 31274, 20807, 23227, 20976, 23784, 56191, 19871, 41682, 28599, 20807, 56191, 38214, 20976, 16604, 20976, 38214, 20976, 23227, 20976, 27435, 34604, 20976, 16604, 37255]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:56", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:48:56 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '54', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999928', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_5355a18e627028a9a6c09c62acb8083f', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb01abdbb1a2df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_5355a18e627028a9a6c09c62acb8083f", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A5A29FF60>, 'json_data': {'input': [[19871, 17279, 220, 17824, 13, 9413, 18216, 15, 13, 2366, 16, 33006, 5894, 720, 7094, 18226, 68742, 18154, 7740, 2297, 41036, 13404, 6856, 39280, 6578, 41291, 12426, 3114, 63233, 26539, 8341, 11, 68214, 28241, 10693, 5927, 79327, 1532, 220, 20, 13, 16, 11, 72060, 7975, 40251, 70129, 78085, 2233, 17461, 44065, 720, 3114, 6856, 4655, 5524, 91667, 72119, 16494, 21022, 14525, 11320, 9136, 12507, 14257, 3114, 6856, 6856, 13, 720, 31274, 2297, 41036, 13404, 6856, 39280, 7740, 10693, 23311, 1482, 19916, 1506, 3865, 12648, 5927, 52520, 1506, 70129, 25, 720, 12, 46339, 92582, 17618, 74020, 6856, 22885, 92175, 18226, 1506, 18600, 4655, 10124, 11, 13373, 2297, 44100, 90457, 67745, 86430, 5591, 58406, 1840, 12182, 23934, 4655, 66144, 14332, 12415, 320, 2297, 68214, 14332, 10298, 720, 67745, 81757, 7975, 14837, 81301, 489... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:48:57 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '54', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999372', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '7ms', 'x-request-id': 'req_434e40e7683abcd0867df79a5e4921a6', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb01abffcdc2df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_434e40e7683abcd0867df79a5e4921a6", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-12-01, 06:48:58. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 167 \u0438\u0437 239 \\n \\n\u0412\u0418\u0414\u042b \u041a\u041e\u041d\u0422\u0420\u041e\u041b\u042f \u041a\u0410\u0427\u0415\u0421\u0422\u0412\u0410, \u0422\u0415\u0420\u041c\u0418\u041d\u042b \u0418 \u041e\u041f\u0420\u0415\u0414\u0415\u041b\u0415\u041d\u0418\u042f \\n \\n\u0410.1 \u0412\u0438\u0434\u044b \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044f \u043a\u043b\u0430\u0441\u0441\u0438\u0444\u0438\u0446\u0438\u0440\u0443\u044e\u0442\u0441\u044f \u043f\u043e \u0441\u043b\u0435\u0434\u0443\u044e\u0449\u0438\u043c \u043f\u0440\u0438\u0437\u043d\u0430\u043a\u0430\u043c: \\n\u0410.1.1 \u0412 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u043c\u0435\u0441\u0442\u0430 \u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u0438 \u043f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u043a\u043e\u043d\u0442\u0440\u043e\u043b\u044f \u0432 \u0442\u0435\u0445\u043d\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u043e\u043c ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:48:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:49:02", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:49:01 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '3402', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '796815', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '238ms', 'x-request-id': 'req_dd7da5dd753d9598ce26a457db1b8553', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb01ac698109185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:49:02", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_dd7da5dd753d9598ce26a457db1b8553", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:49:02", "name": "llm_service", "levelname": "DEBUG", "message": "Maximum similarity: 0.7815376824777028, RELEVANCE_THRESHOLD_PROMPT: 0.8", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:49:02", "name": "llm_service", "levelname": "DEBUG", "message": "Similarity threshold not met. Returning answer without references.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:49:02", "name": "llm_service", "levelname": "DEBUG", "message": "Generating suggestions based on user prompt and LLM response.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:49:02", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"Given the following user prompt and LLM response, determine if additional information is needed to help the user fulfill their request and continue the conversation effectively. If yes, provide up to 3 additional prompts based on key concepts in the response, such as 'learn more about ...', 'how to determine ...', 'how to calculate ...', etc., that the user can use to gather more information. If no additional prompts are needed, respond with 'No suggestions needed'.\\n\\nUser Prompt: \u041a\u0430\u043a\u0438\u0445 \u0432\u0438\u0434\u043e\u0432 \u043e\u043d\u0438 \u0431\u044b\u0432\u0430\u044e\u0442\\n\\nLLM Response: \u0424\u0438\u043a\u0441\u0430\u0442\u043e\u0440\u044b \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b \u0431\u044b\u0432\u0430\u044e\u0442 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0432\u0438\u0434\u043e\u0432, \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0438\u0445 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u0438 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f. \u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0432\u0438\u0434\u044b \u0432\u043a\u043b\u044e\u0447\u0430\u044e\u0442:\\n\\n1. **\u041f\u043b\u0430\u0441\u0442\u0438\u043a\u043e\u0432\u044b\u0435 \u0444\u0438\u043a\u0441\u0430\u0442\u043e\u0440\u044b**: \u041d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u043d\u044b\u0435, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0437\u0430\u0449\u0438\u0442\u043d\u043e\u0433\u043e \u0441\u043b\u043e\u044f \u0431\u0435\u0442\u043e\u043d\u0430. \u041e\u043d\u0438 \u043b\u0435\u0433\u043a\u0438\u0435, \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u044b \u043a \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u0438 \u0438 \u0438\u043c\u0435\u044e\u0442 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0444\u043e\u0440\u043c\u044b \u0434\u043b\u044f \u0440\u0430\u0437\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b.\\n\\n2. **\u0411\u0435\u0442\u043e\u043d\u043d\u044b\u0435 \u0444\u0438\u043a\u0441\u0430\u0442\u043e\u0440\u044b**: \u0418\u0437\u0433\u043e... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:49:02", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:49:03", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:49:03 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '948', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '799430', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '42ms', 'x-request-id': 'req_649b3a0a113796926315724ca55e697d', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb01ade48919185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:49:03", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_649b3a0a113796926315724ca55e697d", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:49:03", "name": "llm_service", "levelname": "DEBUG", "message": "LLM determined that no suggestions are needed.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:49:03", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0424\u0438\u043a\u0441\u0430\u0442\u043e\u0440\u044b \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b \u0431\u044b\u0432\u0430\u044e\u0442 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0432\u0438\u0434\u043e\u0432, \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0438\u0445 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u0438 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f. \u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0432\u0438\u0434\u044b \u0432\u043a\u043b\u044e\u0447\u0430\u044e\u0442:\\n\\n1. <b>\u041f\u043b\u0430\u0441\u0442\u0438\u043a\u043e\u0432\u044b\u0435 \u0444\u0438\u043a\u0441\u0430\u0442\u043e\u0440\u044b</b>: \u041d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u043d\u044b\u0435, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0437\u0430\u0449\u0438\u0442\u043d\u043e\u0433\u043e \u0441\u043b\u043e\u044f \u0431\u0435\u0442\u043e\u043d\u0430. \u041e\u043d\u0438 \u043b\u0435\u0433\u043a\u0438\u0435, \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u044b \u043a \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u0438 \u0438 \u0438\u043c\u0435\u044e\u0442 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0444\u043e\u0440\u043c\u044b \u0434\u043b\u044f \u0440\u0430\u0437\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b.\\n\\n2. <b>\u0411\u0435\u0442\u043e\u043d\u043d\u044b\u0435 \u0444\u0438\u043a\u0441\u0430\u0442\u043e\u0440\u044b</b>: \u0418\u0437\u0433\u043e\u0442\u0430\u0432\u043b\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u0438\u0437 \u0432\u044b\u0441\u043e\u043a\u043e\u043f\u0440\u043e\u0447\u043d\u043e\u0433\u043e \u0431\u0435\u0442\u043e\u043d\u0430. \u041e\u043d\u0438 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u044e\u0442 \u0445\u043e\u0440\u043e\u0448\u0435\u0435 \u0441\u0446\u0435\u043f\u043b\u0435\u043d\u0438\u0435 \u0441 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u043c \u0431\u0435\u0442\u043e\u043d\u043e\u043c \u0438 \u043c\u043e\u0433\u0443\u0442 \u0432\u044b\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0438\u0435 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0438.\\n\\n3. <b>\u041c\u0435\u0442\u0430\u043b\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0444\u0438\u043a\u0441\u0430\u0442\u043e\u0440\u044b</b>: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0432 \u0441\u043b\u0443\u0447\u0430\u044f\u0445, \u0433\u0434\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0432\u044b\u0441\u043e\u043a\u0430\u044f \u043f\u0440\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u0438 \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u044c. \u041e\u0431\u044b\u0447\u043d\u043e \u0438\u0437\u0433\u043e\u0442\u0430\u0432\u043b\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u0438\u0437 \u0441\u0442\u0430\u043b\u0438 \u0441 \u0430\u043d\u0442\u0438\u043a\u043e\u0440\u0440\u043e\u0437\u0438\u0439\u043d\u044b\u043c \u043f\u043e\u043a\u0440\u044b\u0442\u0438\u0435\u043c.\\n\\n4. <b>\u041a\u043e\u043c\u0431\u0438\u043d\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0444\u0438\u043a\u0441\u0430\u0442\u043e\u0440\u044b</b>: \u0421\u043e\u0447\u0435\u0442\u0430\u044e\u0442 \u0432 \u0441\u0435\u0431\u0435 \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u044b \u0438\u0437 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u0432 \u0434\u043b\u044f \u0443\u043b\u0443\u0447\u0448\u0435\u043d\u0438\u044f \u044d\u043a\u0441\u043f\u043b\u0443\u0430\u0442\u0430\u0446\u0438\u043e\u043d\u043d\u044b\u0445 \u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a.\\n\\n\u041a\u0430\u0436\u0434\u044b\u0439 \u0442\u0438\u043f \u0444\u0438\u043a\u0441\u0430\u0442\u043e\u0440 \u0438\u043c\u0435\u0435\u0442 \u0441\u0432\u043e\u0438 \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u0438 \u043e\u0431\u043b\u0430\u0441\u0442\u044c \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u044f, \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u0439 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u0439 \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0430.', None, None)", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:49:03", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:49:03", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='6983e905-8721-4fea-a56f-14a5c959987e'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:49:04", "name": "handlers", "levelname": "INFO", "message": "Sent response to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:49:04", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:10", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:10", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:10", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:10", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u041a\u0430\u043a \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u0430 \u0432\u044f\u0436\u0435\u0442\u0441\u044f \u043c\u0435\u0436\u0434\u0443 \u0441\u043e\u0431\u043e\u0439'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:10", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x0000022A58739D60>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 12, 1, 3, 52, 9, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2781, supergroup_chat_created=False, text='\u041a\u0430\u043a \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u0430 \u0432\u044f\u0436\u0435\u0442\u0441\u044f \u043c\u0435\u0436\u0434\u0443 \u0441\u043e\u0431\u043e\u0439'), update_id=881193810), <telegram.ext._callbackcontext.CallbackContext object at 0x0000022A5A1BB850>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:10", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x0000022A5A1F5030>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:10", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='6461324e-6158-48d6-b43a-bd18f30950c7' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:10", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='6461324e-6158-48d6-b43a-bd18f30950c7'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:10", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:10", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x0000022A58A5C8F0>, '\u041a\u0430\u043a \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u0430 \u0432\u044f\u0436\u0435\u0442\u0441\u044f \u043c\u0435\u0436\u0434\u0443 \u0441\u043e\u0431\u043e\u0439'), kwargs: {'chat_history': [HumanMessage(content='\u041a\u0430\u043a \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u0430 \u0432\u044f\u0436\u0435\u0442\u0441\u044f \u043c\u0435\u0436\u0434\u0443 \u0441\u043e\u0431\u043e\u0439', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u041a\u0430\u043a\u0438\u0445 \u0432\u0438\u0434\u043e\u0432 \u043e\u043d\u0438 \u0431\u044b\u0432\u0430\u044e\u0442', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0424\u0438\u043a\u0441\u0430\u0442\u043e\u0440\u044b \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b \u0431\u044b\u0432\u0430\u044e\u0442 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0432\u0438\u0434\u043e\u0432, \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0438\u0445 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u0438 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f. \u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0432\u0438\u0434\u044b \u0432\u043a\u043b\u044e\u0447\u0430\u044e\u0442:\\n\\n1. <b>\u041f\u043b\u0430\u0441\u0442\u0438\u043a\u043e\u0432\u044b\u0435 \u0444\u0438\u043a\u0441\u0430\u0442\u043e\u0440\u044b</b>: \u041d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u043d\u044b\u0435, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0437\u0430\u0449\u0438\u0442\u043d\u043e\u0433\u043e \u0441\u043b\u043e\u044f \u0431\u0435\u0442\u043e\u043d\u0430. \u041e\u043d\u0438 \u043b\u0435\u0433\u043a\u0438\u0435, \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u044b \u043a \u043a\u043e\u0440\u0440\u043e\u0437\u0438\u0438 \u0438 \u0438\u043c\u0435\u044e\u0442 \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0435 \u0444\u043e\u0440\u043c\u044b \u0434\u043b\u044f \u0440\u0430\u0437\u043d\u044b\u0445 \u0442\u0438\u043f\u043e\u0432 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b.\\n\\n2. <b>\u0411\u0435\u0442\u043e\u043d\u043d\u044b\u0435 \u0444\u0438\u043a\u0441\u0430\u0442\u043e\u0440\u044b</b>: \u0418\u0437\u0433\u043e\u0442\u0430\u0432\u043b\u0438\u0432\u0430\u044e\u0442\u0441\u044f \u0438\u0437 \u0432\u044b\u0441\u043e\u043a\u043e\u043f\u0440\u043e\u0447\u043d\u043e\u0433\u043e \u0431\u0435\u0442\u043e\u043d\u0430. \u041e\u043d\u0438 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u044e\u0442 \u0445\u043e\u0440\u043e\u0448\u0435\u0435 \u0441\u0446\u0435\u043f\u043b\u0435\u043d\u0438\u0435 \u0441 \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u043c \u0431\u0435\u0442\u043e\u043d\u043e\u043c \u0438 \u043c\u043e\u0433\u0443\u0442 \u0432\u044b\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0442\u044c \u0431\u043e\u043b\u044c\u0448\u0438\u0435 \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0438.\\n\\n3. <b>\u041c\u0435\u0442\u0430\u043b\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0444\u0438\u043a\u0441\u0430\u0442\u043e\u0440\u044b</b>: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0432 \u0441\u043b\u0443\u0447\u0430\u044f\u0445, \u0433\u0434\u0435 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f \u0432\u044b\u0441\u043e\u043a\u0430\u044f \u043f\u0440\u043e\u0447\u043d\u043e\u0441\u0442\u044c \u0438 \u0434\u043e\u043b\u0433\u043e\u0432\u0435\u0447\u043d\u043e\u0441\u0442\u044c. \u041e\u0431\u044b\u0447\u043d\u043e \u0438\u0437\u0433\u043e\u0442\u0430\u0432\u043b\u0438\u0432\u0430\u044e... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:10", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022AA58D5260>, 'json_data': {'input': [[27435, 16248, 21022, 2233, 6578, 8131, 3865, 22911, 5927, 4329, 17394, 50819, 11562, 50436, 7094, 3865, 5524, 14082, 16742]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:10", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:11", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:52:11 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '36', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999980', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_6dc848e70a9c980b3e927dc905a0bc3d', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb01f7b0f29ee1a-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:11", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_6dc848e70a9c980b3e927dc905a0bc3d", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:11", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:11", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A5A2A9300>, 'json_data': {'input': [[27435, 16248, 21022, 2233, 6578, 8131, 3865, 22911, 5927, 4329, 17394, 50819, 11562, 50436, 7094, 3865, 5524, 14082, 16742]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:11", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:11", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:52:11 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '81', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999980', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_1234989f595be74703bdda4ed140a81a', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb01f7dab80ee1a-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:11", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_1234989f595be74703bdda4ed140a81a", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:11", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A5A756660>, 'json_data': {'input': [[74598, 96256, 1506, 220, 11584, 23934, 220, 14815, 33006, 19871, 94538, 1840, 56449, 12648, 62731, 21923, 2297, 38657, 79686, 18154, 35714, 21708, 7952, 11320, 79862, 13, 720, 19871, 13, 17, 13, 22, 59842, 30480, 2233, 17618, 5173, 29256, 7753, 56857, 39900, 5524, 56857, 18999, 720, 41682, 30480, 2233, 18999, 14391, 3865, 24803, 63233, 45916, 19039, 93129, 73181, 52324, 18226, 18482, 5524, 76401, 92506, 89052, 84714, 1532, 15458, 39127, 39900, 21923, 9239, 37013, 6856, 39280, 11, 720, 8164, 49855, 96485, 90457, 47295, 5524, 96034, 7753, 10693, 68742, 78085, 2233, 7975, 59921, 18482, 41291, 10589, 94520, 7740, 10693, 14257, 77911, 94071, 13, 720, 19871, 13, 18, 13, 16, 57855, 2233, 6578, 59921, 27717, 13, 80798, 14476, 50306, 29619, 21956, 18999, 720, 19871, 13, 18, 13, 16, 13, 16, 57855, 2233, 6578, 8131, 56... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:11", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:12", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:52:11 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '75', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999165', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '10ms', 'x-request-id': 'req_c55f6bae364abfed18a6d037642b5107', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb01f7fffbcee1a-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:12", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_c55f6bae364abfed18a6d037642b5107", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:12", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A5A756660>, 'json_data': {'input': [[74598, 96256, 1506, 220, 11068, 23934, 220, 14815, 33006, 17721, 6578, 14837, 20346, 2156, 1830, 6856, 63233, 34943, 9239, 56999, 62491, 13, 23784, 7952, 29256, 47680, 17618, 7820, 49103, 72952, 19175, 89159, 1482, 57925, 44155, 98397, 8341, 4929, 11, 82250, 72060, 23680, 17618, 720, 8131, 6578, 23630, 19916, 7753, 44786, 81376, 23680, 90877, 19175, 97766, 5591, 16331, 1482, 21477, 6578, 35667, 27717, 13373, 57319, 8164, 39900, 96573, 7753, 1840, 97065, 23934, 11047, 12394, 1506, 20879, 4898, 23630, 1506, 13, 720, 972, 13, 17, 13, 717, 57855, 2233, 6578, 14837, 20346, 2156, 1830, 6856, 51736, 34943, 9239, 56999, 18999, 5927, 49855, 9706, 90297, 61813, 16742, 13999, 5524, 14257, 68462, 4898, 16742, 46088, 6856, 21923, 67222, 6856, 17165, 13373, 720, 4898, 80205, 12507, 49103, 19619, 1532, 11, 12561, 34082, 10... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:12", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:12", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:52:12 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '192', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998801', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '14ms', 'x-request-id': 'req_1607cd9bc2df32d1370d459f63e5f315', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb01f82cca1ee1a-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:12", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_1607cd9bc2df32d1370d459f63e5f315", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:12", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A5A756660>, 'json_data': {'input': [[19871, 17279, 220, 5495, 13, 9423, 966, 13, 679, 23, 64571, 8341, 17766, 44065, 7740, 58317, 12394, 32985, 14082, 8341, 17766, 44065, 38098, 79370, 57186, 13, 35448, 2297, 47805, 44065, 29619, 21956, 18999, 13, 28599, 20807, 1840, 17279, 220, 4103, 12, 1721, 12, 1049, 18, 320, 2297, 43896, 9136, 38972, 9882, 10298, 452, 220, 16, 340, 19871, 49899, 73226, 64292, 20879, 220, 777, 7952, 15298, 38722, 2233, 4329, 220, 679, 23, 25756, 13, 97990, 220, 5495, 13, 9423, 966, 13, 679, 23, 198, 74598, 96256, 1506, 220, 8027, 198, 25079, 92533, 93781, 5372, 5524, 91146, 1830, 97065, 27437, 522, 406, 67, 24497, 2001, 21599, 3114, 30656, 2233, 17766, 39900, 18034, 17766, 40590, 23934, 14391, 7975, 50506, 220, 914, 220, 931, 220, 931, 6850, 32330, 8131, 28089, 13999, 12, 44646, 6856, 63233, 7740, 6850, 32330, 8131, 28089, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:12", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:14", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:52:14 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '129', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998671', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '15ms', 'x-request-id': 'req_e011ffce387c9bc5d36041f7563f7645', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb01f865ae9ee1a-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:14", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_e011ffce387c9bc5d36041f7563f7645", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:14", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A5A756660>, 'json_data': {'input': [[74598, 96256, 1506, 220, 7261, 23934, 220, 14815, 33006, 2297, 1482, 9239, 56999, 62491, 11, 48835, 1532, 90457, 67745, 84699, 30480, 1532, 100147, 4655, 5927, 5173, 3114, 7486, 1532, 13, 720, 17279, 31203, 84714, 23630, 14082, 1532, 330, 2297, 49284, 10693, 3865, 12, 5591, 23446, 9136, 1, 41291, 41873, 49899, 90297, 18154, 4329, 20346, 2297, 77495, 39479, 67186, 36352, 25756, 20346, 2156, 44613, 5927, 7820, 13337, 3114, 6856, 7486, 1532, 5524, 720, 13404, 19479, 6856, 50681, 5372, 12648, 6578, 86291, 36750, 9882, 10298, 5173, 3114, 9542, 28114, 15298, 39103, 23311, 12415, 13, 49520, 19188, 67186, 36352, 89666, 22885, 6850, 1840, 17394, 2156, 47295, 46410, 20346, 2297, 1506, 7820, 13337, 3114, 6856, 7486, 1506, 720, 23630, 86630, 14009, 70129, 40842, 44946, 14476, 9542, 16742, 91877, 86291, 36750, 5372, 3990... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:14", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:15", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:52:15 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '101', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999165', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '10ms', 'x-request-id': 'req_5b02e19541ad2aa1b939e48b8029ecb8', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb01f934bb7ee1a-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:15", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_5b02e19541ad2aa1b939e48b8029ecb8", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:15", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-12-01, 06:52:15. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 214 \u0438\u0437 239 \\n \\n\u0421\u0432\u0430\u0438 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u043e\u0431\u0441\u0430\u0436\u0435\u043d\u044b \u043f\u043e \u0432\u0441\u0435\u0439 \u0434\u043b\u0438\u043d\u0435. \\n\u0421.2.7 \u0423\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u043f\u043e\u043f\u0435\u0440\u0435\u0447\u043d\u043e\u0433\u043e \u0441\u0435\u0447\u0435\u043d\u0438\u044f \\n\u0423\u0448\u0438\u0440\u0435\u043d\u0438\u044f \u0431\u0443\u0440\u043e\u0432\u044b\u0445 \u0441\u0432\u0430\u0439 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u044f, \\n\u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0449\u0435\u0433\u043e \u0441 \u043f\u043e\u0432\u0435\u0440\u0445\u043d\u043e\u0441\u0442\u0438 \u043a\u043e\u043d... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:15", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:52:17 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '1864', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '795051', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '371ms', 'x-request-id': 'req_ec2e92afbd881eb45c395b7d875f0353', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb01f98ab30ee33-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_ec2e92afbd881eb45c395b7d875f0353", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:18", "name": "llm_service", "levelname": "DEBUG", "message": "Maximum similarity: 0.8308165487403347, RELEVANCE_THRESHOLD_PROMPT: 0.8", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:18", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer. RELEVANCE_THRESHOLD_DOCS: 0.7", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:18", "name": "llm_service", "levelname": "DEBUG", "message": "Generating suggestions based on user prompt and LLM response.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"Given the following user prompt and LLM response, determine if additional information is needed to help the user fulfill their request and continue the conversation effectively. If yes, provide up to 3 additional prompts based on key concepts in the response, such as 'learn more about ...', 'how to determine ...', 'how to calculate ...', etc., that the user can use to gather more information. If no additional prompts are needed, respond with 'No suggestions needed'.\\n\\nUser Prompt: \u041a\u0430\u043a \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u0430 \u0432\u044f\u0436\u0435\u0442\u0441\u044f \u043c\u0435\u0436\u0434\u0443 \u0441\u043e\u0431\u043e\u0439\\n\\nLLM Response: \u0410\u0440\u043c\u0430\u0442\u0443\u0440\u0430 \u0432\u044f\u0436\u0435\u0442\u0441\u044f \u043c\u0435\u0436\u0434\u0443 \u0441\u043e\u0431\u043e\u0439 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0438 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u0432. \u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u043f\u043e\u0441\u043e\u0431\u044b \u0432\u044f\u0437\u043a\u0438 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b \u0432\u043a\u043b\u044e\u0447\u0430\u044e\u0442:\\n\\n1. **\u0412\u044f\u0437\u0430\u043b\u044c\u043d\u0430\u044f \u043f\u0440\u043e\u0432\u043e\u043b\u043e\u043a\u0430**: \u041d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u043d\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431. \u041f\u0440\u043e\u0432\u043e\u043b\u043e\u043a\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u043d\u0438\u044f \u043f\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043d\u0438\u0439 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u043d\u044b\u0445 \u0441\u0442\u0435\u0440\u0436\u043d\u0435\u0439. \u041e\u0431\u044b\u0447\u043d\u043e \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u0432\u0440\u0443\u0447\u043d\u0443\u044e \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043a\u0440\u044e\u0447\u043a\u043e\u0432 \u0434\u043b\u044f \u0432\u044f\u0437\u043a\u0438.\\n\\n2. **\u041f\u043b\u0430\u0441\u0442... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:52:18 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '147', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '799491', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '38ms', 'x-request-id': 'req_ef26a5fec1a7e8564861e09cfe4877fd', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb01fa83e2bee33-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:18", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_ef26a5fec1a7e8564861e09cfe4877fd", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:18", "name": "llm_service", "levelname": "DEBUG", "message": "LLM determined that no suggestions are needed.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:18", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0410\u0440\u043c\u0430\u0442\u0443\u0440\u0430 \u0432\u044f\u0436\u0435\u0442\u0441\u044f \u043c\u0435\u0436\u0434\u0443 \u0441\u043e\u0431\u043e\u0439 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0438 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u0432. \u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u043f\u043e\u0441\u043e\u0431\u044b \u0432\u044f\u0437\u043a\u0438 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b \u0432\u043a\u043b\u044e\u0447\u0430\u044e\u0442:\\n\\n1. <b>\u0412\u044f\u0437\u0430\u043b\u044c\u043d\u0430\u044f \u043f\u0440\u043e\u0432\u043e\u043b\u043e\u043a\u0430</b>: \u041d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u043d\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431. \u041f\u0440\u043e\u0432\u043e\u043b\u043e\u043a\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u043d\u0438\u044f \u043f\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043d\u0438\u0439 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u043d\u044b\u0445 \u0441\u0442\u0435\u0440\u0436\u043d\u0435\u0439. \u041e\u0431\u044b\u0447\u043d\u043e \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u0432\u0440\u0443\u0447\u043d\u0443\u044e \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043a\u0440\u044e\u0447\u043a\u043e\u0432 \u0434\u043b\u044f \u0432\u044f\u0437\u043a\u0438.\\n\\n2. <b>\u041f\u043b\u0430\u0441\u0442\u0438\u043a\u043e\u0432\u044b\u0435 \u0441\u0442\u044f\u0436\u043a\u0438</b>: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0434\u043b\u044f \u0431\u044b\u0441\u0442\u0440\u043e\u0433\u043e \u0438 \u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b, \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u043d\u0430 \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u0438\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u0445 \u0438\u043b\u0438 \u043f\u0440\u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u043c \u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u0438.\\n\\n3. <b>\u0421\u0432\u0430\u0440\u043a\u0430</b>: \u041f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0431\u043e\u043b\u0435\u0435 \u0436\u0435\u0441\u0442\u043a\u0438\u0445 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439, \u0445\u043e\u0442\u044f \u0441\u0432\u0430\u0440\u043a\u0430 \u043d\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u043d\u0430 \u0438\u0437\u0433\u0438\u0431\u0430\u0445 \u0438\u043b\u0438 \u0432\u0431\u043b\u0438\u0437\u0438 \u043d\u0438\u0445, \u0447\u0442\u043e\u0431\u044b \u0438\u0437\u0431\u0435\u0436\u0430\u0442\u044c \u043e\u0441\u043b\u0430\u0431\u043b\u0435\u043d\u0438\u044f \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b.\\n\\n\u041a\u0430\u0436\u0434\u044b\u0439 \u0438\u0437 \u044d\u0442\u0438\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0438\u043c\u0435\u0435\u0442 \u0441\u0432\u043e\u0438 \u043f\u0440\u0435\u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432\u0430 \u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u0439 \u043f\u0440\u043e\u0435\u043a\u0442\u0430 \u0438 \u0443\u0441\u043b\u043e\u0432\u0438\u0439 \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0430.\\n\\n------------------\\nReferences (/references):\\n\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf, pages: 111, 158, 213\\n\u0411\u0435\u0442\u043e\u043d\u043d\u044b\u0435_\u0438_\u0436\u0435\u043b\u0435\u0437\u043e\u0431\u0435\u0442\u043e\u043d\u043d\u044b\u0435_\u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438_SP_63_13330_2018.pdf, pages: 11... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:18", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:18", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='6461324e-6158-48d6-b43a-bd18f30950c7'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:19", "name": "handlers", "levelname": "INFO", "message": "Sent response to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:52:19", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:04", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:05", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:05", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:05", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u041a\u0430\u043a \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0443\u044e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e \u043a\u0440\u044b\u0448\u0438'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:05", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x0000022A58739D60>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 12, 1, 3, 53, 4, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2783, supergroup_chat_created=False, text='\u041a\u0430\u043a \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0443\u044e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e \u043a\u0440\u044b\u0448\u0438'), update_id=881193811), <telegram.ext._callbackcontext.CallbackContext object at 0x0000022AA58DACF0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:05", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x0000022A5A34A890>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:05", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='28f42ec4-a879-4f70-9d5f-6ccc8f413006' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:05", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='28f42ec4-a879-4f70-9d5f-6ccc8f413006'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:05", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:05", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x0000022A58A5C8F0>, '\u041a\u0430\u043a \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0443\u044e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e \u043a\u0440\u044b\u0448\u0438'), kwargs: {'chat_history': [HumanMessage(content='\u041a\u0430\u043a \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0443\u044e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e \u043a\u0440\u044b\u0448\u0438', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u041a\u0430\u043a \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u0430 \u0432\u044f\u0436\u0435\u0442\u0441\u044f \u043c\u0435\u0436\u0434\u0443 \u0441\u043e\u0431\u043e\u0439', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0410\u0440\u043c\u0430\u0442\u0443\u0440\u0430 \u0432\u044f\u0436\u0435\u0442\u0441\u044f \u043c\u0435\u0436\u0434\u0443 \u0441\u043e\u0431\u043e\u0439 \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u043c\u0435\u0442\u043e\u0434\u043e\u0432 \u0438 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u0432. \u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u043f\u043e\u0441\u043e\u0431\u044b \u0432\u044f\u0437\u043a\u0438 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b \u0432\u043a\u043b\u044e\u0447\u0430\u044e\u0442:\\n\\n1. <b>\u0412\u044f\u0437\u0430\u043b\u044c\u043d\u0430\u044f \u043f\u0440\u043e\u0432\u043e\u043b\u043e\u043a\u0430</b>: \u041d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u043d\u044b\u0439 \u0441\u043f\u043e\u0441\u043e\u0431. \u041f\u0440\u043e\u0432\u043e\u043b\u043e\u043a\u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u0432\u044f\u0437\u044b\u0432\u0430\u043d\u0438\u044f \u043f\u0435\u0440\u0435\u0441\u0435\u0447\u0435\u043d\u0438\u0439 \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u043d\u044b\u0445 \u0441\u0442\u0435\u0440\u0436\u043d\u0435\u0439. \u041e\u0431\u044b\u0447\u043d\u043e \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u0432\u0440\u0443\u0447\u043d\u0443\u044e \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043a\u0440\u044e\u0447\u043a\u043e\u0432 \u0434\u043b\u044f \u0432\u044f\u0437\u043a\u0438.\\n\\n2. <b>\u041f\u043b\u0430\u0441\u0442\u0438\u043a\u043e\u0432\u044b\u0435 \u0441\u0442\u044f\u0436\u043a\u0438</b>: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0434\u043b\u044f \u0431\u044b\u0441\u0442\u0440\u043e\u0433\u043e \u0438 \u043f\u0440\u043e\u0441\u0442\u043e\u0433\u043e \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u044f \u0430\u0440\u043c\u0430\u0442\u0443\u0440\u044b, \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e \u043d\u0430 \u043d\u0435\u0431\u043e\u043b\u044c\u0448\u0438\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u0430\u0445 \u0438\u043b\u0438 \u043f\u0440\u0438 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u043e\u043c \u043a\u0440\u0435\u043f\u043b\u0435\u043d\u0438\u0438.\\n\\n3. <b>\u0421\u0432\u0430\u0440\u043a\u0430</b>: \u041f\u0440\u0438\u043c\u0435\u043d\u044f\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u0431\u043e\u043b\u0435\u0435 \u0436\u0435\u0441\u0442\u043a\u0438\u0445 \u0441\u043e\u0435\u0434\u0438\u043d\u0435\u043d\u0438\u0439, \u0445\u043e\u0442\u044f \u0441\u0432\u0430\u0440\u043a\u0430 \u043d\u0435 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u043d\u0430 \u0438\u0437\u0433\u0438\u0431... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:05", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A5A29FF60>, 'json_data': {'input': [[27435, 16248, 63229, 2233, 18482, 73226, 67602, 77495, 38098, 79370, 15458, 12182, 7820, 39103, 30480]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:05", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:53:05 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '38', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999985', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_f8e01919bdebe92cfcce45e234ef5fdb', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb020cfcf85ee12-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_f8e01919bdebe92cfcce45e234ef5fdb", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:06", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A5A756520>, 'json_data': {'input': [[27435, 16248, 63229, 2233, 18482, 73226, 67602, 77495, 38098, 79370, 15458, 12182, 7820, 39103, 30480]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:53:06 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '64', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999985', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_43f593cc0257fa4b42912149a4f82a02', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb020d2dd52ee12-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_43f593cc0257fa4b42912149a4f82a02", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A5A29FF60>, 'json_data': {'input': [[3391, 33006, 23, 13, 16, 13, 16, 36479, 39103, 30480, 72060, 7975, 40251, 70129, 21204, 69471, 8131, 12648, 64880, 46177, 5173, 3114, 23630, 4898, 16494, 1840, 13, 36479, 69471, 8131, 12648, 6578, 20879, 13999, 21204, 1830, 21204, 7820, 39103, 30480, 5524, 720, 67187, 3114, 17766, 12507, 220, 16, 25, 21, 7740, 14391, 7975, 50506, 11, 7820, 5173, 3114, 23630, 4898, 16494, 482, 7820, 39103, 30480, 5524, 14257, 4898, 3114, 17766, 12507, 69844, 50506, 220, 16, 25, 21, 13, 23227, 3114, 23630, 17165, 1532, 7820, 39103, 30480, 56449, 12648, 720, 16494, 8341, 4929, 14257, 4898, 3114, 17766, 19175, 69844, 50506, 220, 16, 25, 1135, 20440, 21923, 23297, 8164, 56857, 18999, 18868, 74351, 7952, 21956, 7094, 33742, 16742, 7740, 11047, 16331, 16742, 5927, 9706, 4655, 13, 23784, 69471, 8131, 44786, 720, 95565, 12426, 1506, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:53:06 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '146', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998522', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '17ms', 'x-request-id': 'req_9df55610141087e538b88b16d10e4fee', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb020d53a05ee12-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_9df55610141087e538b88b16d10e4fee", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A5A29FF60>, 'json_data': {'input': [[2131, 33006, 23, 13, 22, 13, 17, 23784, 69471, 8131, 44786, 7740, 5173, 3114, 23630, 17165, 10693, 7820, 39103, 12426, 1506, 10693, 89715, 3865, 10693, 1840, 14257, 6735, 22911, 28089, 1506, 70129, 21204, 5927, 6850, 1840, 17394, 2156, 21708, 40842, 12426, 28089, 53671, 720, 13433, 2233, 23446, 9136, 1506, 320, 2233, 13810, 35297, 15088, 220, 23, 13, 20, 8, 5927, 74020, 1532, 12561, 9239, 32985, 21708, 7740, 20879, 49284, 6735, 44938, 13, 35448, 1830, 49284, 6735, 40231, 7740, 12561, 9239, 32985, 1840, 91398, 19175, 720, 59030, 18482, 11, 47353, 6850, 1840, 17394, 40251, 4329, 40842, 12426, 28089, 13433, 7820, 17721, 23446, 9136, 1506, 72060, 7975, 40251, 50819, 23934, 28114, 19916, 9239, 59921, 28241, 10693, 26539, 35111, 6856, 13, 720, 23, 13, 22, 13, 18, 23784, 69471, 8131, 44786, 7820, 39103, 12426, 1506... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:53:07 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '81', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998511', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '17ms', 'x-request-id': 'req_6070c7dc3aa04b71709361b98bb9470f', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb020dafc17ee12-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_6070c7dc3aa04b71709361b98bb9470f", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A5A29FF60>, 'json_data': {'input': [[4370, 33006, 23, 13, 20, 13, 22, 13, 17, 51418, 7975, 14476, 69775, 13373, 55523, 31443, 20440, 81757, 33793, 3114, 3865, 8131, 1840, 20346, 10298, 16742, 5173, 3114, 23630, 4898, 16742, 7820, 39103, 30480, 56449, 14525, 34943, 13337, 48074, 20812, 6856, 18482, 720, 9136, 31281, 18999, 6578, 11, 12561, 28089, 13404, 5372, 12648, 6578, 5927, 79327, 1532, 220, 21, 13, 17, 20440, 90211, 44786, 29619, 6856, 13, 720, 23, 13, 21, 36479, 24803, 14009, 720, 23, 13, 21, 13, 16, 36479, 24803, 14009, 56449, 14525, 21923, 23297, 8164, 56857, 28089, 18482, 44946, 14476, 9542, 3865, 38098, 79370, 15458, 12415, 7820, 39103, 30480, 7740, 7952, 12507, 1506, 20879, 720, 8164, 2233, 17766, 38822, 39280, 7952, 21956, 7094, 33742, 16742, 11, 11047, 16331, 16742, 5927, 9706, 4655, 7740, 5524, 2156, 25698, 1506, 13, 23784, 22918, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:09", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:53:08 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '86', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998329', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '20ms', 'x-request-id': 'req_814d9adcb50a2fd3b6eca7493e852f3d', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb020de2945ee12-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:09", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_814d9adcb50a2fd3b6eca7493e852f3d", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:09", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A5A29FF60>, 'json_data': {'input': [[19871, 17279, 220, 20571, 13, 9413, 18216, 15, 13, 2366, 17, 33006, 1691, 33006, 720, 22, 13, 18, 13, 16, 36479, 39103, 30480, 72060, 7975, 40251, 70129, 23934, 93129, 72119, 67745, 38098, 79370, 98695, 44786, 46088, 6856, 25, 720, 12, 7820, 24803, 26503, 39900, 5173, 15088, 39103, 23311, 4329, 26, 720, 12, 19175, 2297, 43293, 67745, 38098, 79370, 15458, 12415, 320, 51745, 29256, 1840, 31443, 11, 14391, 16331, 17165, 11, 18034, 7753, 6578, 4655, 7740, 7952, 2233, 13, 1237, 720, 12, 14257, 1830, 67124, 3114, 9542, 44100, 320, 7094, 14009, 11047, 67124, 3114, 16742, 7820, 39103, 30480, 1237, 720, 12, 6850, 1840, 17394, 2156, 47295, 5173, 15088, 39103, 23311, 4329, 320, 6148, 7753, 47805, 36497, 40842, 12426, 28089, 13433, 7740, 20879, 59030, 13433, 570, 720, 27435, 24803, 26503, 48150, 720, 8164, 15088, 39103,... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:09", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:09", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:53:09 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '109', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998878', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '13ms', 'x-request-id': 'req_db22a9048aa589f8a8d261094c756e91', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb020e52eeaee12-CGK', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:09", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_db22a9048aa589f8a8d261094c756e91", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:09", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"You are a project assistant from the consultant side on design and construction projects. If you don't know the answer, say that you don't know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-12-01, 06:53:09. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n43 \\n \\n8.1.1 \u041a\u0440\u044b\u0448\u0438 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u044e\u0442\u0441\u044f \u0441\u043a\u0430\u0442\u043d\u044b\u043c\u0438 \u0438\u043b\u0438 \u043f\u043b\u043e\u0441\u043a\u0438\u043c\u0438. \u041a \u0441\u043a\u0430\u0442\u043d\u044b\u043c \u043e\u0442\u043d\u043e\u0441\u044f\u0442\u0441\u044f \u043a\u0440\u044b\u0448\u0438 \u0441 \\n\u0443\u043a\u043b\u043e\u043d\u043e\u043c 1:6 \u0438 \u0431\u043e\u043b\u0435\u0435, \u043a \u043f\u043b\u043e\u0441\u043a\u0438\u043c - \u043a\u0440\u044b\u0448\u0438 \u0441 \u0443\u043a\u043b\u043e\u043d\u043e\u043c \u043c\u0435\u043d\u0435\u0435 1:6. \u041f\u043b\u043e\u0441\u043a\u0438\u0435 \u043a\u0440\u044b\u0448\u0438 \u0434\u043e\u043b\u0436\u043d\u044b \\n\u0438\u043c\u0435\u0442\u044c \u0443\u043a\u043b\u043e\u043d \u043d\u0435 \u043c\u0435\u043d\u0435\u0435 1:50 \u0434\u043b\u044f \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0435\u043d\u0438\u044f \u0441\u0442\u043e\u043a\u0430 ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:09", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:15", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:53:15 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '4309', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '793405', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '494ms', 'x-request-id': 'req_d85b8d480da86aa855c024eb623c3394', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb020ea6e042df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:15", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_d85b8d480da86aa855c024eb623c3394", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:15", "name": "llm_service", "levelname": "DEBUG", "message": "Maximum similarity: 0.8529174829053313, RELEVANCE_THRESHOLD_PROMPT: 0.8", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:15", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer. RELEVANCE_THRESHOLD_DOCS: 0.7", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:15", "name": "llm_service", "levelname": "DEBUG", "message": "Generating suggestions based on user prompt and LLM response.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:15", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"Given the following user prompt and LLM response, determine if additional information is needed to help the user fulfill their request and continue the conversation effectively. If yes, provide up to 3 additional prompts based on key concepts in the response, such as 'learn more about ...', 'how to determine ...', 'how to calculate ...', etc., that the user can use to gather more information. If no additional prompts are needed, respond with 'No suggestions needed'.\\n\\nUser Prompt: \u041a\u0430\u043a \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0443\u044e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e \u043a\u0440\u044b\u0448\u0438\\n\\nLLM Response: \u0412\u044b\u0431\u043e\u0440 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0439 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u043a\u0440\u044b\u0448\u0438 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0444\u0430\u043a\u0442\u043e\u0440\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c \u043f\u0440\u0438 \u043f\u0440\u043e\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 \u0438 \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0435:\\n\\n1. **\u0422\u0438\u043f \u043a\u0440\u044b\u0448\u0438**:\\n   - **\u0421\u043a\u0430\u0442\u043d\u044b\u0435 \u043a\u0440\u044b\u0448\u0438**: \u041e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u044e\u0442 \u0445\u043e\u0440\u043e\u0448\u0438\u0439 \u0441\u0442\u043e\u043a \u0432\u043e\u0434\u044b \u0438 \u0441\u043d\u0435\u0433\u0430. \u041f\u043e\u0434\u0445\u043e\u0434\u044f\u0442 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u043e\u043d\u043e\u0432 \u0441 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u043e\u0441\u0430\u0434\u043a\u043e\u0432.\\n   - **\u041f\u043b\u043e\u0441\u043a\u0438\u0435 \u043a\u0440\u044b\u0448\u0438**: \u0427\u0430\u0441\u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0432 \u0441\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0437\u0434\u0430\u043d\u0438\u044f\u0445 \u0438 ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:15", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:19", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:53:18 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '1308', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '799155', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '63ms', 'x-request-id': 'req_ebfea7251cdddc2c1a72141a64c8ce24', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb0210e98b12df9-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:19", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_ebfea7251cdddc2c1a72141a64c8ce24", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:19", "name": "llm_service", "levelname": "DEBUG", "message": "Generated suggestions: ['\u0423\u0437\u043d\u0430\u0439\u0442\u0435 \u0431\u043e\u043b\u044c\u0448\u0435 \u043e \u0440\u0430\u0437\u043b\u0438\u0447\u043d\u044b\u0445 \u0442\u0438\u043f\u0430\u0445 \u043a\u0440\u043e\u0432\u0435\u043b\u044c\u043d\u044b\u0445 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u043e\u0432 \u0438 \u0438\u0445 \u043f\u0440\u0435\u0438\u043c\u0443\u0449\u0435\u0441\u0442\u0432\u0430\u0445 \u0438 \u043d\u0435\u0434\u043e\u0441\u0442\u0430\u0442\u043a\u0430\u0445 \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0443\u0441\u043b\u043e\u0432\u0438\u0439 \u0440\u0435\u0433\u0438\u043e\u043d\u0430.', '\u041a\u0430\u043a \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e \u043a\u0440\u044b\u0448\u0438 \u0434\u043b\u044f \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u043e\u0433\u043e \u0440\u0435\u0433\u0438\u043e\u043d\u0430 \u0441 \u0443\u0447\u0435\u0442\u043e\u043c \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0438 \u043f\u043e\u0433\u043e\u0434\u043d\u044b\u0445 \u0443\u0441\u043b\u043e\u0432\u0438\u0439?', '\u041a\u0430\u043a \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u0430\u0442\u044c \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0443 \u043d\u0430 \u043a\u0440\u044b\u0448\u0443 \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u043f\u0440\u0435\u0434\u043f\u043e\u043b\u0430\u0433\u0430\u0435\u043c\u044b\u0445 \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0443\u0441\u043b\u043e\u0432\u0438\u0439 \u0438 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u0433\u043e \u0442\u0438\u043f\u0430 \u043a\u0440\u044b\u0448\u0438?']", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:19", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0412\u044b\u0431\u043e\u0440 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0439 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u043a\u0440\u044b\u0448\u0438 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0444\u0430\u043a\u0442\u043e\u0440\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c \u043f\u0440\u0438 \u043f\u0440\u043e\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 \u0438 \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0435:\\n\\n1. <b>\u0422\u0438\u043f \u043a\u0440\u044b\u0448\u0438</b>:\\n\u2022 <b>\u0421\u043a\u0430\u0442\u043d\u044b\u0435 \u043a\u0440\u044b\u0448\u0438</b>: \u041e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u044e\u0442 \u0445\u043e\u0440\u043e\u0448\u0438\u0439 \u0441\u0442\u043e\u043a \u0432\u043e\u0434\u044b \u0438 \u0441\u043d\u0435\u0433\u0430. \u041f\u043e\u0434\u0445\u043e\u0434\u044f\u0442 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u043e\u043d\u043e\u0432 \u0441 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u043e\u0441\u0430\u0434\u043a\u043e\u0432.\\n\u2022 <b>\u041f\u043b\u043e\u0441\u043a\u0438\u0435 \u043a\u0440\u044b\u0448\u0438</b>: \u0427\u0430\u0441\u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0432 \u0441\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0437\u0434\u0430\u043d\u0438\u044f\u0445 \u0438 \u043c\u043e\u0433\u0443\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043a\u0430\u043a \u0442\u0435\u0440\u0440\u0430\u0441\u044b. \u0422\u0440\u0435\u0431\u0443\u044e\u0442 \u0442\u0449\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u0438.\\n\\n2. <b>\u041c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b</b>:\\n\u2022 <b>\u041a\u0440\u043e\u0432\u0435\u043b\u044c\u043d\u043e\u0435 \u043f\u043e\u043a\u0440\u044b\u0442\u0438\u0435</b>: \u0412\u044b\u0431\u043e\u0440 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u0430 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0443\u0441\u043b\u043e\u0432\u0438\u0439, \u044d\u0441\u0442\u0435\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0435\u043d\u0438\u0439 \u0438 \u0431\u044e\u0434\u0436\u0435\u0442\u0430. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043c\u0435\u0442\u0430\u043b\u043b, \u0447\u0435\u0440\u0435\u043f\u0438\u0446\u0430, \u0431\u0438\u0442\u0443\u043c\u043d\u044b\u0435 \u0440\u0443\u043b\u043e\u043d\u043d\u044b\u0435 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b \u0438 \u0442.\u0434.\\n\u2022 <b>\u041d\u0435\u0441\u0443\u0449\u0438\u0435 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438</b>: \u0412\u043a\u043b\u044e\u0447\u0430\u044e\u0442 \u0441\u0442\u0440\u043e\u043f\u0438\u043b\u0430, \u0431\u0430\u043b\u043a\u0438 \u0438\u043b\u0438 \u0444\u0435\u0440\u043c\u044b. \u0414\u0435\u0440\u0435\u0432\u044f\u043d\u043d\u044b\u0435 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u043f\u043e\u043f\u0443\u043b\u044f\u0440\u043d\u044b \u0434\u043b\u044f \u0447\u0430\u0441\u0442\u043d\u044b\u0445 \u0434\u043e\u043c\u043e\u0432, \u0430 \u043c\u0435\u0442\u0430\u043b\u043b\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u2014 \u0434\u043b\u044f \u043f\u0440\u043e\u043c\u044b\u0448\u043b\u0435\u043d\u043d\u044b\u0445 \u0437\u0434\u0430\u043d\u0438\u0439.\\n\\n3. <b>\u041a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f</b>:\\n\u2022 \u0412 \u0440\u0430\u0439\u043e\u043d\u0430\u0445 \u0441 \u0441\u0438\u043b\u044c\u043d\u044b\u043c\u0438 \u0432\u0435\u0442\u0440\u0430\u043c\u0438 \u0438 \u0441\u043d\u0435\u0433\u043e\u043f\u0430\u0434\u0430\u043c\u0438 \u0432\u0430\u0436\u043d\u043e \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c \u043d\u0430\u0433\u0440\u0443\u0437\u043a\u0443 \u043d\u0430 \u043a\u0440\u044b\u0448\u0443 \u0438 \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e, \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u044e\u0449\u0443\u044e \u0443\u0441\u0442\u043e\u0439\u0447\u0438\u0432\u043e\u0441\u0442\u044c \u043a \u0442\u0430\u043a\u0438\u043c ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:19", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:19", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='28f42ec4-a879-4f70-9d5f-6ccc8f413006'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:19", "name": "handlers", "levelname": "INFO", "message": "Prepared suggestion buttons for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:20", "name": "handlers", "levelname": "INFO", "message": "Sent response with inline buttons to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:20", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:50", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:51", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:51", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:51", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/references'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:51", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: references_command with args: (<handlers.BotHandlers object at 0x0000022A58739D60>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 12, 1, 3, 53, 50, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=11, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2785, supergroup_chat_created=False, text='/references'), update_id=881193812), <telegram.ext._callbackcontext.CallbackContext object at 0x0000022AA58DABA0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:51", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: references_command with result: <coroutine object BotHandlers.references_command at 0x0000022A5A06A110>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:52", "name": "handlers", "levelname": "INFO", "message": "Sent reference buttons to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:52", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:55", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:55", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:55", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:55", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='get_file:file_1'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:55", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: send_file with args: (<handlers.BotHandlers object at 0x0000022A58739D60>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='get_file:file_1', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), id='1051116659077780677', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 12, 1, 3, 53, 51, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2786, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='get_file:file_0', text='\u0414\u0435\u0440\u0435\u0432\u044f\u043d\u043d\u044b\u0435 \u0441\u0440\u0443\u0431\u043d\u044b\u0435 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438_\u0421\u041f 516.1325800.2022.pdf'),), (InlineKeyboardButton(callback_data='get_file:file_1', text='\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0435 \u0414\u043e\u043c\u0430_\u0421\u041f 31-105-2002 .pdf'),))), supergroup_chat_cr... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:55", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: send_file with result: <coroutine object BotHandlers.send_file at 0x0000022A5A1B1BC0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:56", "name": "handlers", "levelname": "DEBUG", "message": "Initiated async task to send file '\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0435 \u0414\u043e\u043c\u0430_\u0421\u041f 31-105-2002 .pdf' to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:53:56", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:04", "name": "handlers", "levelname": "INFO", "message": "File '\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0435 \u0414\u043e\u043c\u0430_\u0421\u041f 31-105-2002 .pdf' sent successfully to user_id=244732168.", "taskName": "Task-1070"}
{"asctime": "2024-12-01 06:54:48", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:48", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:48", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:48", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u041a\u0430\u043a\u0430\u044f \u0442\u043e\u043b\u0449\u0438\u043d\u0430 \u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0443 \u0448\u0442\u0443\u043a\u0430\u0442\u0443\u0440\u043a\u0438'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:48", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x0000022A58739D60>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 12, 1, 3, 54, 48, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2788, supergroup_chat_created=False, text='\u041a\u0430\u043a\u0430\u044f \u0442\u043e\u043b\u0449\u0438\u043d\u0430 \u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0443 \u0448\u0442\u0443\u043a\u0430\u0442\u0443\u0440\u043a\u0438'), update_id=881193814), <telegram.ext._callbackcontext.CallbackContext object at 0x0000022AA58DBF50>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:48", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x0000022A5A7DC8B0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:48", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='7dd27092-9297-4c85-8596-134843aec8eb' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:48", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='7dd27092-9297-4c85-8596-134843aec8eb'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:49", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:49", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x0000022A58A5C8F0>, '\u041a\u0430\u043a\u0430\u044f \u0442\u043e\u043b\u0449\u0438\u043d\u0430 \u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0443 \u0448\u0442\u0443\u043a\u0430\u0442\u0443\u0440\u043a\u0438'), kwargs: {'chat_history': [HumanMessage(content='\u041a\u0430\u043a\u0430\u044f \u0442\u043e\u043b\u0449\u0438\u043d\u0430 \u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0443 \u0448\u0442\u0443\u043a\u0430\u0442\u0443\u0440\u043a\u0438', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u041a\u0430\u043a \u0432\u044b\u0431\u0440\u0430\u0442\u044c \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u0443\u044e \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u044e \u043a\u0440\u044b\u0448\u0438', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0412\u044b\u0431\u043e\u0440 \u043f\u0440\u0430\u0432\u0438\u043b\u044c\u043d\u043e\u0439 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438 \u043a\u0440\u044b\u0448\u0438 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0444\u0430\u043a\u0442\u043e\u0440\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u043b\u0435\u0434\u0443\u0435\u0442 \u0443\u0447\u0438\u0442\u044b\u0432\u0430\u0442\u044c \u043f\u0440\u0438 \u043f\u0440\u043e\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0438 \u0438 \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u0441\u0442\u0432\u0435:\\n\\n1. <b>\u0422\u0438\u043f \u043a\u0440\u044b\u0448\u0438</b>:\\n\u2022 <b>\u0421\u043a\u0430\u0442\u043d\u044b\u0435 \u043a\u0440\u044b\u0448\u0438</b>: \u041e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u044e\u0442 \u0445\u043e\u0440\u043e\u0448\u0438\u0439 \u0441\u0442\u043e\u043a \u0432\u043e\u0434\u044b \u0438 \u0441\u043d\u0435\u0433\u0430. \u041f\u043e\u0434\u0445\u043e\u0434\u044f\u0442 \u0434\u043b\u044f \u0440\u0435\u0433\u0438\u043e\u043d\u043e\u0432 \u0441 \u0432\u044b\u0441\u043e\u043a\u0438\u043c \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u043e\u0441\u0430\u0434\u043a\u043e\u0432.\\n\u2022 <b>\u041f\u043b\u043e\u0441\u043a\u0438\u0435 \u043a\u0440\u044b\u0448\u0438</b>: \u0427\u0430\u0441\u0442\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u044e\u0442\u0441\u044f \u0432 \u0441\u043e\u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0437\u0434\u0430\u043d\u0438\u044f\u0445 \u0438 \u043c\u043e\u0433\u0443\u0442 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u043a\u0430\u043a \u0442\u0435\u0440\u0440\u0430\u0441\u044b. \u0422\u0440\u0435\u0431\u0443\u044e\u0442 \u0442\u0449\u0430\u0442\u0435\u043b\u044c\u043d\u043e\u0439 \u0433\u0438\u0434\u0440\u043e\u0438\u0437\u043e\u043b\u044f\u0446\u0438\u0438.\\n\\n2. <b>\u041c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u044b</b>:\\n\u2022 <b>\u041a\u0440\u043e\u0432\u0435\u043b\u044c\u043d\u043e\u0435 \u043f\u043e\u043a\u0440\u044b\u0442\u0438\u0435</b>: \u0412\u044b\u0431\u043e\u0440 \u043c\u0430\u0442\u0435\u0440\u0438\u0430\u043b\u0430 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0443\u0441\u043b\u043e\u0432\u0438\u0439, \u044d\u0441\u0442\u0435\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043f\u0440\u0435\u0434\u043f\u043e\u0447\u0442\u0435\u043d\u0438\u0439 \u0438 \u0431\u044e\u0434\u0436\u0435\u0442\u0430. \u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u043c\u0435\u0442\u0430\u043b\u043b, \u0447\u0435\u0440\u0435\u043f\u0438\u0446\u0430, \u0431\u0438\u0442\u0443\u043c\u043d\u044b\u0435 ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A5A756520>, 'json_data': {'input': [[27435, 16248, 36497, 11047, 7975, 14476, 69775, 21022, 56449, 14525, 62731, 14257, 55617, 1830, 67187, 8131, 56515, 17165]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:49", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:54:50 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '109', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999981', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_03636f415796909751ee1b2b632e44ef', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb023574e412df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_03636f415796909751ee1b2b632e44ef", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:50", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A5A29FF60>, 'json_data': {'input': [[27435, 16248, 36497, 11047, 7975, 14476, 69775, 21022, 56449, 14525, 62731, 14257, 55617, 1830, 67187, 8131, 56515, 17165]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:50", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:54:50 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '42', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999981', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_ceb4910359e3822f436242c788890d9f', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb023600d572df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_ceb4910359e3822f436242c788890d9f", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A5A29FF60>, 'json_data': {'input': [[4370, 33006, 23, 13, 20, 13, 22, 13, 17, 51418, 7975, 14476, 69775, 13373, 55523, 31443, 20440, 81757, 33793, 3114, 3865, 8131, 1840, 20346, 10298, 16742, 5173, 3114, 23630, 4898, 16742, 7820, 39103, 30480, 56449, 14525, 34943, 13337, 48074, 20812, 6856, 18482, 720, 9136, 31281, 18999, 6578, 11, 12561, 28089, 13404, 5372, 12648, 6578, 5927, 79327, 1532, 220, 21, 13, 17, 20440, 90211, 44786, 29619, 6856, 13, 720, 23, 13, 21, 36479, 24803, 14009, 720, 23, 13, 21, 13, 16, 36479, 24803, 14009, 56449, 14525, 21923, 23297, 8164, 56857, 28089, 18482, 44946, 14476, 9542, 3865, 38098, 79370, 15458, 12415, 7820, 39103, 30480, 7740, 7952, 12507, 1506, 20879, 720, 8164, 2233, 17766, 38822, 39280, 7952, 21956, 7094, 33742, 16742, 11, 11047, 16331, 16742, 5927, 9706, 4655, 7740, 5524, 2156, 25698, 1506, 13, 23784, 22918, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:51", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:54:51 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '150', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998329', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '20ms', 'x-request-id': 'req_9c306efc828d494ed8fc4c3e895e4981', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb0236478a62df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_9c306efc828d494ed8fc4c3e895e4981", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A5A29FF60>, 'json_data': {'input': [[1227, 33006, 605, 13, 18, 13, 16, 13, 19, 36479, 80230, 13433, 59195, 10124, 1482, 56449, 14525, 62731, 99396, 51412, 5524, 28114, 33742, 64084, 4898, 16742, 55617, 5591, 6856, 11, 59195, 10124, 1482, 56449, 14525, 62731, 720, 44155, 64292, 51412, 21022, 2233, 6578, 8131, 56515, 12648, 64880, 5524, 8341, 4898, 50807, 46177, 74254, 40211, 4329, 18868, 39127, 12648, 64880, 18868, 58669, 40251, 64880, 7952, 1840, 24697, 8341, 2233, 12507, 19175, 69844, 50506, 720, 19, 11, 15, 11562, 6578, 11, 39479, 6578, 86610, 32062, 4655, 64880, 5927, 25756, 9239, 41873, 97341, 39127, 44786, 55617, 94538, 10693, 19175, 14391, 7975, 50506, 17756, 10298, 90211, 32985, 220, 10617, 11562, 6578, 18154, 21477, 2297, 13337, 1532, 13, 720, 605, 13, 18, 13, 17, 51418, 7975, 14476, 69775, 21923, 67222, 6856, 17165, 720, 605, 13, 18, 1... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:52", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:54:52 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '84', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999190', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '9ms', 'x-request-id': 'req_70a87bcb045cbee1871b0a4a8e544e95', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb0236aecf02df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_70a87bcb045cbee1871b0a4a8e544e95", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A5A29FF60>, 'json_data': {'input': [[74598, 96256, 1506, 220, 4218, 23934, 220, 14815, 33006, 7094, 48181, 12648, 62731, 19175, 25756, 3114, 64569, 59138, 220, 1758, 11562, 6578, 720, 1840, 7952, 11320, 39988, 19175, 69844, 50506, 17756, 10298, 13373, 220, 966, 720, 6578, 6578, 67969, 38438, 1532, 25756, 3114, 64569, 1840, 12648, 53280, 12394, 17165, 720, 1114, 51418, 2233, 50693, 6856, 39280, 7820, 25756, 73761, 24697, 45916, 19039, 11, 720, 14525, 38153, 51736, 6850, 34493, 67024, 17165, 720, 8164, 7753, 13404, 1506, 70129, 21204, 6850, 67124, 23630, 44075, 20812, 5372, 13999, 720, 10124, 32985, 8379, 15752, 73761, 13433, 320, 8164, 79563, 57719, 5372, 34613, 720, 6735, 4655, 4898, 8, 720, 35095, 9239, 10589, 4655, 56449, 12648, 62731, 720, 15752, 9239, 41873, 97341, 39127, 12648, 64880, 5524, 720, 13337, 4898, 3114, 17766, 18999, 64880, 1917... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:53", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:54:54 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '322', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999350', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '7ms', 'x-request-id': 'req_e623f641f4961b9c0a0ffff8d1d4a95d', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb023714a302df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_e623f641f4961b9c0a0ffff8d1d4a95d", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A5A29FF60>, 'json_data': {'input': [[5591, 8, 78876, 64322, 44858, 7952, 11320, 14525, 14257, 15752, 3114, 6856, 22885, 55617, 94538, 56449, 14525, 62731, 19175, 69844, 50506, 220, 19, 198, 7740, 19175, 69844, 50506, 220, 1272, 11562, 6578, 26, 33006, 15752, 8, 78876, 64322, 44858, 7952, 11320, 14525, 18034, 3114, 7486, 15752, 6856, 22885, 55617, 94538, 56449, 14525, 62731, 19175, 14391, 7975, 50506, 220, 5313, 198, 11, 44946, 7740, 2297, 52520, 9882, 10298, 55617, 5591, 6856, 11, 5927, 720, 4898, 36594, 63233, 14257, 2297, 1840, 11320, 1532, 7952, 77628, 73181, 13373, 35714, 10298, 12561, 13337, 4329, 17394, 84198, 55617, 94538, 320, 9136, 7094, 92691, 720, 12, 88515, 68506, 19916, 19916, 1840, 15458, 19190, 11, 12561, 19479, 16494, 32062, 35723, 18154, 720, 1830, 72805, 1532, 220, 2137, 1237, 33006, 7094, 8, 100147, 13373, 10693, 3114, 37277,... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:54", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:54:54 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '138', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999249', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '9ms', 'x-request-id': 'req_50554591468589d2916ba9d228360b7d', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb023793fd02df8-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_50554591468589d2916ba9d228360b7d", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-12-01, 06:54:55. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n54 \\n \\n8.5.7.2 \u0422\u043e\u043b\u0449\u0438\u043d\u0430 \u043d\u0430\u0441\u0442\u0438\u043b\u0430 \u0434\u043b\u044f \u044d\u043a\u0441\u043f\u043b\u0443\u0430\u0442\u0438\u0440\u0443\u0435\u043c\u043e\u0439 \u043f\u043b\u043e\u0441\u043a\u043e\u0439 \u043a\u0440\u044b\u0448\u0438 \u0434\u043e\u043b\u0436\u043d\u0430 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \\n\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\u043c, \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u043d\u043d\u044b\u043c \u0432 \u0442\u0430\u0431\u043b\u0438\u0446\u0435 6.2 \u0434\u043b\u044f \u0447\u0435\u0440\u043d\u044b\u0445 \u043f\u043e\u043b\u043e\u0432. \\n8.6 \u041a\u0440\u043e\u0432\u043b\u044f \\n8.6.1 \u041a\u0440\u043e\u0432\u043b\u044f \u0434\u043e\u043b\u0436\u043d\u0430 \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0432\u0430\u0442\u044c \u0437\u0430\u0449\u0438\u0442\u0443 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0439 \u043a... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:54:58 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '2179', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '794595', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '405ms', 'x-request-id': 'req_12fd75ad56f70d38f0a3afa927e2ba63', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb0237d9d1f9185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_12fd75ad56f70d38f0a3afa927e2ba63", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:58", "name": "llm_service", "levelname": "DEBUG", "message": "Maximum similarity: 0.8571795068634684, RELEVANCE_THRESHOLD_PROMPT: 0.8", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:58", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer. RELEVANCE_THRESHOLD_DOCS: 0.7", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:58", "name": "llm_service", "levelname": "DEBUG", "message": "Generating suggestions based on user prompt and LLM response.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"Given the following user prompt and LLM response, determine if additional information is needed to help the user fulfill their request and continue the conversation effectively. If yes, provide up to 3 additional prompts based on key concepts in the response, such as 'learn more about ...', 'how to determine ...', 'how to calculate ...', etc., that the user can use to gather more information. If no additional prompts are needed, respond with 'No suggestions needed'.\\n\\nUser Prompt: \u041a\u0430\u043a\u0430\u044f \u0442\u043e\u043b\u0449\u0438\u043d\u0430 \u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0443 \u0448\u0442\u0443\u043a\u0430\u0442\u0443\u0440\u043a\u0438\\n\\nLLM Response: \u0422\u043e\u043b\u0449\u0438\u043d\u0430 \u0448\u0442\u0443\u043a\u0430\u0442\u0443\u0440\u043a\u0438 \u043c\u043e\u0436\u0435\u0442 \u0432\u0430\u0440\u044c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0435\u0451 \u0442\u0438\u043f\u0430 \u0438 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043e\u0442 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u0439 \u043f\u0440\u043e\u0435\u043a\u0442\u0430. \u041e\u0431\u044b\u0447\u043d\u043e \u0442\u043e\u043b\u0449\u0438\u043d\u0430 \u0448\u0442\u0443\u043a\u0430\u0442\u0443\u0440\u043d\u043e\u0433\u043e \u0441\u043b\u043e\u044f \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442:\\n\\n1. <b>\u0414\u043b\u044f \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u0439 \u043e\u0442\u0434\u0435\u043b\u043a\u0438</b>:\\n   - \u041e\u0431\u044b\u0447\u043d\u0430\u044f \u0448\u0442\u0443\u043a\u0430\u0442\u0443\u0440\u043a\u0430: \u043e\u0442 10 \u0434\u043e 20 \u043c\u043c.\\n   - \u0414\u0435\u043a\u043e\u0440\u0430\u0442\u0438\u0432\u043d\u0430\u044f \u0448\u0442\u0443\u043a\u0430\u0442\u0443\u0440\u043a\u0430: \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0442\u043e\u043d\u044c\u0448\u0435, \u0432 \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u0445 5-10 \u043c\u043c, \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u0438\u0432\u043d\u043e\u0433\u043e \u044d\u0444... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:59", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 03:54:59 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '657', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '799550', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '33ms', 'x-request-id': 'req_03d1cae1ebf9a4476a9aa890b4c20d80', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb023937bff9185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:59", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_03d1cae1ebf9a4476a9aa890b4c20d80", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:59", "name": "llm_service", "levelname": "DEBUG", "message": "Generated suggestions: ['\u0423\u0437\u043d\u0430\u0439\u0442\u0435 \u0431\u043e\u043b\u044c\u0448\u0435 \u043e \u0442\u0438\u043f\u0430\u0445 \u0448\u0442\u0443\u043a\u0430\u0442\u0443\u0440\u043a\u0438 \u0438 \u0438\u0445 \u043f\u0440\u0438\u043c\u0435\u043d\u0435\u043d\u0438\u0438.', '\u041a\u0430\u043a \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u043e\u043f\u0442\u0438\u043c\u0430\u043b\u044c\u043d\u0443\u044e \u0442\u043e\u043b\u0449\u0438\u043d\u0443 \u0448\u0442\u0443\u043a\u0430\u0442\u0443\u0440\u043a\u0438 \u0434\u043b\u044f \u0432\u0430\u0448\u0435\u0433\u043e \u043f\u0440\u043e\u0435\u043a\u0442\u0430?', '\u041a\u0430\u043a\u0438\u0435 \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043d\u043e\u0440\u043c\u044b \u0438 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u044f \u043c\u043e\u0433\u0443\u0442 \u043f\u043e\u0432\u043b\u0438\u044f\u0442\u044c \u043d\u0430 \u0432\u044b\u0431\u043e\u0440 \u0442\u043e\u043b\u0449\u0438\u043d\u044b \u0448\u0442\u0443\u043a\u0430\u0442\u0443\u0440\u043a\u0438?']", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:59", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0422\u043e\u043b\u0449\u0438\u043d\u0430 \u0448\u0442\u0443\u043a\u0430\u0442\u0443\u0440\u043a\u0438 \u043c\u043e\u0436\u0435\u0442 \u0432\u0430\u0440\u044c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0435\u0451 \u0442\u0438\u043f\u0430 \u0438 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043e\u0442 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u0439 \u043f\u0440\u043e\u0435\u043a\u0442\u0430. \u041e\u0431\u044b\u0447\u043d\u043e \u0442\u043e\u043b\u0449\u0438\u043d\u0430 \u0448\u0442\u0443\u043a\u0430\u0442\u0443\u0440\u043d\u043e\u0433\u043e \u0441\u043b\u043e\u044f \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442:\\n\\n1. <b>\u0414\u043b\u044f \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u0439 \u043e\u0442\u0434\u0435\u043b\u043a\u0438</b>:\\n\u2022 \u041e\u0431\u044b\u0447\u043d\u0430\u044f \u0448\u0442\u0443\u043a\u0430\u0442\u0443\u0440\u043a\u0430: \u043e\u0442 10 \u0434\u043e 20 \u043c\u043c.\\n\u2022 \u0414\u0435\u043a\u043e\u0440\u0430\u0442\u0438\u0432\u043d\u0430\u044f \u0448\u0442\u0443\u043a\u0430\u0442\u0443\u0440\u043a\u0430: \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0442\u043e\u043d\u044c\u0448\u0435, \u0432 \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u0445 5-10 \u043c\u043c, \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u0438\u0432\u043d\u043e\u0433\u043e \u044d\u0444\u0444\u0435\u043a\u0442\u0430.\\n\\n2. <b>\u0414\u043b\u044f \u043d\u0430\u0440\u0443\u0436\u043d\u043e\u0439 \u043e\u0442\u0434\u0435\u043b\u043a\u0438</b>:\\n\u2022 \u0422\u043e\u043b\u0449\u0438\u043d\u0430 \u043c\u043e\u0436\u0435\u0442 \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u043e\u0442 15 \u0434\u043e 25 \u043c\u043c, \u0447\u0442\u043e\u0431\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u0443\u044e \u0437\u0430\u0449\u0438\u0442\u0443 \u043e\u0442 \u0432\u043d\u0435\u0448\u043d\u0438\u0445 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439.\\n\\n\u042d\u0442\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043c\u043e\u0433\u0443\u0442 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u043f\u043e\u0432\u0435\u0440\u0445\u043d\u043e\u0441\u0442\u0438, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u0443\u044e \u043d\u0430\u043d\u043e\u0441\u0438\u0442\u0441\u044f \u0448\u0442\u0443\u043a\u0430\u0442\u0443\u0440\u043a\u0430, \u0438 \u043e\u0442 \u0441\u043f\u0435\u0446\u0438\u0444\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u0439 \u0441\u0442\u0440\u043e\u0438\u0442\u0435\u043b\u044c\u043d\u044b\u0445 \u043d\u043e\u0440\u043c \u0438 \u043f\u0440\u043e\u0435\u043a\u0442\u0430.\\n\\n------------------\\nReferences (/references):\\n\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0435 \u0414\u043e\u043c\u0430_\u0421\u041f 31-105-2002 .pdf, pages: 53, 63\\n\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 45.13330.2017.pdf, pages: 85\\n\u0421\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438_\u0421\u041f 16.13330.2017.pdf, pages: 94\\n', {'\u0421\u0442\u0430\u043b\u044c\u043d\u044b\u0435 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438_\u0421\u041f 16.13330.2017.pdf', '\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0435 \u0414\u043e\u043c\u0430_\u0421\u041f 31-105-2002 .pdf', '\u0424\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b_\u0421\u041f 4... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:59", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:59", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='7dd27092-9297-4c85-8596-134843aec8eb'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:54:59", "name": "handlers", "levelname": "INFO", "message": "Prepared suggestion buttons for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:55:00", "name": "handlers", "levelname": "INFO", "message": "Sent response with inline buttons to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 06:55:00", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:48", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:48", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/start'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:48", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: start with args: (<handlers.BotHandlers object at 0x0000022A58739D60>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 12, 1, 7, 17, 47, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=6, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2790, supergroup_chat_created=False, text='/start'), update_id=881193815), <telegram.ext._callbackcontext.CallbackContext object at 0x0000022A5A1BB460>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:48", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: start with result: <coroutine object BotHandlers.start at 0x0000022A5A063940>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:48", "name": "handlers", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:49", "name": "handlers", "levelname": "INFO", "message": "Sent welcome message to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:49", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:51", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:51", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:52", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:52", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/language'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:52", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: language with args: (<handlers.BotHandlers object at 0x0000022A58739D60>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 12, 1, 7, 17, 51, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=9, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2792, supergroup_chat_created=False, text='/language'), update_id=881193816), <telegram.ext._callbackcontext.CallbackContext object at 0x0000022A5A1BB460>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:52", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: language with result: <coroutine object BotHandlers.language at 0x0000022A5A794AE0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:52", "name": "handlers", "levelname": "INFO", "message": "Prompted language selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:52", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:54", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:54", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:54", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: Russian", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:54", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_language:English'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:54", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_language with args: (<handlers.BotHandlers object at 0x0000022A58739D60>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_language:English', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), id='1051116660279046988', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 12, 1, 7, 17, 51, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2793, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_language:English', text='English'),), (InlineKeyboardButton(callback_data='set_language:Russian', text='\u0420\u0443\u0441\u0441\u043a\u0438\u0439'),), (InlineKeyboardButton(callback_data='set_language:Indonesian', text='Indones... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:54", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_language with result: <coroutine object BotHandlers.set_language at 0x0000022A5A1F3CD0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:55", "name": "handlers", "levelname": "DEBUG", "message": "Updated language to 'English' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:55", "name": "handlers", "levelname": "INFO", "message": "User_id=244732168 set language to 'English'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:55", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:58", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:59", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:59", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: English", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:59", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/knowledge_base'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:59", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: knowledge_base with args: (<handlers.BotHandlers object at 0x0000022A58739D60>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 12, 1, 7, 17, 58, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=15, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2795, supergroup_chat_created=False, text='/knowledge_base'), update_id=881193818), <telegram.ext._callbackcontext.CallbackContext object at 0x0000022A5A1BB460>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:59", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: knowledge_base with result: <coroutine object BotHandlers.knowledge_base at 0x0000022A37060DC0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:59", "name": "handlers", "levelname": "INFO", "message": "Prompted knowledge base selection for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:17:59", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:05", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:05", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:05", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: English", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:05", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:05", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: set_knowledge_base with args: (<handlers.BotHandlers object at 0x0000022A58739D60>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), id='1051116660820870119', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 12, 1, 7, 17, 59, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2796, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='set_knowledge:\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b', text='\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b'),), (InlineKeyboardButton(callback_data='set_knowledge:Indonesian Regulations', text='Indonesian Regulations'),)... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:05", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: set_knowledge_base with result: <coroutine object BotHandlers.set_knowledge_base at 0x0000022A5A1B22A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:06", "name": "handlers", "levelname": "DEBUG", "message": "Set folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:06", "name": "handlers", "levelname": "DEBUG", "message": "Found 28 valid files in folder_path='E:\\knowledge_base\\russian_regulations' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:06", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_and_index_documents with args: (<llm_service.LLMService object at 0x0000022A58A5C8F0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:06", "name": "llm_service", "levelname": "DEBUG", "message": "Starting load_and_index_documents for folder_path='E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:06", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: load_vector_store with args: (<llm_service.LLMService object at 0x0000022A58A5C8F0>, 'E:\\\\knowledge_base\\\\russian_regulations'), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:06", "name": "llm_service", "levelname": "INFO", "message": "Loaded vector store from E:\\knowledge_base\\russian_regulations\\vector_store", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:06", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_vector_store with result: True", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:06", "name": "llm_service", "levelname": "INFO", "message": "Vector store loaded from existing files in 'E:\\knowledge_base\\russian_regulations'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:06", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: load_and_index_documents with result: (True, 'Vector store loaded from existing files.')", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:07", "name": "handlers", "levelname": "INFO", "message": "Knowledge base '\u0420\u043e\u0441\u0441\u0438\u0439\u0441\u043a\u0438\u0435 \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u044b' set successfully for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:07", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:11", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:11", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:11", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: English", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:11", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/status'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:11", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: status with args: (<handlers.BotHandlers object at 0x0000022A58739D60>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 12, 1, 7, 18, 10, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=7, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2798, supergroup_chat_created=False, text='/status'), update_id=881193820), <telegram.ext._callbackcontext.CallbackContext object at 0x0000022AA58DAA50>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:11", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: status with result: <coroutine object BotHandlers.status at 0x0000022A5A06AB90>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:15", "name": "llm_service", "levelname": "INFO", "message": "Empty content on page 7 of document '\u0418\u043d\u0436\u0435\u043d\u0435\u0440\u043d\u043e \u0433\u0435\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0437\u044b\u0441\u043a\u0430\u043d\u0438\u044f_\u0421\u041f 446.1325800.2019 .pdf'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:17", "name": "llm_service", "levelname": "INFO", "message": "Empty content on page 86 of document '\u041d\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0438 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f_\u0421\u041f 20.13330.2016.pdf'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:17", "name": "llm_service", "levelname": "INFO", "message": "Empty content on page 1 of document '\u041d\u0435\u0441\u0443\u0449\u0438\u0435_\u0438_\u043e\u0433\u0440\u0430\u0436\u0434\u0430\u044e\u0449\u0438\u0435_\u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438_\u0421\u041f_70_13330_2012.pdf'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:21", "name": "handlers", "levelname": "INFO", "message": "Provided status to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:21", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:55", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:55", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:55", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: English", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:55", "name": "decorators", "levelname": "INFO", "message": "Event 'ai_conversation' triggered by user_id=244732168, message='\u041a\u0430\u043a\u0430\u044f \u0433\u043b\u0443\u0431\u0438\u043d\u0430 \u0437\u0430\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430 \u0432 \u041c\u043e\u0441\u043a\u0432\u0435 \u0434\u043b\u044f \u0447\u0430\u0441\u0442\u043d\u043e\u0433\u043e \u0434\u043e\u043c\u0430'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:55", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_message with args: (<handlers.BotHandlers object at 0x0000022A58739D60>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 12, 1, 7, 18, 54, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2800, supergroup_chat_created=False, text='\u041a\u0430\u043a\u0430\u044f \u0433\u043b\u0443\u0431\u0438\u043d\u0430 \u0437\u0430\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430 \u0432 \u041c\u043e\u0441\u043a\u0432\u0435 \u0434\u043b\u044f \u0447\u0430\u0441\u0442\u043d\u043e\u0433\u043e \u0434\u043e\u043c\u0430'), update_id=881193821), <telegram.ext._callbackcontext.CallbackContext object at 0x0000022A5A1BB540>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:55", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_message with result: <coroutine object BotHandlers.handle_message at 0x0000022A5A1F7100>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:55", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='c81accc3-60e9-4951-b45c-2a6a2227147a' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:55", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='c81accc3-60e9-4951-b45c-2a6a2227147a'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:55", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:55", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x0000022A58A5C8F0>, '\u041a\u0430\u043a\u0430\u044f \u0433\u043b\u0443\u0431\u0438\u043d\u0430 \u0437\u0430\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430 \u0432 \u041c\u043e\u0441\u043a\u0432\u0435 \u0434\u043b\u044f \u0447\u0430\u0441\u0442\u043d\u043e\u0433\u043e \u0434\u043e\u043c\u0430'), kwargs: {'chat_history': [HumanMessage(content='\u041a\u0430\u043a\u0430\u044f \u0433\u043b\u0443\u0431\u0438\u043d\u0430 \u0437\u0430\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430 \u0432 \u041c\u043e\u0441\u043a\u0432\u0435 \u0434\u043b\u044f \u0447\u0430\u0441\u0442\u043d\u043e\u0433\u043e \u0434\u043e\u043c\u0430', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u041a\u0430\u043a\u0430\u044f \u0442\u043e\u043b\u0449\u0438\u043d\u0430 \u0430 \u0434\u043e\u043b\u0436\u043d\u0430 \u0431\u044b\u0442\u044c \u0443 \u0448\u0442\u0443\u043a\u0430\u0442\u0443\u0440\u043a\u0438', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0422\u043e\u043b\u0449\u0438\u043d\u0430 \u0448\u0442\u0443\u043a\u0430\u0442\u0443\u0440\u043a\u0438 \u043c\u043e\u0436\u0435\u0442 \u0432\u0430\u0440\u044c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0435\u0451 \u0442\u0438\u043f\u0430 \u0438 \u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043e\u0442 \u0442\u0440\u0435\u0431\u043e\u0432\u0430\u043d\u0438\u0439 \u043f\u0440\u043e\u0435\u043a\u0442\u0430. \u041e\u0431\u044b\u0447\u043d\u043e \u0442\u043e\u043b\u0449\u0438\u043d\u0430 \u0448\u0442\u0443\u043a\u0430\u0442\u0443\u0440\u043d\u043e\u0433\u043e \u0441\u043b\u043e\u044f \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442:\\n\\n1. <b>\u0414\u043b\u044f \u0432\u043d\u0443\u0442\u0440\u0435\u043d\u043d\u0435\u0439 \u043e\u0442\u0434\u0435\u043b\u043a\u0438</b>:\\n\u2022 \u041e\u0431\u044b\u0447\u043d\u0430\u044f \u0448\u0442\u0443\u043a\u0430\u0442\u0443\u0440\u043a\u0430: \u043e\u0442 10 \u0434\u043e 20 \u043c\u043c.\\n\u2022 \u0414\u0435\u043a\u043e\u0440\u0430\u0442\u0438\u0432\u043d\u0430\u044f \u0448\u0442\u0443\u043a\u0430\u0442\u0443\u0440\u043a\u0430: \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0442\u043e\u043d\u044c\u0448\u0435, \u0432 \u043f\u0440\u0435\u0434\u0435\u043b\u0430\u0445 5-10 \u043c\u043c, \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0434\u0435\u043a\u043e\u0440\u0430\u0442\u0438\u0432\u043d\u043e\u0433\u043e \u044d\u0444\u0444\u0435\u043a\u0442\u0430.\\n\\n2. <b>\u0414\u043b\u044f \u043d\u0430\u0440\u0443\u0436\u043d\u043e\u0439 \u043e\u0442\u0434\u0435\u043b\u043a\u0438</b>:\\n\u2022 \u0422\u043e\u043b\u0449\u0438\u043d\u0430 \u043c\u043e\u0436\u0435\u0442 \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c \u043e\u0442 15 \u0434\u043e 25 \u043c\u043c, \u0447\u0442\u043e\u0431\u044b \u043e\u0431\u0435\u0441\u043f\u0435\u0447\u0438\u0442\u044c \u0434\u043e\u0441\u0442\u0430\u0442\u043e\u0447\u043d\u0443\u044e \u0437\u0430\u0449\u0438\u0442\u0443 \u043e\u0442 \u0432\u043d\u0435\u0448\u043d\u0438\u0445 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0439.\\n\\n\u042d\u0442\u0438 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043c\u043e\u0433\u0443\u0442 \u043a\u043e\u0440\u0440\u0435\u043a\u0442\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u044f \u043f\u043e... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A5A31F740>, 'json_data': {'input': [[27435, 16248, 36497, 25756, 3114, 64569, 69775, 11122, 16331, 21956, 18999, 18034, 35297, 7094, 24697, 88831, 5927, 45458, 23630, 4898, 5591, 1532, 20440, 17756, 84350, 39900, 7952, 12507, 1506]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:55", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 07:18:56 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '59', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999971', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_90fde41fec4fbfca31f06eca2635cb40', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=4VAMOETv9EwSPBbeeZpui6CLXptRpyKs9pqAoIqabz4-1733037536-1.0.1.1-b9t722XZruP7_1AaPfLY0VKayYuXVhwj3yOvYky1xACcvhXqzi7xefoZSduNWGBIW9y9IjDv62QBe... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_90fde41fec4fbfca31f06eca2635cb40", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:57", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A5A2A8400>, 'json_data': {'input': [[27435, 16248, 36497, 25756, 3114, 64569, 69775, 11122, 16331, 21956, 18999, 18034, 35297, 7094, 24697, 88831, 5927, 45458, 23630, 4898, 5591, 1532, 20440, 17756, 84350, 39900, 7952, 12507, 1506]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:57", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 07:18:57 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '168', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999971', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_13d9780432dff1c01401b60d2f0ad31a', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb14e5c88f49185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_13d9780432dff1c01401b60d2f0ad31a", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A5A2A8400>, 'json_data': {'input': [[22, 33006, 20, 13, 17, 23227, 9706, 15752, 13337, 6856, 13433, 5173, 39865, 14476, 23680, 17165, 720, 20, 13, 17, 13, 16, 28599, 5173, 39865, 14476, 23680, 17165, 40842, 44946, 77911, 36352, 7952, 12507, 1506, 56449, 12648, 62731, 58491, 79686, 5173, 3114, 9706, 9239, 9706, 34613, 35875, 16742, 720, 8164, 38438, 5591, 4655, 7740, 18600, 84350, 56008, 61379, 11, 5927, 52520, 36497, 67969, 23446, 11, 5173, 23446, 7740, 7952, 2233, 33742, 23297, 44065, 20879, 31101, 4655, 11, 21022, 50945, 59138, 11562, 44155, 9239, 13, 720, 20, 13, 17, 13, 17, 35889, 1506, 14257, 6148, 84350, 13433, 10693, 11, 44946, 11001, 114, 5372, 44786, 11562, 3865, 28086, 4929, 4329, 64880, 320, 5591, 4655, 20346, 10124, 17165, 11, 12561, 23630, 15298, 1840, 7740, 12561, 25390, 61813, 1532, 67969, 6148, 33742, 17165, 720, 8164, 2156, 217... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:58", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:59", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 07:18:58 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '75', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998519', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '17ms', 'x-request-id': 'req_05dd2d9aa252d035cc6b23ba6d0a497c', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb14e633c889185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:59", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_05dd2d9aa252d035cc6b23ba6d0a497c", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:59", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A5A2A8400>, 'json_data': {'input': [[74598, 96256, 1506, 220, 2287, 23934, 220, 14815, 33006, 806, 13, 2983, 23227, 31203, 86291, 36750, 84198, 18034, 35297, 7094, 24697, 19190, 6856, 7740, 40842, 9136, 10298, 44786, 34943, 9239, 56999, 62491, 19175, 89159, 1482, 78085, 2233, 7975, 59921, 18482, 720, 15752, 3114, 64569, 19479, 3865, 7740, 10693, 11122, 16331, 21956, 18999, 11, 100147, 4655, 7740, 78876, 8164, 7975, 21956, 17618, 5927, 5173, 3114, 7486, 1532, 11, 14257, 77911, 20812, 1482, 20879, 49284, 6735, 44938, 7740, 6850, 1840, 12426, 11, 99396, 17618, 720, 15752, 48262, 2233, 1482, 41873, 96485, 57186, 7740, 7820, 50223, 52744, 12561, 16494, 5372, 5372, 44786, 96573, 7753, 1840, 16331, 6856, 7740, 38098, 79370, 15458, 12415, 13, 35889, 1506, 14257, 77911, 20812, 1482, 320, 8164, 9706, 15752, 13337, 6856, 36352, 8, 720, 23630, 47805, 39280... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:18:59", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:19:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 07:18:59 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '64', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998987', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '12ms', 'x-request-id': 'req_539fad888082004c326bef7ba19d4a9f', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb14e68efcb9185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:19:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_539fad888082004c326bef7ba19d4a9f", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:19:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A5A2A8400>, 'json_data': {'input': [[19871, 17279, 220, 2031, 13, 9423, 966, 13, 679, 17, 720, 1041, 33006, 720, 868, 220, 35448, 1830, 4898, 3114, 17766, 17618, 20879, 28114, 8164, 5372, 7094, 1840, 36352, 14009, 2233, 13999, 7058, 55523, 5927, 2156, 38521, 2233, 5372, 2156, 21708, 96034, 7753, 10693, 68742, 18868, 5372, 720, 20812, 7975, 1506, 55617, 1506, 10693, 87008, 59195, 19916, 44613, 20879, 13999, 2297, 56008, 13999, 720, 15752, 9239, 41873, 97341, 39127, 39988, 5173, 3114, 23630, 4898, 85864, 320, 8164, 7975, 1506, 37405, 7058, 4329, 6578, 13433, 8, 720, 966, 720, 7, 38214, 20976, 19871, 35095, 220, 14261, 1774, 8, 33006, 35095, 1482, 58317, 1532, 720, 17279, 18600, 7740, 11562, 22918, 17756, 21022, 6850, 7740, 22918, 220, 1389, 220, 61565, 3114, 64569, 69775, 46339, 78746, 39280, 46088, 6856, 13373, 19175, 2297, 43293, 50306, 38098, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:19:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:19:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 07:19:00 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '101', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999105', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '10ms', 'x-request-id': 'req_57c859b8815adfb93d346af086eee9fc', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb14e6f6bfa9185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:19:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_57c859b8815adfb93d346af086eee9fc", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:19:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A5A2A8400>, 'json_data': {'input': [[19871, 17279, 220, 20385, 13, 9413, 18216, 15, 13, 679, 24, 33006, 9748, 33006, 2156, 67124, 23630, 44075, 20812, 5372, 13999, 23934, 12, 8164, 9706, 40842, 1482, 12426, 5591, 4655, 18034, 35297, 7094, 24697, 88831, 7740, 5524, 12561, 13337, 28089, 29256, 7975, 21956, 39988, 18868, 5372, 17165, 720, 12426, 56515, 19916, 1506, 13, 720, 31274, 2297, 41036, 13404, 6856, 27717, 7740, 46339, 2233, 14082, 6856, 27717, 25756, 20346, 2156, 1830, 6856, 6850, 1840, 59138, 40842, 1482, 12426, 5591, 4655, 18034, 35297, 7094, 24697, 88831, 62315, 9706, 90297, 720, 5591, 69471, 5591, 38657, 69775, 10693, 11, 38153, 51736, 93129, 73181, 14391, 56515, 18264, 34943, 7952, 14525, 55617, 56515, 19916, 1506, 59195, 10124, 1482, 5927, 10124, 11320, 9136, 1840, 6850, 47295, 13, 720, 17279, 31203, 84699, 12426, 16742, 25756, 3114,... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:19:00", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:19:01", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 07:19:01 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '130', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998960', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '12ms', 'x-request-id': 'req_11832a209165e129a6eb276352e49368', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb14e719d1e9185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:19:01", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_11832a209165e129a6eb276352e49368", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:19:01", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': 'You are a project assistant from the consultant side on design and construction projects. If you don\\'t know the answer, say that you don\\'t know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-12-01, 10:19:01. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n7 \\n \\n5.2 \u041f\u043e\u0434\u0433\u043e\u0442\u043e\u0432\u043a\u0430 \u043f\u043b\u043e\u0449\u0430\u0434\u043a\u0438 \\n5.2.1 \u0421 \u043f\u043b\u043e\u0449\u0430\u0434\u043a\u0438 \u043f\u043e\u0434 \u0437\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0443 \u0434\u043e\u043c\u0430 \u0434\u043e\u043b\u0436\u043d\u044b \u0431\u044b\u0442\u044c \u0443\u0434\u0430\u043b\u0435\u043d\u044b \u043f\u043b\u043e\u0434\u043e\u0440\u043e\u0434\u043d\u044b\u0439 \u0441\u043b\u043e\u0439 \\n\u043f\u043e\u0447\u0432\u044b \u0438 \u0440\u0430\u0441\u0442\u0438\u0442\u0435\u043b\u044c\u043d\u043e\u0441\u0442\u044c, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u043a\u043e\u0440\u043d\u0438, \u043f\u043d\u0438 \u0438 \u0434\u0440\u0435\u0432\u0435\u0441\u043d\u044b\u0435 \u043e\u0442\u0445\u043e\u0434\u044b, \u0430 \u0442\u0430\u043a\u0436\u0435 \u043c\u0443\u0441\u043e\u0440. \\n5.2.2 \u041d\u0430 \u0443\u0447\u0430\u0441\u0442\u043a\u0430\u0445, \u0437\u0430\u0440\u0430\u0436\u0435\u043d... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:19:01", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:19:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 07:19:06 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '3885', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '793515', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '486ms', 'x-request-id': 'req_564cccba60335f76d87fb0ce1efa3603', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'set-cookie': '__cf_bm=X449SQQvXgfdm2Mv2ALbhrGcXG6X9hkzI5stp5hSIDk-1733037546-1.0.1.1-TBr5hTWiE7UHt5Vdv_ZGVQTLj2.xdjC8vcf8p6Wy6wOxylWxzO12W6IJ0ZOQED6PisID1jQX7W.YQVcdx6y.CQ; path=/; expires=Sun, 01-Dec-24 07:49:06 GMT; domain=.api.o... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:19:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_564cccba60335f76d87fb0ce1efa3603", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:19:06", "name": "llm_service", "levelname": "DEBUG", "message": "Maximum similarity: 0.8689044347567482, RELEVANCE_THRESHOLD_PROMPT: 0.8", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:19:06", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer. RELEVANCE_THRESHOLD_DOCS: 0.7", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:19:06", "name": "llm_service", "levelname": "DEBUG", "message": "Generating suggestions based on user prompt and LLM response.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:19:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"Given the following user prompt and LLM response, determine if additional information is needed to help the user fulfill their request and continue the conversation effectively. If yes, provide up to 3 additional prompts based on key concepts in the response, such as 'learn more about ...', 'how to determine ...', 'how to calculate ...', etc., that the user can use to gather more information. If no additional prompts are needed, respond with 'No suggestions needed'.\\n\\nUser Prompt: \u041a\u0430\u043a\u0430\u044f \u0433\u043b\u0443\u0431\u0438\u043d\u0430 \u0437\u0430\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430 \u0432 \u041c\u043e\u0441\u043a\u0432\u0435 \u0434\u043b\u044f \u0447\u0430\u0441\u0442\u043d\u043e\u0433\u043e \u0434\u043e\u043c\u0430\\n\\nLLM Response: \u0413\u043b\u0443\u0431\u0438\u043d\u0430 \u0437\u0430\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430 \u0434\u043b\u044f \u0447\u0430\u0441\u0442\u043d\u043e\u0433\u043e \u0434\u043e\u043c\u0430 \u0432 \u041c\u043e\u0441\u043a\u0432\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0444\u0430\u043a\u0442\u043e\u0440\u043e\u0432, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0442\u0438\u043f \u0433\u0440\u0443\u043d\u0442\u0430, \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434, \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u0438 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u0437\u0434\u0430\u043d\u0438\u044f. \u0412 \u043e\u0431\u0449\u0435\u043c, \u0434\u043b\u044f \u041c\u043e\u0441\u043a\u0432\u044b \u0438 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0445 \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0437\u043e\u043d \u0433\u043b\u0443\u0431\u0438\u043d\u0430 \u0437\u0430\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430 \u043e\u0431\u044b\u0447\u043d\u043e \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442:\\n\\n1. **\u041c\u0435\u043b\u043a\u043e\u0437\u0430\u0433\u043b\u0443\u0431\u043b\u0435\u043d\u043d\u044b\u0435... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:19:06", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:19:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 07:19:07 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '810', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '799433', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '42ms', 'x-request-id': 'req_57b34d653f479ce43c8d9d6a1c681048', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb14e975fc72dee-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:19:07", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_57b34d653f479ce43c8d9d6a1c681048", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:19:07", "name": "llm_service", "levelname": "DEBUG", "message": "Generated suggestions: ['\u0423\u0437\u043d\u0430\u0439\u0442\u0435 \u0431\u043e\u043b\u044c\u0448\u0435 \u043e \u0442\u043e\u043c, \u043a\u0430\u043a \u043f\u0440\u043e\u0432\u043e\u0434\u044f\u0442\u0441\u044f \u0438\u043d\u0436\u0435\u043d\u0435\u0440\u043d\u043e-\u0433\u0435\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0437\u044b\u0441\u043a\u0430\u043d\u0438\u044f \u0434\u043b\u044f \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u0438\u044f \u0442\u0438\u043f\u0430 \u0433\u0440\u0443\u043d\u0442\u0430.', '\u041a\u0430\u043a \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u043d\u0430 \u0432\u0430\u0448\u0435\u043c \u0443\u0447\u0430\u0441\u0442\u043a\u0435?', '\u041a\u0430\u043a \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u0432 \u041c\u043e\u0441\u043a\u0432\u0435 \u0432\u043b\u0438\u044f\u044e\u0442 \u043d\u0430 \u0432\u044b\u0431\u043e\u0440 \u0433\u043b\u0443\u0431\u0438\u043d\u044b \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430?']", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:19:07", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0413\u043b\u0443\u0431\u0438\u043d\u0430 \u0437\u0430\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430 \u0434\u043b\u044f \u0447\u0430\u0441\u0442\u043d\u043e\u0433\u043e \u0434\u043e\u043c\u0430 \u0432 \u041c\u043e\u0441\u043a\u0432\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0444\u0430\u043a\u0442\u043e\u0440\u043e\u0432, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0442\u0438\u043f \u0433\u0440\u0443\u043d\u0442\u0430, \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434, \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u0438 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u0437\u0434\u0430\u043d\u0438\u044f. \u0412 \u043e\u0431\u0449\u0435\u043c, \u0434\u043b\u044f \u041c\u043e\u0441\u043a\u0432\u044b \u0438 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0445 \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0437\u043e\u043d \u0433\u043b\u0443\u0431\u0438\u043d\u0430 \u0437\u0430\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430 \u043e\u0431\u044b\u0447\u043d\u043e \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442:\\n\\n1. <b>\u041c\u0435\u043b\u043a\u043e\u0437\u0430\u0433\u043b\u0443\u0431\u043b\u0435\u043d\u043d\u044b\u0435 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b</b>: \u043e\u043a\u043e\u043b\u043e 0,5-1,0 \u043c\u0435\u0442\u0440\u0430. \u0422\u0430\u043a\u0438\u0435 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u044e\u0442\u0441\u044f \u0434\u043b\u044f \u043b\u0435\u0433\u043a\u0438\u0445 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0439 \u0438 \u043f\u0440\u0438 \u0441\u0442\u0430\u0431\u0438\u043b\u044c\u043d\u044b\u0445 \u0433\u0440\u0443\u043d\u0442\u0430\u0445.\\n\\n2. <b>\u041b\u0435\u043d\u0442\u043e\u0447\u043d\u044b\u0435 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b</b>: \u0433\u043b\u0443\u0431\u0438\u043d\u0430 \u043e\u0431\u044b\u0447\u043d\u043e \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0442 1,5 \u0434\u043e 2,0 \u043c\u0435\u0442\u0440\u043e\u0432. \u042d\u0442\u043e \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u043d\u044b\u0439 \u0432\u0430\u0440\u0438\u0430\u043d\u0442 \u0434\u043b\u044f \u0447\u0430\u0441\u0442\u043d\u044b\u0445 \u0434\u043e\u043c\u043e\u0432 \u0441 \u043f\u043e\u0434\u0432\u0430\u043b\u043e\u043c \u0438\u043b\u0438 \u0431\u0435\u0437 \u043d\u0435\u0433\u043e.\\n\\n3. <b>\u0421\u0432\u0430\u0439\u043d\u044b\u0435 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b</b>: \u0433\u043b\u0443\u0431\u0438\u043d\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u0432 \u0437\u0430\u0432\u0438\u0441\u0438\u043c\u043e\u0441\u0442\u0438 \u043e\u0442 \u043d\u0435\u0441\u0443\u0449\u0435\u0439 \u0441\u043f\u043e\u0441\u043e\u0431\u043d\u043e\u0441\u0442\u0438 \u0441\u0432\u0430\u0438 \u0438 \u043c\u043e\u0436\u0435\u0442 \u0437\u043d\u0430\u0447\u0438\u0442\u0435\u043b\u044c\u043d\u043e \u0432\u0430\u0440\u044c\u0438\u0440\u043e\u0432\u0430\u0442\u044c\u0441\u044f, \u0447\u0430\u0441\u0442\u043e \u043f\u0440\u0435\u0432\u044b\u0448\u0430\u044f 2 \u043c\u0435\u0442\u0440\u0430.\\n\\n\u0422\u043e\u0447\u043d\u044b\u0439 \u0432\u044b\u0431\u043e\u0440 \u0433\u043b\u0443\u0431\u0438\u043d\u044b \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442\u0441\u044f \u0438\u043d\u0436\u0435\u043d\u0435\u0440\u043d\u043e-\u0433\u0435\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u043c\u0438 \u0438\u0437\u044b\u0441\u043a\u0430\u043d\u0438\u044f\u043c\u0438 \u0438 \u0440\u0430\u0441\u0447\u0435\u0442\u0430\u043c\u0438, \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u044b\u043c\u0438 \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u043c\u0438 \u0438\u043d\u0436\u0435\u043d\u0435\u0440\u0430\u043c\u0438.\\n\\n------------------\\nReferences (/references):\\n\u041a\u0430\u0440\u043a\u0430\u0441\u043d\u044b\u0435 \u0414\u043e\u043c\u0430_\u0421... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:19:07", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:19:07", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='c81accc3-60e9-4951-b45c-2a6a2227147a'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:19:07", "name": "handlers", "levelname": "INFO", "message": "Prepared suggestion buttons for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:19:08", "name": "handlers", "levelname": "INFO", "message": "Sent response with inline buttons to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:19:08", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=ai_conversation", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:08", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:08", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:08", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: English", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:08", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='suggestion:suggestion_1'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:08", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: handle_inline_buttons with args: (<handlers.BotHandlers object at 0x0000022A58739D60>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='suggestion:suggestion_1', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), id='1051116659874009869', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 12, 1, 7, 19, 7, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=28, offset=294, type=<MessageEntityType.BOLD>), MessageEntity(length=20, offset=427, type=<MessageEntityType.BOLD>), MessageEntity(length=18, offset=573, type=<MessageEntityType.BOLD>), MessageEntity(length=11, offset=886, type=<MessageEntityType.BOT_COMMAND>)), from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=Fals... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:08", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: handle_inline_buttons with result: <coroutine object BotHandlers.handle_inline_buttons at 0x0000022A5A1F1210>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:09", "name": "handlers", "levelname": "INFO", "message": "User_id=244732168 clicked on suggestion '\u041a\u0430\u043a \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u043d\u0430 \u0432\u0430\u0448\u0435\u043c \u0443\u0447\u0430\u0441\u0442\u043a\u0435?'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:09", "name": "handlers", "levelname": "DEBUG", "message": "Generated conversation_id='9a40f477-986c-41b1-9c30-20f951646af0' for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:09", "name": "handlers", "levelname": "DEBUG", "message": "Saved user message for conversation_id='9a40f477-986c-41b1-9c30-20f951646af0'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:09", "name": "handlers", "levelname": "DEBUG", "message": "Retrieved chat history for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:09", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: generate_response with args: (<llm_service.LLMService object at 0x0000022A58A5C8F0>, '\u041a\u0430\u043a \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u043d\u0430 \u0432\u0430\u0448\u0435\u043c \u0443\u0447\u0430\u0441\u0442\u043a\u0435?'), kwargs: {'chat_history': [HumanMessage(content='\u041a\u0430\u043a \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u043d\u0430 \u0432\u0430\u0448\u0435\u043c \u0443\u0447\u0430\u0441\u0442\u043a\u0435?', additional_kwargs={}, response_metadata={}), HumanMessage(content='\u041a\u0430\u043a\u0430\u044f \u0433\u043b\u0443\u0431\u0438\u043d\u0430 \u0437\u0430\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430 \u0432 \u041c\u043e\u0441\u043a\u0432\u0435 \u0434\u043b\u044f \u0447\u0430\u0441\u0442\u043d\u043e\u0433\u043e \u0434\u043e\u043c\u0430', additional_kwargs={}, response_metadata={}), AIMessage(content='\u0413\u043b\u0443\u0431\u0438\u043d\u0430 \u0437\u0430\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430 \u0434\u043b\u044f \u0447\u0430\u0441\u0442\u043d\u043e\u0433\u043e \u0434\u043e\u043c\u0430 \u0432 \u041c\u043e\u0441\u043a\u0432\u0435 \u0437\u0430\u0432\u0438\u0441\u0438\u0442 \u043e\u0442 \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u0438\u0445 \u0444\u0430\u043a\u0442\u043e\u0440\u043e\u0432, \u0432\u043a\u043b\u044e\u0447\u0430\u044f \u0442\u0438\u043f \u0433\u0440\u0443\u043d\u0442\u0430, \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434, \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0443\u0441\u043b\u043e\u0432\u0438\u044f \u0438 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u0438\u0432\u043d\u044b\u0435 \u043e\u0441\u043e\u0431\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u0437\u0434\u0430\u043d\u0438\u044f. \u0412 \u043e\u0431\u0449\u0435\u043c, \u0434\u043b\u044f \u041c\u043e\u0441\u043a\u0432\u044b \u0438 \u0430\u043d\u0430\u043b\u043e\u0433\u0438\u0447\u043d\u044b\u0445 \u043a\u043b\u0438\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0437\u043e\u043d \u0433\u043b\u0443\u0431\u0438\u043d\u0430 \u0437\u0430\u043b\u043e\u0436\u0435\u043d\u0438\u044f \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u0430 \u043e\u0431\u044b\u0447\u043d\u043e \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442:\\n\\n1. <b>\u041c\u0435\u043b\u043a\u043e\u0437\u0430\u0433\u043b\u0443\u0431\u043b\u0435\u043d\u043d\u044b\u0435 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b</b>: \u043e\u043a\u043e\u043b\u043e 0,5-1,0 \u043c\u0435\u0442\u0440\u0430. \u0422\u0430\u043a\u0438\u0435 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b \u043f\u0440\u0438\u043c\u0435\u043d\u044f\u044e\u0442\u0441\u044f \u0434\u043b\u044f \u043b\u0435\u0433\u043a\u0438\u0445 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0439 \u0438 \u043f\u0440\u0438 \u0441\u0442\u0430\u0431\u0438\u043b\u044c\u043d\u044b\u0445 \u0433\u0440\u0443\u043d\u0442\u0430\u0445.\\n\\n2. <b>\u041b\u0435\u043d\u0442\u043e\u0447\u043d\u044b\u0435 \u0444\u0443\u043d\u0434\u0430\u043c\u0435\u043d\u0442\u044b</b>: \u0433\u043b\u0443\u0431\u0438\u043d\u0430 \u043e\u0431\u044b\u0447\u043d\u043e \u0441\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043e\u0442 1,5 \u0434\u043e 2,0 \u043c\u0435\u0442\u0440\u043e\u0432. \u042d\u0442\u043e \u0440\u0430\u0441\u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0435\u043d\u043d\u044b\u0439 \u0432... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:09", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022A5A31F740>, 'json_data': {'input': [[27435, 16248, 46339, 92582, 18264, 14257, 24803, 52429, 25756, 20346, 2156, 1830, 6856, 63233, 5927, 9706, 13373, 98117, 10298, 14257, 6148, 84350, 53671, 30]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:09", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:10", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 07:20:10 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '45', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999975', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_610876de0ebb0acff6e308b4c5759adb', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb150218c109185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:10", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_610876de0ebb0acff6e308b4c5759adb", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:10", "name": "llm_service", "levelname": "DEBUG", "message": "Retrieved documents with similarity scores.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:10", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022AA58B4400>, 'json_data': {'input': [[27435, 16248, 46339, 92582, 18264, 14257, 24803, 52429, 25756, 20346, 2156, 1830, 6856, 63233, 5927, 9706, 13373, 98117, 10298, 14257, 6148, 84350, 53671, 30]], 'model': 'text-embedding-ada-002', 'encoding_format': 'base64'}}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:10", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:11", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 07:20:11 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '133', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999975', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '0s', 'x-request-id': 'req_f6664f0dabd49978b9aef0e2e55c0f4f', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb1502918279185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:11", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_f6664f0dabd49978b9aef0e2e55c0f4f", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:11", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022AA58B4400>, 'json_data': {'input': [[19871, 17279, 220, 17824, 13, 9413, 18216, 15, 13, 2366, 16, 33006, 9263, 720, 17279, 31203, 82941, 17618, 1301, 244, 720, 36551, 1506, 14476, 1840, 14476, 5372, 61379, 25756, 20346, 2156, 1830, 6856, 63233, 5927, 9706, 720, 27435, 50223, 35034, 5372, 44858, 8379, 10589, 5372, 13433, 44946, 14476, 1840, 14476, 5372, 68742, 25756, 20346, 2156, 1830, 6856, 63233, 5927, 9706, 52770, 22885, 12, 11320, 10124, 1482, 18600, 25698, 1840, 74828, 92457, 14257, 64322, 1506, 720, 10693, 1506, 11001, 118, 58060, 35111, 38822, 7740, 45916, 16742, 20812, 38098, 4898, 2233, 8341, 44786, 72590, 2233, 64084, 2156, 9542, 12394, 21708, 72060, 7975, 40251, 50819, 18154, 5524, 40211, 6578, 1532, 14391, 16331, 3114, 6856, 11, 720, 29471, 9542, 35667, 1506, 90457, 21708, 5524, 6856, 15088, 49907, 61379, 18600, 4329, 40590, 67445, 2... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:11", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:12", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 07:20:12 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '69', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999435', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '6ms', 'x-request-id': 'req_66bb10578d7189c34e399f3214e3343c', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb1502ffbd99185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:12", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_66bb10578d7189c34e399f3214e3343c", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:12", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022AA58B4400>, 'json_data': {'input': [[74598, 96256, 1506, 220, 10866, 23934, 220, 14815, 33006, 1840, 25756, 3114, 64569, 19479, 44786, 11562, 17721, 15088, 720, 2233, 77384, 24697, 46339, 4655, 1830, 44786, 54204, 720, 15752, 8, 5173, 3114, 13337, 61379, 7740, 720, 5591, 3114, 38657, 61379, 25756, 20346, 2156, 44613, 5927, 720, 8164, 92582, 1506, 10693, 11122, 1482, 12648, 720, 49907, 3114, 13337, 2156, 18999, 720, 25079, 48181, 12648, 62731, 19175, 6850, 1840, 59138, 720, 8164, 2233, 1482, 30656, 44786, 40650, 62491, 720, 35095, 1482, 58317, 1532, 11, 53419, 19479, 5173, 41056, 1830, 13373, 220, 2636, 11562, 17, 720, 8164, 39865, 14476, 23680, 1840, 5524, 46339, 92582, 9882, 10298, 19175, 720, 2233, 50436, 1532, 17756, 10298, 90211, 32985, 220, 16, 482, 220, 17, 11562, 18154, 720, 15752, 3114, 64569, 19479, 1532, 5927, 57925, 12394, 1506, 1069... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:12", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:13", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 07:20:13 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '141', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999167', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '9ms', 'x-request-id': 'req_6a4404b0daa89c87a68ed805d6a87b15', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb150358ee99185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:13", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_6a4404b0daa89c87a68ed805d6a87b15", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:13", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022AA58B4400>, 'json_data': {'input': [[74598, 96256, 1506, 220, 1958, 23934, 220, 14815, 33006, 720, 12, 20440, 25756, 28086, 44938, 44786, 25756, 20346, 2156, 1830, 6856, 87172, 497, 720, 15, 11, 20, 26, 720, 12, 5173, 23297, 6148, 7486, 1482, 12, 15752, 28086, 44938, 44786, 87172, 4095, 720, 15, 11, 22, 26, 720, 12, 5173, 23297, 90877, 7820, 20346, 8164, 44786, 7740, 5524, 44075, 2156, 21708, 7820, 20346, 8164, 68742, 82472, 4095, 497, 720, 16, 11, 15, 26, 720, 12, 14391, 7975, 50506, 11562, 12394, 17165, 10693, 5173, 23297, 90877, 87172, 29249, 720, 16, 11, 20, 13, 33006, 41682, 52674, 28241, 1532, 88612, 11562, 14837, 38521, 62731, 96034, 4655, 12426, 79686, 18154, 97991, 6856, 40231, 6578, 92457, 29256, 18437, 39900, 41291, 41873, 49899, 94071, 54204, 13, 720, 17279, 31203, 14257, 77911, 20812, 1532, 13373, 57319, 8164, 21708, 13373, 11047, ... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:13", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:15", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 07:20:14 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '182', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4998998', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '12ms', 'x-request-id': 'req_e7c2b63299655b96f987e03c724c13f1', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb1503c6aba9185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:15", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_e7c2b63299655b96f987e03c724c13f1", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:15", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/embeddings', 'files': None, 'post_parser': <function Embeddings.create.<locals>.parser at 0x0000022AA58B4400>, 'json_data': {'input': [[19871, 17279, 220, 20385, 13, 9413, 18216, 15, 13, 679, 24, 33006, 1419, 33006, 10124, 4655, 29893, 21923, 9239, 37013, 6856, 7486, 4655, 18034, 1840, 53628, 38808, 1840, 13373, 92878, 6850, 38722, 37906, 7094, 62491, 44946, 14257, 68462, 3114, 9882, 10298, 14257, 24803, 40251, 13, 720, 20, 13, 24, 13, 20, 43896, 9136, 29471, 17618, 18600, 50436, 16494, 1506, 71121, 18999, 14257, 24803, 2156, 21708, 11, 11047, 10298, 8164, 7753, 8131, 3865, 39103, 7740, 92175, 18226, 1506, 720, 8164, 9706, 9136, 10298, 44786, 5927, 9706, 62315, 9706, 90297, 5927, 25756, 48262, 2233, 14837, 1532, 7975, 14837, 81301, 17165, 10693, 69471, 5591, 38657, 69775, 10693, 11, 51548, 9706, 87994, 10693, 11, 13373, 720, 4898, 19619, 67589, 28241, 10693, 7740, 6735, 38438, 88596, 10693, 13, 49520, 50436, 16494, 44065, 6850, 38722, 37906,... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:15", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/embeddings", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:16", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/embeddings \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 07:20:15 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-allow-origin': '*', 'access-control-expose-headers': 'X-Request-ID', 'openai-model': 'text-embedding-ada-002', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '97', 'openai-version': '2020-10-01', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '5000000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '4999100', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '10ms', 'x-request-id': 'req_d8edf5d4d205c1e41325096c07bb2c63', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb150433f8e9185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:16", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_d8edf5d4d205c1e41325096c07bb2c63", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:16", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"You are a project assistant from the consultant side on design and construction projects. If you don't know the answer, say that you don't know. Do not include references to the source documents in your answer. If you need to use the current date, today is 2024-12-01, 10:20:16. If the prompt includes a request to provide a link to documents in context, respond with: Please follow the link below: Format your response using Telegram-compatible HTML. Use only supported tags (<b>, <strong>, <i>, <em>, <a>, <u>, <s>, <code>, <pre>, <tg-spoiler>) and use \\\\n for line breaks instead of <br>. Use the following pieces of retrieved context to answer the question.\\n\\n\u0421\u041f 502.1325800.2021 \\n \\n131 \\n\u041f\u0440\u0438\u043b\u043e\u0436\u0435\u043d\u0438\u0435 \u0416 \\n\u0417\u0430\u0449\u0438\u0449\u0435\u043d\u043d\u043e\u0441\u0442\u044c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \\n\u041a\u0430\u0447\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u0430\u044f \u043e\u0446\u0435\u043d\u043a\u0430 \u0437\u0430\u0449\u0438\u0449\u0435\u043d\u043d\u043e\u0441\u0442\u0438 \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u043a\u0430\u043a\u043e\u0433\u043e-\u043b\u0438\u0431\u043e \u0440\u0435\u0433\u0438\u043e\u043d\u0430 \u0431\u0435\u0437 \u0443\u0447\u0435\u0442\u0430 \\n\u0445\u0430\u0440\u0430\u043a\u0442\u0435\u0440\u0438\u0441\u0442\u0438\u043a \u0438 \u0441\u0432\u043e\u0439\u0441\u0442\u0432 \u043a\u043e\u043d\u043a\u0440\u0435\u0442\u043d\u044b\u0445 \u0437\u0430\u0433\u0440\u044f\u0437\u043d\u0438\u0442\u0435\u043b\u0435\u0439 \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u043f... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:16", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 07:20:20 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '3335', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '794595', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '405ms', 'x-request-id': 'req_8d2821c6c017757c188bace02d543294', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb15049db8c9185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_8d2821c6c017757c188bace02d543294", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:20", "name": "llm_service", "levelname": "DEBUG", "message": "Maximum similarity: 0.8511610590975462, RELEVANCE_THRESHOLD_PROMPT: 0.8", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:20", "name": "llm_service", "levelname": "DEBUG", "message": "References appended to the answer. RELEVANCE_THRESHOLD_DOCS: 0.7", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:20", "name": "llm_service", "levelname": "DEBUG", "message": "Generating suggestions based on user prompt and LLM response.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "Request options: {'method': 'post', 'url': '/chat/completions', 'files': None, 'json_data': {'messages': [{'content': \"Given the following user prompt and LLM response, determine if additional information is needed to help the user fulfill their request and continue the conversation effectively. If yes, provide up to 3 additional prompts based on key concepts in the response, such as 'learn more about ...', 'how to determine ...', 'how to calculate ...', etc., that the user can use to gather more information. If no additional prompts are needed, respond with 'No suggestions needed'.\\n\\nUser Prompt: \u041a\u0430\u043a \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u043d\u0430 \u0432\u0430\u0448\u0435\u043c \u0443\u0447\u0430\u0441\u0442\u043a\u0435?\\n\\nLLM Response: \u0427\u0442\u043e\u0431\u044b \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u043d\u0430 \u0443\u0447\u0430\u0441\u0442\u043a\u0435, \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043c\u0435\u0442\u043e\u0434\u043e\u0432:\\n\\n1. <b>\u0411\u0443\u0440\u0435\u043d\u0438\u0435 \u0441\u043a\u0432\u0430\u0436\u0438\u043d</b>: \u041e\u0434\u0438\u043d \u0438\u0437 \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0442\u043e\u0447\u043d\u044b\u0445 \u0441\u043f\u043e\u0441\u043e\u0431\u043e\u0432. \u0411\u0443\u0440\u0435\u043d\u0438\u0435 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0433\u043b\u0443\u0431\u0438\u043d\u0443, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0435 \u0432\u043e\u0434\u044b, \u0438 \u043e\u0446\u0435\u043d\u0438\u0442\u044c \u0438\u0445 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0438 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e.\\n\\n2. <b>\u041d\u0430\u0431\u043b\u044e\u0434\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043a\u043e\u043b\u043e\u0434\u0446\u044b</b>: \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043a\u043e... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:20", "name": "openai._base_client", "levelname": "DEBUG", "message": "Sending HTTP Request: POST https://api.openai.com/v1/chat/completions", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "HTTP Response: POST https://api.openai.com/v1/chat/completions \"200 OK\" Headers({'date': 'Sun, 01 Dec 2024 07:20:20 GMT', 'content-type': 'application/json', 'transfer-encoding': 'chunked', 'connection': 'keep-alive', 'access-control-expose-headers': 'X-Request-ID', 'openai-organization': 'nuanu-wimbwa', 'openai-processing-ms': '247', 'openai-version': '2020-10-01', 'x-ratelimit-limit-requests': '5000', 'x-ratelimit-limit-tokens': '800000', 'x-ratelimit-remaining-requests': '4999', 'x-ratelimit-remaining-tokens': '799319', 'x-ratelimit-reset-requests': '12ms', 'x-ratelimit-reset-tokens': '51ms', 'x-request-id': 'req_44c8a6933c07c621ed3c5806ef6fb5fb', 'strict-transport-security': 'max-age=31536000; includeSubDomains; preload', 'cf-cache-status': 'DYNAMIC', 'x-content-type-options': 'nosniff', 'server': 'cloudflare', 'cf-ray': '8eb15065b92b9185-DPS', 'content-encoding': 'gzip', 'alt-svc': 'h3=\":443\"; ma=86400'})", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:21", "name": "openai._base_client", "levelname": "DEBUG", "message": "request_id: req_44c8a6933c07c621ed3c5806ef6fb5fb", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:21", "name": "llm_service", "levelname": "DEBUG", "message": "LLM determined that no suggestions are needed.", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:21", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: generate_response with result: ('\u0427\u0442\u043e\u0431\u044b \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u043d\u0430 \u0443\u0447\u0430\u0441\u0442\u043a\u0435, \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043c\u0435\u0442\u043e\u0434\u043e\u0432:\\n\\n1. <b>\u0411\u0443\u0440\u0435\u043d\u0438\u0435 \u0441\u043a\u0432\u0430\u0436\u0438\u043d</b>: \u041e\u0434\u0438\u043d \u0438\u0437 \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0442\u043e\u0447\u043d\u044b\u0445 \u0441\u043f\u043e\u0441\u043e\u0431\u043e\u0432. \u0411\u0443\u0440\u0435\u043d\u0438\u0435 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u044c \u0433\u043b\u0443\u0431\u0438\u043d\u0443, \u043d\u0430 \u043a\u043e\u0442\u043e\u0440\u043e\u0439 \u043d\u0430\u0445\u043e\u0434\u044f\u0442\u0441\u044f \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0435 \u0432\u043e\u0434\u044b, \u0438 \u043e\u0446\u0435\u043d\u0438\u0442\u044c \u0438\u0445 \u0443\u0440\u043e\u0432\u0435\u043d\u044c \u0438 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u043e.\\n\\n2. <b>\u041d\u0430\u0431\u043b\u044e\u0434\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0435 \u043a\u043e\u043b\u043e\u0434\u0446\u044b</b>: \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0430 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u044c\u043d\u044b\u0445 \u043a\u043e\u043b\u043e\u0434\u0446\u0435\u0432 \u0434\u043b\u044f \u043c\u043e\u043d\u0438\u0442\u043e\u0440\u0438\u043d\u0433\u0430 \u0443\u0440\u043e\u0432\u043d\u044f \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434 \u043d\u0430 \u043f\u0440\u043e\u0442\u044f\u0436\u0435\u043d\u0438\u0438 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0433\u043e \u0432\u0440\u0435\u043c\u0435\u043d\u0438. \u042d\u0442\u043e \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u043e\u0442\u0441\u043b\u0435\u0434\u0438\u0442\u044c \u0441\u0435\u0437\u043e\u043d\u043d\u044b\u0435 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u044f \u0443\u0440\u043e\u0432\u043d\u044f.\\n\\n3. <b>\u0418\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044f \u0438\u0437 \u0433\u0435\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u043a\u0430\u0440\u0442 \u0438 \u043e\u0442\u0447\u0435\u0442\u043e\u0432</b>: \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u0438\u0437 \u0443\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u0445 \u0433\u0435\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0445 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0439 \u0432 \u0432\u0430\u0448\u0435\u043c \u0440\u0430\u0439\u043e\u043d\u0435 \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u0438\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0441\u0440\u0435\u0434\u043d\u0435\u043c \u0443\u0440\u043e\u0432\u043d\u0435 \u0433\u0440\u0443\u043d\u0442\u043e\u0432\u044b\u0445 \u0432\u043e\u0434.\\n\\n4. <b>\u0413\u0438\u0434\u0440\u043e\u0433\u0435\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0437\u044b\u0441\u043a\u0430\u043d\u0438\u044f</b>: \u041f\u0440\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u043a\u043e\u043c\u043f\u043b\u0435\u043a\u0441\u043d\u044b\u0445 \u0438\u0441\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u043d\u0438\u0439, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0432\u043a\u043b\u044e\u0447\u0430\u044e\u0442 \u043e\u0442\u043a\u0430\u0447\u043a\u0438 \u0438 \u043d\u0430\u043b\u0438\u0432\u044b \u0432\u043e\u0434\u044b \u0432 \u0441\u043a\u0432\u0430\u0436\u0438\u043d\u044b \u0441 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0433\u043e \u043e\u0431\u043e\u0440\u0443\u0434\u043e\u0432\u0430\u043d\u0438\u044f.\\n\\n5. <b>\u041a\u043e\u043d\u0441\u0443\u043b\u044c\u0442\u0430\u0446\u0438\u044f \u0441 \u043c\u0435\u0441\u0442\u043d\u044b\u043c\u0438 \u0441\u043f\u0435\u0446\u0438\u0430\u043b\u0438\u0441\u0442\u0430\u043c\u0438</b>: \u041e\u0431\u0440\u0430\u0449\u0435\u043d\u0438\u0435 \u043a \u043f\u0440\u043e\u0444\u0435\u0441\u0441\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u043c \u0433\u0435\u043e\u043b\u043e\u0433\u0430\u043c \u0438\u043b\u0438 \u0438\u043d\u0436\u0435\u043d\u0435\u0440\u0430\u043c, \u043a\u043e\u0442\u043e\u0440\u044b\u0435... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:21", "name": "handlers", "levelname": "INFO", "message": "Generated response for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:21", "name": "handlers", "levelname": "DEBUG", "message": "Saved bot message for conversation_id='9a40f477-986c-41b1-9c30-20f951646af0'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:21", "name": "handlers", "levelname": "INFO", "message": "Sent response to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:21", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:57", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:57", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:57", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: English", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:57", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/references'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:57", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: references_command with args: (<handlers.BotHandlers object at 0x0000022A58739D60>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 12, 1, 7, 20, 56, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=11, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2803, supergroup_chat_created=False, text='/references'), update_id=881193823), <telegram.ext._callbackcontext.CallbackContext object at 0x0000022A5A7858D0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:57", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: references_command with result: <coroutine object BotHandlers.references_command at 0x0000022A5A06A110>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:58", "name": "handlers", "levelname": "INFO", "message": "Sent reference buttons to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:20:58", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:21:01", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:21:02", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:21:02", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: English", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:21:02", "name": "decorators", "levelname": "INFO", "message": "Event 'inline_button' triggered by user_id=244732168, message='get_file:file_0'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:21:02", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: send_file with args: (<handlers.BotHandlers object at 0x0000022A58739D60>, Update(callback_query=CallbackQuery(chat_instance='-7472414466751896971', data='get_file:file_0', from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), id='1051116661186534745', message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 12, 1, 7, 20, 57, tzinfo=datetime.timezone.utc), delete_chat_photo=False, from_user=User(first_name='Pdflyx', id=7836895356, is_bot=True, username='Pdflyx_bot'), group_chat_created=False, message_id=2804, reply_markup=InlineKeyboardMarkup(inline_keyboard=((InlineKeyboardButton(callback_data='get_file:file_0', text='\u0418\u043d\u0436\u0435\u043d\u0435\u0440\u043d\u043e \u0433\u0435\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0437\u044b\u0441\u043a\u0430\u043d\u0438\u044f_\u0421\u041f 446.1325800.2019 .pdf'),), (InlineKeyboardButton(callback_data='get_file:file_1', text='\u0418\u043d\u0436\u0435\u043d\u0435\u0440\u043d\u043e \u044d\u043a\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0437\u044b\u0441\u043a\u0430\u043d\u0438\u044f_\u0421\u041f 502.1325800.2021.pd... [TRUNCATED]", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:21:02", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: send_file with result: <coroutine object BotHandlers.send_file at 0x0000022A5A1B22A0>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:21:02", "name": "handlers", "levelname": "DEBUG", "message": "Initiated async task to send file '\u0418\u043d\u0436\u0435\u043d\u0435\u0440\u043d\u043e \u0433\u0435\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0437\u044b\u0441\u043a\u0430\u043d\u0438\u044f_\u0421\u041f 446.1325800.2019 .pdf' to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:21:02", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=inline_button", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 10:21:04", "name": "handlers", "levelname": "INFO", "message": "File '\u0418\u043d\u0436\u0435\u043d\u0435\u0440\u043d\u043e \u0433\u0435\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0437\u044b\u0441\u043a\u0430\u043d\u0438\u044f_\u0421\u041f 446.1325800.2019 .pdf' sent successfully to user_id=244732168.", "taskName": "Task-3516"}
{"asctime": "2024-12-01 12:58:11", "name": "decorators", "levelname": "DEBUG", "message": "User info saved for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 12:58:11", "name": "decorators", "levelname": "DEBUG", "message": "Updated last_active for user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 12:58:12", "name": "decorators", "levelname": "DEBUG", "message": "Fetched current_language for user_id=244732168: English", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 12:58:12", "name": "decorators", "levelname": "INFO", "message": "Event 'command' triggered by user_id=244732168, message='/status'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 12:58:12", "name": "decorators", "levelname": "DEBUG", "message": "Entering function: status with args: (<handlers.BotHandlers object at 0x0000022A58739D60>, Update(message=Message(channel_chat_created=False, chat=Chat(first_name='Andrey', id=244732168, type=<ChatType.PRIVATE>, username='Akumsk'), date=datetime.datetime(2024, 12, 1, 9, 58, 10, tzinfo=datetime.timezone.utc), delete_chat_photo=False, entities=(MessageEntity(length=7, offset=0, type=<MessageEntityType.BOT_COMMAND>),), from_user=User(first_name='Andrey', id=244732168, is_bot=False, is_premium=True, language_code='en', username='Akumsk'), group_chat_created=False, message_id=2806, supergroup_chat_created=False, text='/status'), update_id=881193825), <telegram.ext._callbackcontext.CallbackContext object at 0x0000022AA58DB7E0>), kwargs: {}", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 12:58:12", "name": "decorators", "levelname": "DEBUG", "message": "Exiting function: status with result: <coroutine object BotHandlers.status at 0x0000022A5A06AB90>", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 12:58:15", "name": "llm_service", "levelname": "INFO", "message": "Empty content on page 7 of document '\u0418\u043d\u0436\u0435\u043d\u0435\u0440\u043d\u043e \u0433\u0435\u043e\u043b\u043e\u0433\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0438\u0437\u044b\u0441\u043a\u0430\u043d\u0438\u044f_\u0421\u041f 446.1325800.2019 .pdf'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 12:58:16", "name": "llm_service", "levelname": "INFO", "message": "Empty content on page 86 of document '\u041d\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u0438 \u0432\u043e\u0437\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f_\u0421\u041f 20.13330.2016.pdf'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 12:58:16", "name": "llm_service", "levelname": "INFO", "message": "Empty content on page 1 of document '\u041d\u0435\u0441\u0443\u0449\u0438\u0435_\u0438_\u043e\u0433\u0440\u0430\u0436\u0434\u0430\u044e\u0449\u0438\u0435_\u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0446\u0438\u0438_\u0421\u041f_70_13330_2012.pdf'", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 12:58:20", "name": "handlers", "levelname": "INFO", "message": "Provided status to user_id=244732168", "taskName": "Application:7836895356:update_fetcher"}
{"asctime": "2024-12-01 12:58:20", "name": "decorators", "levelname": "DEBUG", "message": "Event log saved for user_id=244732168, event_type=command", "taskName": "Application:7836895356:update_fetcher"}
